//
// THIS FILE IS AUTOGENERATED! ANY MANUAL MODIFICATIONS WILL BE LOST!
//

using System;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using Tp.Integration.Common;
using Tp.Integration.Messages.Entities;

namespace Tp.Integration.Common
{
	// Autogenerated from TestCaseRun.hbm.xml properties: TestCaseRunID: Int32?, EndRunDate: DateTime?, StartRunDate: DateTime?, Passed: Boolean?, Runned: Boolean?, Status: TestCaseRunStatusDTO, Comment: string, NumericPriority: Double?, TestPlanRunID: int?, TestPlanRunName: string, RootTestPlanRunID: int?, RootTestPlanRunName: string, TestCaseTestPlanID: int?, TestCaseID: int?, TestCaseName: string, EntityTypeID: int?, EntityTypeName: string, FreezedTestCaseInfoID: int?, FreezedTestCaseInfoName: string, PriorityID: int?, PriorityName: string, LastExecutorID: int?, RunDate: DateTime?
	public partial interface ITestCaseRunDTO : IDataTransferObject
	{
		DateTime? EndRunDate { get; set; }
		DateTime? StartRunDate { get; set; }
		Boolean? Passed { get; set; }
		Boolean? Runned { get; set; }
		TestCaseRunStatusDTO Status { get; set; }
		string Comment { get; set; }
		Double? NumericPriority { get; set; }
		int? TestPlanRunID { get; set; }
		string TestPlanRunName { get; set; }
		int? RootTestPlanRunID { get; set; }
		string RootTestPlanRunName { get; set; }
		int? TestCaseTestPlanID { get; set; }
		int? TestCaseID { get; set; }
		string TestCaseName { get; set; }
		int? EntityTypeID { get; set; }
		string EntityTypeName { get; set; }
		int? FreezedTestCaseInfoID { get; set; }
		string FreezedTestCaseInfoName { get; set; }
		int? PriorityID { get; set; }
		string PriorityName { get; set; }
		int? LastExecutorID { get; set; }
		DateTime? RunDate { get; set; }
	}

	[Serializable]
	[DataContract]
	public partial class TestCaseRunDTO : DataTransferObject, ITestCaseRunDTO
	{
		[PrimaryKey]
		public override int? ID
		{
			get { return TestCaseRunID; }
			set
			{
				if (value == int.MinValue)
					value = null;

				TestCaseRunID = value;
			}
		}
		[PrimaryKey]
		[DataMember]
		[XmlElement(Order=3)]
		public Int32? TestCaseRunID { get; set; }

		
		[DataMember]
		[XmlElement(Order=4)]
		public DateTime? RunDate { get; set; }

		
		[DataMember]
		[XmlElement(Order=5)]
		public Boolean? Passed { get; set; }

		
		[DataMember]
		[XmlElement(Order=6)]
		public Boolean? Runned { get; set; }

		
		[DataMember]
		[XmlElement(Order=7)]
		public string Comment { get; set; }

		[ForeignKey]
		[DataMember]
		[XmlElement(Order=8)]
		public int? TestPlanRunID { get; set; }

		[ForeignKey]
		[DataMember]
		[XmlElement(Order=9)]
		public int? TestCaseTestPlanID { get; set; }

		[RelationName]
		[DataMember]
		[XmlElement(Order=10)]
		public string TestPlanRunName { get; set; }

		[ForeignKey]
		[DataMember]
		[XmlElement(Order=11)]
		public int? LastExecutorID { get; set; }

		
		[DataMember]
		[XmlElement(Order=12)]
		public DateTime? StartRunDate { get; set; }

		
		[DataMember]
		[XmlElement(Order=13)]
		public TestCaseRunStatusDTO Status { get; set; }

		
		[DataMember]
		[XmlElement(Order=14)]
		public DateTime? EndRunDate { get; set; }

		
		[DataMember]
		[XmlElement(Order=15)]
		public Double? NumericPriority { get; set; }

		[ForeignKey]
		[DataMember]
		[XmlElement(Order=16)]
		public int? RootTestPlanRunID { get; set; }

		[RelationName]
		[DataMember]
		[XmlElement(Order=17)]
		public string RootTestPlanRunName { get; set; }

		[ForeignKey]
		[DataMember]
		[XmlElement(Order=18)]
		public int? TestCaseID { get; set; }

		[RelationName]
		[DataMember]
		[XmlElement(Order=19)]
		public string TestCaseName { get; set; }

		[ForeignKey]
		[DataMember]
		[XmlElement(Order=20)]
		public int? EntityTypeID { get; set; }

		[RelationName]
		[DataMember]
		[XmlElement(Order=21)]
		public string EntityTypeName { get; set; }

		[ForeignKey]
		[DataMember]
		[XmlElement(Order=22)]
		public int? FreezedTestCaseInfoID { get; set; }

		[RelationName]
		[DataMember]
		[XmlElement(Order=23)]
		public string FreezedTestCaseInfoName { get; set; }

		[ForeignKey]
		[DataMember]
		[XmlElement(Order=24)]
		public int? PriorityID { get; set; }

		[RelationName]
		[DataMember]
		[XmlElement(Order=25)]
		public string PriorityName { get; set; }
	}

	public enum TestCaseRunField
	{
		RunDate,
		Passed,
		Runned,
		Comment,
		TestPlanRunID,
		TestCaseTestPlanID,
		TestPlanRunName,
		LastExecutorID,
		StartRunDate,
		Status,
		EndRunDate,
		NumericPriority,
		RootTestPlanRunID,
		RootTestPlanRunName,
		TestCaseID,
		TestCaseName,
		EntityTypeID,
		EntityTypeName,
		FreezedTestCaseInfoID,
		FreezedTestCaseInfoName,
		PriorityID,
		PriorityName,
	}
}
