
// 
// THIS FILE IS AUTOGENERATED! ANY MANUAL MODIFICATIONS WILL BE LOST!
//

namespace Tp.Integration.Common
{
	public interface IDTOVisitor<T>
	{
		T VisitDataTransferObject(IDataTransferObject o);
		T VisitApplicationContextData(IApplicationContextDataDTO entity);
		T VisitAssignable(IAssignableDTO entity);
		T VisitAssignableSquad(IAssignableSquadDTO entity);
		T VisitAttachment(IAttachmentDTO entity);
		T VisitAttachmentFile(IAttachmentFileDTO entity);
		T VisitBug(IBugDTO entity);
		T VisitBuild(IBuildDTO entity);
		T VisitClientStorage(IClientStorageDTO entity);
		T VisitClientStorageGroup(IClientStorageGroupDTO entity);
		T VisitComment(ICommentDTO entity);
		T VisitCompany(ICompanyDTO entity);
		T VisitCustomActivity(ICustomActivityDTO entity);
		T VisitCustomField(ICustomFieldDTO entity);
		T VisitCustomReport(ICustomReportDTO entity);
		T VisitCustomRule(ICustomRuleDTO entity);
		T VisitEntityState(IEntityStateDTO entity);
		T VisitEntityType(IEntityTypeDTO entity);
		T VisitEpic(IEpicDTO entity);
		T VisitExternalReference(IExternalReferenceDTO entity);
		T VisitFeature(IFeatureDTO entity);
		T VisitFreezedTestCaseInfo(IFreezedTestCaseInfoDTO entity);
		T VisitFreezedTestStepInfo(IFreezedTestStepInfoDTO entity);
		T VisitGeneral(IGeneralDTO entity);
		T VisitGeneralFieldExtension(IGeneralFieldExtensionDTO entity);
		T VisitGeneralListItem(IGeneralListItemDTO entity);
		T VisitGeneralNumericPriorityListItem(IGeneralNumericPriorityListItemDTO entity);
		T VisitGeneralConversion(IGeneralConversionDTO entity);
		T VisitGeneralFollower(IGeneralFollowerDTO entity);
		T VisitGeneralRelation(IGeneralRelationDTO entity);
		T VisitGeneralRelationType(IGeneralRelationTypeDTO entity);
		T VisitGlobalSetting(IGlobalSettingDTO entity);
		T VisitImpediment(IImpedimentDTO entity);
		T VisitIteration(IIterationDTO entity);
		T VisitLicense(ILicenseDTO entity);
		T VisitLookupGeneralListItem(ILookupGeneralListItemDTO entity);
		T VisitMessage(IMessageDTO entity);
		T VisitMessageGeneral(IMessageGeneralDTO entity);
		T VisitMessageUid(IMessageUidDTO entity);
		T VisitMilestone(IMilestoneDTO entity);
		T VisitPasswordRecovery(IPasswordRecoveryDTO entity);
		T VisitPluginProfile(IPluginProfileDTO entity);
		T VisitPluginProfileMessage(IPluginProfileMessageDTO entity);
		T VisitPractice(IPracticeDTO entity);
		T VisitPriority(IPriorityDTO entity);
		T VisitProcess(IProcessDTO entity);
		T VisitProcessPractice(IProcessPracticeDTO entity);
		T VisitProcessAdmin(IProcessAdminDTO entity);
		T VisitProgram(IProgramDTO entity);
		T VisitProject(IProjectDTO entity);
		T VisitProjectAllocation(IProjectAllocationDTO entity);
		T VisitProjectMember(IProjectMemberDTO entity);
		T VisitRelease(IReleaseDTO entity);
		T VisitReleaseProject(IReleaseProjectDTO entity);
		T VisitRequest(IRequestDTO entity);
		T VisitRequestRequester(IRequestRequesterDTO entity);
		T VisitRequestType(IRequestTypeDTO entity);
		T VisitRevision(IRevisionDTO entity);
		T VisitRevisionAssignable(IRevisionAssignableDTO entity);
		T VisitRevisionFile(IRevisionFileDTO entity);
		T VisitRole(IRoleDTO entity);
		T VisitRoleEffort(IRoleEffortDTO entity);
		T VisitRoleEntityType(IRoleEntityTypeDTO entity);
		T VisitRule(IRuleDTO entity);
		T VisitSavedFilter(ISavedFilterDTO entity);
		T VisitSeverity(ISeverityDTO entity);
		T VisitSquad(ISquadDTO entity);
		T VisitSquadIteration(ISquadIterationDTO entity);
		T VisitSquadMember(ISquadMemberDTO entity);
		T VisitSquadProject(ISquadProjectDTO entity);
		T VisitSquadProjectAllocation(ISquadProjectAllocationDTO entity);
		T VisitTag(ITagDTO entity);
		T VisitTagGeneral(ITagGeneralDTO entity);
		T VisitTask(ITaskDTO entity);
		T VisitTeam(ITeamDTO entity);
		T VisitTeamListItem(ITeamListItemDTO entity);
		T VisitTerm(ITermDTO entity);
		T VisitTestCase(ITestCaseDTO entity);
		T VisitTestCaseRun(ITestCaseRunDTO entity);
		T VisitTestCaseRunBug(ITestCaseRunBugDTO entity);
		T VisitTestCaseTestPlan(ITestCaseTestPlanDTO entity);
		T VisitTestItemTestPlanLink(ITestItemTestPlanLinkDTO entity);
		T VisitTestPlan(ITestPlanDTO entity);
		T VisitTestPlanRun(ITestPlanRunDTO entity);
		T VisitTestPlanRunBug(ITestPlanRunBugDTO entity);
		T VisitTestPlanTestPlan(ITestPlanTestPlanDTO entity);
		T VisitTestRunItemHierarchyLink(ITestRunItemHierarchyLinkDTO entity);
		T VisitTestStep(ITestStepDTO entity);
		T VisitTestStepRun(ITestStepRunDTO entity);
		T VisitTime(ITimeDTO entity);
		T VisitTpEvent(ITpEventDTO entity);
		T VisitTpProfile(ITpProfileDTO entity);
		T VisitTpProjectProfile(ITpProjectProfileDTO entity);
		T VisitTpSession(ITpSessionDTO entity);
		T VisitUser(IUserDTO entity);
		T VisitSystemUser(ISystemUserDTO entity);
		T VisitRequester(IRequesterDTO entity);
		T VisitContact(IContactDTO entity);
		T VisitRuleEngineUser(IRuleEngineUserDTO entity);
		T VisitMetricsUser(IMetricsUserDTO entity);
		T VisitGeneralUser(IGeneralUserDTO entity);
		T VisitUserProjectAllocation(IUserProjectAllocationDTO entity);
		T VisitUserStory(IUserStoryDTO entity);
		T VisitWorkflow(IWorkflowDTO entity);
	}

	public class DTOVisitor<T> : IDTOVisitor<T>
	{
		public virtual T VisitDataTransferObject(IDataTransferObject dto)
		{
			throw new System.NotImplementedException();
		}
	
		public virtual T VisitApplicationContextData(IApplicationContextDataDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitAssignable(IAssignableDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitAssignableSquad(IAssignableSquadDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitAttachment(IAttachmentDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitAttachmentFile(IAttachmentFileDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitBug(IBugDTO dto)
		{
			return VisitAssignable(dto);
		}
		public virtual T VisitBuild(IBuildDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitClientStorage(IClientStorageDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitClientStorageGroup(IClientStorageGroupDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitComment(ICommentDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitCompany(ICompanyDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitCustomActivity(ICustomActivityDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitCustomField(ICustomFieldDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitCustomReport(ICustomReportDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitCustomRule(ICustomRuleDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitEntityState(IEntityStateDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitEntityType(IEntityTypeDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitEpic(IEpicDTO dto)
		{
			return VisitAssignable(dto);
		}
		public virtual T VisitExternalReference(IExternalReferenceDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitFeature(IFeatureDTO dto)
		{
			return VisitAssignable(dto);
		}
		public virtual T VisitFreezedTestCaseInfo(IFreezedTestCaseInfoDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitFreezedTestStepInfo(IFreezedTestStepInfoDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGeneral(IGeneralDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGeneralFieldExtension(IGeneralFieldExtensionDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGeneralListItem(IGeneralListItemDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGeneralNumericPriorityListItem(IGeneralNumericPriorityListItemDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGeneralConversion(IGeneralConversionDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGeneralFollower(IGeneralFollowerDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGeneralRelation(IGeneralRelationDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGeneralRelationType(IGeneralRelationTypeDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitGlobalSetting(IGlobalSettingDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitImpediment(IImpedimentDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitIteration(IIterationDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitLicense(ILicenseDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitLookupGeneralListItem(ILookupGeneralListItemDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitMessage(IMessageDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitMessageGeneral(IMessageGeneralDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitMessageUid(IMessageUidDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitMilestone(IMilestoneDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitPasswordRecovery(IPasswordRecoveryDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitPluginProfile(IPluginProfileDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitPluginProfileMessage(IPluginProfileMessageDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitPractice(IPracticeDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitPriority(IPriorityDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitProcess(IProcessDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitProcessPractice(IProcessPracticeDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitProcessAdmin(IProcessAdminDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitProgram(IProgramDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitProject(IProjectDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitProjectAllocation(IProjectAllocationDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitProjectMember(IProjectMemberDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRelease(IReleaseDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitReleaseProject(IReleaseProjectDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRequest(IRequestDTO dto)
		{
			return VisitAssignable(dto);
		}
		public virtual T VisitRequestRequester(IRequestRequesterDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRequestType(IRequestTypeDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRevision(IRevisionDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRevisionAssignable(IRevisionAssignableDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRevisionFile(IRevisionFileDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRole(IRoleDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRoleEffort(IRoleEffortDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRoleEntityType(IRoleEntityTypeDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitRule(IRuleDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitSavedFilter(ISavedFilterDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitSeverity(ISeverityDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitSquad(ISquadDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitSquadIteration(ISquadIterationDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitSquadMember(ISquadMemberDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitSquadProject(ISquadProjectDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitSquadProjectAllocation(ISquadProjectAllocationDTO dto)
		{
			return VisitProjectAllocation(dto);
		}
		public virtual T VisitTag(ITagDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTagGeneral(ITagGeneralDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTask(ITaskDTO dto)
		{
			return VisitAssignable(dto);
		}
		public virtual T VisitTeam(ITeamDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTeamListItem(ITeamListItemDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTerm(ITermDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestCase(ITestCaseDTO dto)
		{
			return VisitGeneral(dto);
		}
		public virtual T VisitTestCaseRun(ITestCaseRunDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestCaseRunBug(ITestCaseRunBugDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestCaseTestPlan(ITestCaseTestPlanDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestItemTestPlanLink(ITestItemTestPlanLinkDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestPlan(ITestPlanDTO dto)
		{
			return VisitAssignable(dto);
		}
		public virtual T VisitTestPlanRun(ITestPlanRunDTO dto)
		{
			return VisitAssignable(dto);
		}
		public virtual T VisitTestPlanRunBug(ITestPlanRunBugDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestPlanTestPlan(ITestPlanTestPlanDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestRunItemHierarchyLink(ITestRunItemHierarchyLinkDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestStep(ITestStepDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTestStepRun(ITestStepRunDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTime(ITimeDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTpEvent(ITpEventDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTpProfile(ITpProfileDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTpProjectProfile(ITpProjectProfileDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitTpSession(ITpSessionDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitUser(IUserDTO dto)
		{
			return VisitGeneralUser(dto);
		}
		public virtual T VisitSystemUser(ISystemUserDTO dto)
		{
			return VisitGeneralUser(dto);
		}
		public virtual T VisitRequester(IRequesterDTO dto)
		{
			return VisitGeneralUser(dto);
		}
		public virtual T VisitContact(IContactDTO dto)
		{
			return VisitGeneralUser(dto);
		}
		public virtual T VisitRuleEngineUser(IRuleEngineUserDTO dto)
		{
			return VisitGeneralUser(dto);
		}
		public virtual T VisitMetricsUser(IMetricsUserDTO dto)
		{
			return VisitGeneralUser(dto);
		}
		public virtual T VisitGeneralUser(IGeneralUserDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
		public virtual T VisitUserProjectAllocation(IUserProjectAllocationDTO dto)
		{
			return VisitProjectAllocation(dto);
		}
		public virtual T VisitUserStory(IUserStoryDTO dto)
		{
			return VisitAssignable(dto);
		}
		public virtual T VisitWorkflow(IWorkflowDTO dto)
		{
			return VisitDataTransferObject(dto);
		}
	}

	public partial class ApplicationContextDataDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitApplicationContextData(this);
		}
	}
	public partial class AssignableDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitAssignable(this);
		}
	}
	public partial class AssignableSquadDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitAssignableSquad(this);
		}
	}
	public partial class AttachmentDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitAttachment(this);
		}
	}
	public partial class AttachmentFileDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitAttachmentFile(this);
		}
	}
	public partial class BugDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitBug(this);
		}
	}
	public partial class BuildDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitBuild(this);
		}
	}
	public partial class ClientStorageDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitClientStorage(this);
		}
	}
	public partial class ClientStorageGroupDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitClientStorageGroup(this);
		}
	}
	public partial class CommentDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitComment(this);
		}
	}
	public partial class CompanyDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitCompany(this);
		}
	}
	public partial class CustomActivityDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitCustomActivity(this);
		}
	}
	public partial class CustomFieldDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitCustomField(this);
		}
	}
	public partial class CustomReportDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitCustomReport(this);
		}
	}
	public partial class CustomRuleDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitCustomRule(this);
		}
	}
	public partial class EntityStateDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitEntityState(this);
		}
	}
	public partial class EntityTypeDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitEntityType(this);
		}
	}
	public partial class EpicDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitEpic(this);
		}
	}
	public partial class ExternalReferenceDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitExternalReference(this);
		}
	}
	public partial class FeatureDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitFeature(this);
		}
	}
	public partial class FreezedTestCaseInfoDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitFreezedTestCaseInfo(this);
		}
	}
	public partial class FreezedTestStepInfoDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitFreezedTestStepInfo(this);
		}
	}
	public partial class GeneralDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneral(this);
		}
	}
	public partial class GeneralFieldExtensionDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneralFieldExtension(this);
		}
	}
	public partial class GeneralListItemDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneralListItem(this);
		}
	}
	public partial class GeneralNumericPriorityListItemDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneralNumericPriorityListItem(this);
		}
	}
	public partial class GeneralConversionDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneralConversion(this);
		}
	}
	public partial class GeneralFollowerDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneralFollower(this);
		}
	}
	public partial class GeneralRelationDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneralRelation(this);
		}
	}
	public partial class GeneralRelationTypeDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneralRelationType(this);
		}
	}
	public partial class GlobalSettingDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGlobalSetting(this);
		}
	}
	public partial class ImpedimentDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitImpediment(this);
		}
	}
	public partial class IterationDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitIteration(this);
		}
	}
	public partial class LicenseDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitLicense(this);
		}
	}
	public partial class LookupGeneralListItemDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitLookupGeneralListItem(this);
		}
	}
	public partial class MessageDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitMessage(this);
		}
	}
	public partial class MessageGeneralDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitMessageGeneral(this);
		}
	}
	public partial class MessageUidDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitMessageUid(this);
		}
	}
	public partial class MilestoneDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitMilestone(this);
		}
	}
	public partial class PasswordRecoveryDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitPasswordRecovery(this);
		}
	}
	public partial class PluginProfileDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitPluginProfile(this);
		}
	}
	public partial class PluginProfileMessageDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitPluginProfileMessage(this);
		}
	}
	public partial class PracticeDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitPractice(this);
		}
	}
	public partial class PriorityDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitPriority(this);
		}
	}
	public partial class ProcessDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitProcess(this);
		}
	}
	public partial class ProcessPracticeDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitProcessPractice(this);
		}
	}
	public partial class ProcessAdminDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitProcessAdmin(this);
		}
	}
	public partial class ProgramDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitProgram(this);
		}
	}
	public partial class ProjectDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitProject(this);
		}
	}
	public partial class ProjectAllocationDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitProjectAllocation(this);
		}
	}
	public partial class ProjectMemberDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitProjectMember(this);
		}
	}
	public partial class ReleaseDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRelease(this);
		}
	}
	public partial class ReleaseProjectDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitReleaseProject(this);
		}
	}
	public partial class RequestDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRequest(this);
		}
	}
	public partial class RequestRequesterDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRequestRequester(this);
		}
	}
	public partial class RequestTypeDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRequestType(this);
		}
	}
	public partial class RevisionDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRevision(this);
		}
	}
	public partial class RevisionAssignableDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRevisionAssignable(this);
		}
	}
	public partial class RevisionFileDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRevisionFile(this);
		}
	}
	public partial class RoleDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRole(this);
		}
	}
	public partial class RoleEffortDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRoleEffort(this);
		}
	}
	public partial class RoleEntityTypeDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRoleEntityType(this);
		}
	}
	public partial class RuleDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRule(this);
		}
	}
	public partial class SavedFilterDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitSavedFilter(this);
		}
	}
	public partial class SeverityDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitSeverity(this);
		}
	}
	public partial class SquadDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitSquad(this);
		}
	}
	public partial class SquadIterationDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitSquadIteration(this);
		}
	}
	public partial class SquadMemberDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitSquadMember(this);
		}
	}
	public partial class SquadProjectDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitSquadProject(this);
		}
	}
	public partial class SquadProjectAllocationDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitSquadProjectAllocation(this);
		}
	}
	public partial class TagDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTag(this);
		}
	}
	public partial class TagGeneralDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTagGeneral(this);
		}
	}
	public partial class TaskDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTask(this);
		}
	}
	public partial class TeamDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTeam(this);
		}
	}
	public partial class TeamListItemDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTeamListItem(this);
		}
	}
	public partial class TermDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTerm(this);
		}
	}
	public partial class TestCaseDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestCase(this);
		}
	}
	public partial class TestCaseRunDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestCaseRun(this);
		}
	}
	public partial class TestCaseRunBugDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestCaseRunBug(this);
		}
	}
	public partial class TestCaseTestPlanDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestCaseTestPlan(this);
		}
	}
	public partial class TestItemTestPlanLinkDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestItemTestPlanLink(this);
		}
	}
	public partial class TestPlanDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestPlan(this);
		}
	}
	public partial class TestPlanRunDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestPlanRun(this);
		}
	}
	public partial class TestPlanRunBugDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestPlanRunBug(this);
		}
	}
	public partial class TestPlanTestPlanDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestPlanTestPlan(this);
		}
	}
	public partial class TestRunItemHierarchyLinkDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestRunItemHierarchyLink(this);
		}
	}
	public partial class TestStepDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestStep(this);
		}
	}
	public partial class TestStepRunDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTestStepRun(this);
		}
	}
	public partial class TimeDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTime(this);
		}
	}
	public partial class TpEventDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTpEvent(this);
		}
	}
	public partial class TpProfileDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTpProfile(this);
		}
	}
	public partial class TpProjectProfileDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTpProjectProfile(this);
		}
	}
	public partial class TpSessionDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitTpSession(this);
		}
	}
	public partial class UserDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitUser(this);
		}
	}
	public partial class SystemUserDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitSystemUser(this);
		}
	}
	public partial class RequesterDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRequester(this);
		}
	}
	public partial class ContactDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitContact(this);
		}
	}
	public partial class RuleEngineUserDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitRuleEngineUser(this);
		}
	}
	public partial class MetricsUserDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitMetricsUser(this);
		}
	}
	public partial class GeneralUserDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitGeneralUser(this);
		}
	}
	public partial class UserProjectAllocationDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitUserProjectAllocation(this);
		}
	}
	public partial class UserStoryDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitUserStory(this);
		}
	}
	public partial class WorkflowDTO
	{
		public override T Accept<T>(IDTOVisitor<T> visitor)
		{
			return visitor.VisitWorkflow(this);
		}
	}
}