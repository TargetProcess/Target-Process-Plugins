// Generated by TinyPG v1.3 available at www.codeproject.com

using System.Collections.Generic;
using System.Xml.Serialization;

namespace System.Linq.Dynamic
{
    public class Token
    {
        // contains all prior skipped symbols

        public string File { get; set; }

        public int Line { get; set; }

        public int Column { get; set; }

        public int StartPos { get; set; }

        public int Length => EndPos - StartPos;

        public int EndPos { get; set; }

        public string Text { get; set; }

        public List<Token> Skipped { get; set; }

        public object Value { get; set; }

        [XmlAttribute] public TokenType Type;

        public Token()
            : this(0, 0)
        {
        }

        public Token(int start, int end)
        {
            Type = TokenType._UNDETERMINED_;
            StartPos = start;
            EndPos = end;
            Text = ""; // must initialize with empty string, may cause null reference exceptions otherwise
            Value = null;
        }

        public void UpdateRange(Token token)
        {
            if (token.StartPos < StartPos) StartPos = token.StartPos;
            if (token.EndPos > EndPos) EndPos = token.EndPos;
        }

        public override string ToString()
        {
            return Text != null ? $"{Type} '{Text}'" : Type.ToString();
        }
    }
}
