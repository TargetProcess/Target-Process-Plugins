//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\ExpressionLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tp.Core.Expressions.Parsing.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class ExpressionLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		COMMA=1, QUESTION=2, COLON=3, AMPERSAND=4, LOGICAL_AND=5, LOGICAL_OR=6, 
		LOGICAL_NOT=7, IN=8, GREATER=9, GREATER_OR_EQUAL=10, LESS=11, LESS_OR_EQUAL=12, 
		NOT_EQUAL=13, EQUAL=14, PAREN_OPEN=15, PAREN_CLOSE=16, CURLY_OPEN=17, 
		CURLY_CLOSE=18, SQUARE_OPEN=19, SQUARE_CLOSE=20, DOT=21, MULT=22, DIV=23, 
		PLUS=24, MINUS=25, TRUE=26, FALSE=27, NULL=28, AS=29, NEW=30, ASC=31, 
		DESC=32, INTEGER_NUMBER=33, FLOAT_NUMBER=34, STRING=35, ALPHANUMERIC_IDENTIFIER=36, 
		WS=37;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"COMMA", "QUESTION", "COLON", "AMPERSAND", "LOGICAL_AND", "LOGICAL_OR", 
		"LOGICAL_NOT", "IN", "GREATER", "GREATER_OR_EQUAL", "LESS", "LESS_OR_EQUAL", 
		"NOT_EQUAL", "EQUAL", "PAREN_OPEN", "PAREN_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", 
		"SQUARE_OPEN", "SQUARE_CLOSE", "DOT", "MULT", "DIV", "PLUS", "MINUS", 
		"TRUE", "FALSE", "NULL", "AS", "NEW", "ASC", "DESC", "INTEGER_NUMBER", 
		"FLOAT_NUMBER", "STRING", "ALPHANUMERIC_IDENTIFIER", "ALPHA", "SIGN", 
		"EXPONENT", "DIGIT", "WS"
	};


	public ExpressionLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ExpressionLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", "'?'", "':'", "'&'", null, null, null, null, "'>'", "'>='", 
		"'<'", "'<='", null, null, "'('", "')'", "'{'", "'}'", "'['", "']'", "'.'", 
		"'*'", "'/'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "COMMA", "QUESTION", "COLON", "AMPERSAND", "LOGICAL_AND", "LOGICAL_OR", 
		"LOGICAL_NOT", "IN", "GREATER", "GREATER_OR_EQUAL", "LESS", "LESS_OR_EQUAL", 
		"NOT_EQUAL", "EQUAL", "PAREN_OPEN", "PAREN_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", 
		"SQUARE_OPEN", "SQUARE_CLOSE", "DOT", "MULT", "DIV", "PLUS", "MINUS", 
		"TRUE", "FALSE", "NULL", "AS", "NEW", "ASC", "DESC", "INTEGER_NUMBER", 
		"FLOAT_NUMBER", "STRING", "ALPHANUMERIC_IDENTIFIER", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ExpressionLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ExpressionLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\'', '\x11C', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x4', ')', 
		'\t', ')', '\x4', '*', '\t', '*', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x5', '\x6', '\x63', '\n', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x5', '\a', 'i', '\n', '\a', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x5', '\b', 'o', '\n', '\b', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x5', '\xE', 
		'\x82', '\n', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x5', 
		'\xF', '\x87', '\n', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', 
		'\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', 
		'\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', 
		'\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1C', 
		'\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', 
		'\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', 
		'\x3', '\x1F', '\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\x3', 
		' ', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\x5', 
		' ', '\xBF', '\n', ' ', '\x3', '!', '\x3', '!', '\x3', '!', '\x3', '!', 
		'\x3', '!', '\x3', '!', '\x3', '!', '\x3', '!', '\x3', '!', '\x3', '!', 
		'\x5', '!', '\xCB', '\n', '!', '\x3', '\"', '\x6', '\"', '\xCE', '\n', 
		'\"', '\r', '\"', '\xE', '\"', '\xCF', '\x3', '#', '\x6', '#', '\xD3', 
		'\n', '#', '\r', '#', '\xE', '#', '\xD4', '\x3', '#', '\x3', '#', '\x6', 
		'#', '\xD9', '\n', '#', '\r', '#', '\xE', '#', '\xDA', '\x5', '#', '\xDD', 
		'\n', '#', '\x3', '#', '\x5', '#', '\xE0', '\n', '#', '\x3', '#', '\x5', 
		'#', '\xE3', '\n', '#', '\x3', '$', '\x3', '$', '\x3', '$', '\x3', '$', 
		'\a', '$', '\xE9', '\n', '$', '\f', '$', '\xE', '$', '\xEC', '\v', '$', 
		'\x3', '$', '\x3', '$', '\x3', '$', '\x3', '$', '\x3', '$', '\a', '$', 
		'\xF3', '\n', '$', '\f', '$', '\xE', '$', '\xF6', '\v', '$', '\x3', '$', 
		'\x5', '$', '\xF9', '\n', '$', '\x3', '%', '\x3', '%', '\x5', '%', '\xFD', 
		'\n', '%', '\x3', '%', '\x3', '%', '\x3', '%', '\a', '%', '\x102', '\n', 
		'%', '\f', '%', '\xE', '%', '\x105', '\v', '%', '\x3', '&', '\x3', '&', 
		'\x3', '\'', '\x3', '\'', '\x3', '(', '\x3', '(', '\x5', '(', '\x10D', 
		'\n', '(', '\x3', '(', '\x6', '(', '\x110', '\n', '(', '\r', '(', '\xE', 
		'(', '\x111', '\x3', ')', '\x3', ')', '\x3', '*', '\x6', '*', '\x117', 
		'\n', '*', '\r', '*', '\xE', '*', '\x118', '\x3', '*', '\x3', '*', '\x2', 
		'\x2', '+', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', 
		'\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', 
		'\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', 
		'!', '\x12', '#', '\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '+', 
		'\x17', '-', '\x18', '/', '\x19', '\x31', '\x1A', '\x33', '\x1B', '\x35', 
		'\x1C', '\x37', '\x1D', '\x39', '\x1E', ';', '\x1F', '=', ' ', '?', '!', 
		'\x41', '\"', '\x43', '#', '\x45', '$', 'G', '%', 'I', '&', 'K', '\x2', 
		'M', '\x2', 'O', '\x2', 'Q', '\x2', 'S', '\'', '\x3', '\x2', '\x16', '\x4', 
		'\x2', '\x43', '\x43', '\x63', '\x63', '\x4', '\x2', 'P', 'P', 'p', 'p', 
		'\x4', '\x2', '\x46', '\x46', '\x66', '\x66', '\x4', '\x2', 'Q', 'Q', 
		'q', 'q', '\x4', '\x2', 'T', 'T', 't', 't', '\x4', '\x2', 'V', 'V', 'v', 
		'v', '\x4', '\x2', 'K', 'K', 'k', 'k', '\x4', '\x2', 'W', 'W', 'w', 'w', 
		'\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', 'H', 'H', 'h', 'h', '\x4', 
		'\x2', 'N', 'N', 'n', 'n', '\x4', '\x2', 'U', 'U', 'u', 'u', '\x4', '\x2', 
		'Y', 'Y', 'y', 'y', '\x4', '\x2', '\x45', '\x45', '\x65', '\x65', '\x4', 
		'\x2', 'I', 'I', 'i', 'i', '\x5', '\x2', '\f', '\f', '\xF', '\xF', '$', 
		'$', '\x5', '\x2', '\f', '\f', '\xF', '\xF', ')', ')', '\xF', '\x2', '\x43', 
		'\\', '\x63', '|', '\xC2', '\xD8', '\xDA', '\xF8', '\xFA', '\x301', '\x372', 
		'\x37F', '\x381', '\x2001', '\x200E', '\x200F', '\x2072', '\x2191', '\x2C02', 
		'\x2FF1', '\x3003', '\xD801', '\xF902', '\xFDD1', '\xFDF2', '\xFFFF', 
		'\x3', '\x2', '\x32', ';', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x2', '\x130', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', 
		'\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x41', '\x3', '\x2', '\x2', '\x2', '\x2', '\x43', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x45', '\x3', '\x2', '\x2', '\x2', '\x2', 'G', '\x3', 
		'\x2', '\x2', '\x2', '\x2', 'I', '\x3', '\x2', '\x2', '\x2', '\x2', 'S', 
		'\x3', '\x2', '\x2', '\x2', '\x3', 'U', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'W', '\x3', '\x2', '\x2', '\x2', '\a', 'Y', '\x3', '\x2', '\x2', '\x2', 
		'\t', '[', '\x3', '\x2', '\x2', '\x2', '\v', '\x62', '\x3', '\x2', '\x2', 
		'\x2', '\r', 'h', '\x3', '\x2', '\x2', '\x2', '\xF', 'n', '\x3', '\x2', 
		'\x2', '\x2', '\x11', 'p', '\x3', '\x2', '\x2', '\x2', '\x13', 's', '\x3', 
		'\x2', '\x2', '\x2', '\x15', 'u', '\x3', '\x2', '\x2', '\x2', '\x17', 
		'x', '\x3', '\x2', '\x2', '\x2', '\x19', 'z', '\x3', '\x2', '\x2', '\x2', 
		'\x1B', '\x81', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x86', '\x3', '\x2', 
		'\x2', '\x2', '\x1F', '\x88', '\x3', '\x2', '\x2', '\x2', '!', '\x8A', 
		'\x3', '\x2', '\x2', '\x2', '#', '\x8C', '\x3', '\x2', '\x2', '\x2', '%', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '\'', '\x90', '\x3', '\x2', '\x2', 
		'\x2', ')', '\x92', '\x3', '\x2', '\x2', '\x2', '+', '\x94', '\x3', '\x2', 
		'\x2', '\x2', '-', '\x96', '\x3', '\x2', '\x2', '\x2', '/', '\x98', '\x3', 
		'\x2', '\x2', '\x2', '\x31', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x33', 
		'\x9C', '\x3', '\x2', '\x2', '\x2', '\x35', '\x9E', '\x3', '\x2', '\x2', 
		'\x2', '\x37', '\xA3', '\x3', '\x2', '\x2', '\x2', '\x39', '\xA9', '\x3', 
		'\x2', '\x2', '\x2', ';', '\xAE', '\x3', '\x2', '\x2', '\x2', '=', '\xB1', 
		'\x3', '\x2', '\x2', '\x2', '?', '\xB5', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\xC0', '\x3', '\x2', '\x2', '\x2', '\x43', '\xCD', '\x3', '\x2', '\x2', 
		'\x2', '\x45', '\xD2', '\x3', '\x2', '\x2', '\x2', 'G', '\xF8', '\x3', 
		'\x2', '\x2', '\x2', 'I', '\xFC', '\x3', '\x2', '\x2', '\x2', 'K', '\x106', 
		'\x3', '\x2', '\x2', '\x2', 'M', '\x108', '\x3', '\x2', '\x2', '\x2', 
		'O', '\x10A', '\x3', '\x2', '\x2', '\x2', 'Q', '\x113', '\x3', '\x2', 
		'\x2', '\x2', 'S', '\x116', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\a', 
		'.', '\x2', '\x2', 'V', '\x4', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\a', 
		'\x41', '\x2', '\x2', 'X', '\x6', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', 
		'\a', '<', '\x2', '\x2', 'Z', '\b', '\x3', '\x2', '\x2', '\x2', '[', '\\', 
		'\a', '(', '\x2', '\x2', '\\', '\n', '\x3', '\x2', '\x2', '\x2', ']', 
		'^', '\t', '\x2', '\x2', '\x2', '^', '_', '\t', '\x3', '\x2', '\x2', '_', 
		'\x63', '\t', '\x4', '\x2', '\x2', '`', '\x61', '\a', '(', '\x2', '\x2', 
		'\x61', '\x63', '\a', '(', '\x2', '\x2', '\x62', ']', '\x3', '\x2', '\x2', 
		'\x2', '\x62', '`', '\x3', '\x2', '\x2', '\x2', '\x63', '\f', '\x3', '\x2', 
		'\x2', '\x2', '\x64', '\x65', '\a', '~', '\x2', '\x2', '\x65', 'i', '\a', 
		'~', '\x2', '\x2', '\x66', 'g', '\t', '\x5', '\x2', '\x2', 'g', 'i', '\t', 
		'\x6', '\x2', '\x2', 'h', '\x64', '\x3', '\x2', '\x2', '\x2', 'h', '\x66', 
		'\x3', '\x2', '\x2', '\x2', 'i', '\xE', '\x3', '\x2', '\x2', '\x2', 'j', 
		'k', '\t', '\x3', '\x2', '\x2', 'k', 'l', '\t', '\x5', '\x2', '\x2', 'l', 
		'o', '\t', '\a', '\x2', '\x2', 'm', 'o', '\a', '#', '\x2', '\x2', 'n', 
		'j', '\x3', '\x2', '\x2', '\x2', 'n', 'm', '\x3', '\x2', '\x2', '\x2', 
		'o', '\x10', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\t', '\b', '\x2', 
		'\x2', 'q', 'r', '\t', '\x3', '\x2', '\x2', 'r', '\x12', '\x3', '\x2', 
		'\x2', '\x2', 's', 't', '\a', '@', '\x2', '\x2', 't', '\x14', '\x3', '\x2', 
		'\x2', '\x2', 'u', 'v', '\a', '@', '\x2', '\x2', 'v', 'w', '\a', '?', 
		'\x2', '\x2', 'w', '\x16', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', 
		'>', '\x2', '\x2', 'y', '\x18', '\x3', '\x2', '\x2', '\x2', 'z', '{', 
		'\a', '>', '\x2', '\x2', '{', '|', '\a', '?', '\x2', '\x2', '|', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', '}', '~', '\a', '#', '\x2', '\x2', '~', '\x82', 
		'\a', '?', '\x2', '\x2', '\x7F', '\x80', '\a', '>', '\x2', '\x2', '\x80', 
		'\x82', '\a', '@', '\x2', '\x2', '\x81', '}', '\x3', '\x2', '\x2', '\x2', 
		'\x81', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x82', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '\x83', '\x84', '\a', '?', '\x2', '\x2', '\x84', '\x87', 
		'\a', '?', '\x2', '\x2', '\x85', '\x87', '\a', '?', '\x2', '\x2', '\x86', 
		'\x83', '\x3', '\x2', '\x2', '\x2', '\x86', '\x85', '\x3', '\x2', '\x2', 
		'\x2', '\x87', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\a', 
		'*', '\x2', '\x2', '\x89', ' ', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x8B', 
		'\a', '+', '\x2', '\x2', '\x8B', '\"', '\x3', '\x2', '\x2', '\x2', '\x8C', 
		'\x8D', '\a', '}', '\x2', '\x2', '\x8D', '$', '\x3', '\x2', '\x2', '\x2', 
		'\x8E', '\x8F', '\a', '\x7F', '\x2', '\x2', '\x8F', '&', '\x3', '\x2', 
		'\x2', '\x2', '\x90', '\x91', '\a', ']', '\x2', '\x2', '\x91', '(', '\x3', 
		'\x2', '\x2', '\x2', '\x92', '\x93', '\a', '_', '\x2', '\x2', '\x93', 
		'*', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', '\a', '\x30', '\x2', 
		'\x2', '\x95', ',', '\x3', '\x2', '\x2', '\x2', '\x96', '\x97', '\a', 
		',', '\x2', '\x2', '\x97', '.', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', 
		'\a', '\x31', '\x2', '\x2', '\x99', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\x9A', '\x9B', '\a', '-', '\x2', '\x2', '\x9B', '\x32', '\x3', '\x2', 
		'\x2', '\x2', '\x9C', '\x9D', '\a', '/', '\x2', '\x2', '\x9D', '\x34', 
		'\x3', '\x2', '\x2', '\x2', '\x9E', '\x9F', '\t', '\a', '\x2', '\x2', 
		'\x9F', '\xA0', '\t', '\x6', '\x2', '\x2', '\xA0', '\xA1', '\t', '\t', 
		'\x2', '\x2', '\xA1', '\xA2', '\t', '\n', '\x2', '\x2', '\xA2', '\x36', 
		'\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', '\t', '\v', '\x2', '\x2', 
		'\xA4', '\xA5', '\t', '\x2', '\x2', '\x2', '\xA5', '\xA6', '\t', '\f', 
		'\x2', '\x2', '\xA6', '\xA7', '\t', '\r', '\x2', '\x2', '\xA7', '\xA8', 
		'\t', '\n', '\x2', '\x2', '\xA8', '\x38', '\x3', '\x2', '\x2', '\x2', 
		'\xA9', '\xAA', '\t', '\x3', '\x2', '\x2', '\xAA', '\xAB', '\t', '\t', 
		'\x2', '\x2', '\xAB', '\xAC', '\t', '\f', '\x2', '\x2', '\xAC', '\xAD', 
		'\t', '\f', '\x2', '\x2', '\xAD', ':', '\x3', '\x2', '\x2', '\x2', '\xAE', 
		'\xAF', '\t', '\x2', '\x2', '\x2', '\xAF', '\xB0', '\t', '\r', '\x2', 
		'\x2', '\xB0', '<', '\x3', '\x2', '\x2', '\x2', '\xB1', '\xB2', '\t', 
		'\x3', '\x2', '\x2', '\xB2', '\xB3', '\t', '\n', '\x2', '\x2', '\xB3', 
		'\xB4', '\t', '\xE', '\x2', '\x2', '\xB4', '>', '\x3', '\x2', '\x2', '\x2', 
		'\xB5', '\xB6', '\t', '\x2', '\x2', '\x2', '\xB6', '\xB7', '\t', '\r', 
		'\x2', '\x2', '\xB7', '\xBE', '\t', '\xF', '\x2', '\x2', '\xB8', '\xB9', 
		'\t', '\n', '\x2', '\x2', '\xB9', '\xBA', '\t', '\x3', '\x2', '\x2', '\xBA', 
		'\xBB', '\t', '\x4', '\x2', '\x2', '\xBB', '\xBC', '\t', '\b', '\x2', 
		'\x2', '\xBC', '\xBD', '\t', '\x3', '\x2', '\x2', '\xBD', '\xBF', '\t', 
		'\x10', '\x2', '\x2', '\xBE', '\xB8', '\x3', '\x2', '\x2', '\x2', '\xBE', 
		'\xBF', '\x3', '\x2', '\x2', '\x2', '\xBF', '@', '\x3', '\x2', '\x2', 
		'\x2', '\xC0', '\xC1', '\t', '\x4', '\x2', '\x2', '\xC1', '\xC2', '\t', 
		'\n', '\x2', '\x2', '\xC2', '\xC3', '\t', '\r', '\x2', '\x2', '\xC3', 
		'\xCA', '\t', '\xF', '\x2', '\x2', '\xC4', '\xC5', '\t', '\n', '\x2', 
		'\x2', '\xC5', '\xC6', '\t', '\x3', '\x2', '\x2', '\xC6', '\xC7', '\t', 
		'\x4', '\x2', '\x2', '\xC7', '\xC8', '\t', '\b', '\x2', '\x2', '\xC8', 
		'\xC9', '\t', '\x3', '\x2', '\x2', '\xC9', '\xCB', '\t', '\x10', '\x2', 
		'\x2', '\xCA', '\xC4', '\x3', '\x2', '\x2', '\x2', '\xCA', '\xCB', '\x3', 
		'\x2', '\x2', '\x2', '\xCB', '\x42', '\x3', '\x2', '\x2', '\x2', '\xCC', 
		'\xCE', '\x5', 'Q', ')', '\x2', '\xCD', '\xCC', '\x3', '\x2', '\x2', '\x2', 
		'\xCE', '\xCF', '\x3', '\x2', '\x2', '\x2', '\xCF', '\xCD', '\x3', '\x2', 
		'\x2', '\x2', '\xCF', '\xD0', '\x3', '\x2', '\x2', '\x2', '\xD0', '\x44', 
		'\x3', '\x2', '\x2', '\x2', '\xD1', '\xD3', '\x5', 'Q', ')', '\x2', '\xD2', 
		'\xD1', '\x3', '\x2', '\x2', '\x2', '\xD3', '\xD4', '\x3', '\x2', '\x2', 
		'\x2', '\xD4', '\xD2', '\x3', '\x2', '\x2', '\x2', '\xD4', '\xD5', '\x3', 
		'\x2', '\x2', '\x2', '\xD5', '\xDC', '\x3', '\x2', '\x2', '\x2', '\xD6', 
		'\xD8', '\x5', '+', '\x16', '\x2', '\xD7', '\xD9', '\x5', 'Q', ')', '\x2', 
		'\xD8', '\xD7', '\x3', '\x2', '\x2', '\x2', '\xD9', '\xDA', '\x3', '\x2', 
		'\x2', '\x2', '\xDA', '\xD8', '\x3', '\x2', '\x2', '\x2', '\xDA', '\xDB', 
		'\x3', '\x2', '\x2', '\x2', '\xDB', '\xDD', '\x3', '\x2', '\x2', '\x2', 
		'\xDC', '\xD6', '\x3', '\x2', '\x2', '\x2', '\xDC', '\xDD', '\x3', '\x2', 
		'\x2', '\x2', '\xDD', '\xDF', '\x3', '\x2', '\x2', '\x2', '\xDE', '\xE0', 
		'\x5', 'O', '(', '\x2', '\xDF', '\xDE', '\x3', '\x2', '\x2', '\x2', '\xDF', 
		'\xE0', '\x3', '\x2', '\x2', '\x2', '\xE0', '\xE2', '\x3', '\x2', '\x2', 
		'\x2', '\xE1', '\xE3', '\t', '\v', '\x2', '\x2', '\xE2', '\xE1', '\x3', 
		'\x2', '\x2', '\x2', '\xE2', '\xE3', '\x3', '\x2', '\x2', '\x2', '\xE3', 
		'\x46', '\x3', '\x2', '\x2', '\x2', '\xE4', '\xEA', '\a', '$', '\x2', 
		'\x2', '\xE5', '\xE6', '\a', '^', '\x2', '\x2', '\xE6', '\xE9', '\a', 
		'$', '\x2', '\x2', '\xE7', '\xE9', '\n', '\x11', '\x2', '\x2', '\xE8', 
		'\xE5', '\x3', '\x2', '\x2', '\x2', '\xE8', '\xE7', '\x3', '\x2', '\x2', 
		'\x2', '\xE9', '\xEC', '\x3', '\x2', '\x2', '\x2', '\xEA', '\xE8', '\x3', 
		'\x2', '\x2', '\x2', '\xEA', '\xEB', '\x3', '\x2', '\x2', '\x2', '\xEB', 
		'\xED', '\x3', '\x2', '\x2', '\x2', '\xEC', '\xEA', '\x3', '\x2', '\x2', 
		'\x2', '\xED', '\xF9', '\a', '$', '\x2', '\x2', '\xEE', '\xF4', '\a', 
		')', '\x2', '\x2', '\xEF', '\xF0', '\a', '^', '\x2', '\x2', '\xF0', '\xF3', 
		'\a', ')', '\x2', '\x2', '\xF1', '\xF3', '\n', '\x12', '\x2', '\x2', '\xF2', 
		'\xEF', '\x3', '\x2', '\x2', '\x2', '\xF2', '\xF1', '\x3', '\x2', '\x2', 
		'\x2', '\xF3', '\xF6', '\x3', '\x2', '\x2', '\x2', '\xF4', '\xF2', '\x3', 
		'\x2', '\x2', '\x2', '\xF4', '\xF5', '\x3', '\x2', '\x2', '\x2', '\xF5', 
		'\xF7', '\x3', '\x2', '\x2', '\x2', '\xF6', '\xF4', '\x3', '\x2', '\x2', 
		'\x2', '\xF7', '\xF9', '\a', ')', '\x2', '\x2', '\xF8', '\xE4', '\x3', 
		'\x2', '\x2', '\x2', '\xF8', '\xEE', '\x3', '\x2', '\x2', '\x2', '\xF9', 
		'H', '\x3', '\x2', '\x2', '\x2', '\xFA', '\xFD', '\x5', 'K', '&', '\x2', 
		'\xFB', '\xFD', '\a', '\x61', '\x2', '\x2', '\xFC', '\xFA', '\x3', '\x2', 
		'\x2', '\x2', '\xFC', '\xFB', '\x3', '\x2', '\x2', '\x2', '\xFD', '\x103', 
		'\x3', '\x2', '\x2', '\x2', '\xFE', '\x102', '\x5', 'K', '&', '\x2', '\xFF', 
		'\x102', '\x5', 'Q', ')', '\x2', '\x100', '\x102', '\a', '\x61', '\x2', 
		'\x2', '\x101', '\xFE', '\x3', '\x2', '\x2', '\x2', '\x101', '\xFF', '\x3', 
		'\x2', '\x2', '\x2', '\x101', '\x100', '\x3', '\x2', '\x2', '\x2', '\x102', 
		'\x105', '\x3', '\x2', '\x2', '\x2', '\x103', '\x101', '\x3', '\x2', '\x2', 
		'\x2', '\x103', '\x104', '\x3', '\x2', '\x2', '\x2', '\x104', 'J', '\x3', 
		'\x2', '\x2', '\x2', '\x105', '\x103', '\x3', '\x2', '\x2', '\x2', '\x106', 
		'\x107', '\t', '\x13', '\x2', '\x2', '\x107', 'L', '\x3', '\x2', '\x2', 
		'\x2', '\x108', '\x109', '\a', '/', '\x2', '\x2', '\x109', 'N', '\x3', 
		'\x2', '\x2', '\x2', '\x10A', '\x10C', '\t', '\n', '\x2', '\x2', '\x10B', 
		'\x10D', '\x5', 'M', '\'', '\x2', '\x10C', '\x10B', '\x3', '\x2', '\x2', 
		'\x2', '\x10C', '\x10D', '\x3', '\x2', '\x2', '\x2', '\x10D', '\x10F', 
		'\x3', '\x2', '\x2', '\x2', '\x10E', '\x110', '\x5', 'Q', ')', '\x2', 
		'\x10F', '\x10E', '\x3', '\x2', '\x2', '\x2', '\x110', '\x111', '\x3', 
		'\x2', '\x2', '\x2', '\x111', '\x10F', '\x3', '\x2', '\x2', '\x2', '\x111', 
		'\x112', '\x3', '\x2', '\x2', '\x2', '\x112', 'P', '\x3', '\x2', '\x2', 
		'\x2', '\x113', '\x114', '\t', '\x14', '\x2', '\x2', '\x114', 'R', '\x3', 
		'\x2', '\x2', '\x2', '\x115', '\x117', '\t', '\x15', '\x2', '\x2', '\x116', 
		'\x115', '\x3', '\x2', '\x2', '\x2', '\x117', '\x118', '\x3', '\x2', '\x2', 
		'\x2', '\x118', '\x116', '\x3', '\x2', '\x2', '\x2', '\x118', '\x119', 
		'\x3', '\x2', '\x2', '\x2', '\x119', '\x11A', '\x3', '\x2', '\x2', '\x2', 
		'\x11A', '\x11B', '\b', '*', '\x2', '\x2', '\x11B', 'T', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', '\x2', '\x62', 'h', 'n', '\x81', '\x86', '\xBE', 
		'\xCA', '\xCF', '\xD4', '\xDA', '\xDC', '\xDF', '\xE2', '\xE8', '\xEA', 
		'\xF2', '\xF4', '\xF8', '\xFC', '\x101', '\x103', '\x10C', '\x111', '\x118', 
		'\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Tp.Core.Expressions.Parsing.Antlr
