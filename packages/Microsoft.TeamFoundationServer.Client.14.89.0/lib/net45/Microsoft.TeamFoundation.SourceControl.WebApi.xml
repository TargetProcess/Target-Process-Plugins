<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.TeamFoundation.SourceControl.WebApi</name>
    </assembly>
    <members>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get differences in committed items between two commits.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get differences in committed items between two commits.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get differences in committed items between two commits.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get differences in committed items between two commits.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get differences in committed items between two commits.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get differences in committed items between two commits.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Adds reviewers to a git pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a reviewer from a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a reviewer from a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a reviewer from a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a reviewer from a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a reviewer from a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a reviewer from a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request reviewers
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request reviewers
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request reviewers
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request reviewers
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request reviewers
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request reviewers
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Query for pull requests
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Query for pull requests
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Query for pull requests
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Query for pull requests
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Query for pull requests
            </summary>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Query for pull requests
            </summary>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsByProjectAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query pull requests by project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsByProjectAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query pull requests by project
            </summary>
            <param name="project">Project ID</param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="commitsTop"></param>
            <param name="commitsSkip"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="commitsTop"></param>
            <param name="commitsSkip"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="commitsTop"></param>
            <param name="commitsSkip"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="commitsTop"></param>
            <param name="commitsSkip"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="commitsTop"></param>
            <param name="commitsSkip"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="commitsTop"></param>
            <param name="commitsSkip"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a git repository
            </summary>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a git repository
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a git repository
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git repositories.
            </summary>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID or project name</param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID or project name</param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID</param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID</param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the Git repository with the single populated change in the specified repository information.
            </summary>
            <param name="newRepositoryInfo"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the Git repository with the single populated change in the specified repository information.
            </summary>
            <param name="newRepositoryInfo"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the Git repository with the single populated change in the specified repository information.
            </summary>
            <param name="newRepositoryInfo"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID or project name</param>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID or project name</param>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID</param>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID</param>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID or project name</param>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID or project name</param>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID</param>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="project">Project ID</param>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="repositoryId"></param>
             <param name="sha1"></param>
             <param name="projectId"></param>
             <param name="recursive"></param>
             <param name="fileName"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single branch hierarchy at the given path with parents or children (if specified)
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single branch hierarchy at the given path with parents or children (if specified)
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single branch hierarchy at the given path with parents or children (if specified)
            </summary>
            <param name="path"></param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of branch roots -- first-level children, branches with no parents
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchesAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of branch roots -- first-level children, branches with no parents
            </summary>
            <param name="project">Project ID</param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchesAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of branch roots -- first-level children, branches with no parents
            </summary>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchRefsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get branch hierarchies below the specified scopePath
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="scopePath"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchRefsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get branch hierarchies below the specified scopePath
            </summary>
            <param name="project">Project ID</param>
            <param name="scopePath"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBranchRefsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get branch hierarchies below the specified scopePath
            </summary>
            <param name="scopePath"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetChangesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve Tfvc changes for a given changeset
            </summary>
            <param name="id"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="changeset"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="changeset"></param>
             <param name="project">Project ID or project name</param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="changeset"></param>
             <param name="project">Project ID</param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Tfvc Changeset
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="id"></param>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Tfvc Changeset
            </summary>
            <param name="project">Project ID</param>
            <param name="id"></param>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Tfvc Changeset
            </summary>
            <param name="id"></param>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve Tfvc changesets
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetsAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve Tfvc changesets
            </summary>
            <param name="project">Project ID</param>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetsAsync(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve Tfvc changesets
            </summary>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetBatchedChangesetsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="changesetsRequestData"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetWorkItemsAsync(System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="id"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a list of Tfvc items
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a list of Tfvc items
            </summary>
            <param name="project">Project ID</param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsAsync(System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a list of Tfvc items
            </summary>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemTextAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetLabelItemsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get items under a label.
            </summary>
            <param name="labelId">Unique identifier of label</param>
            <param name="top">Max number of items to return</param>
            <param name="skip">Number of items to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetLabelAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single deep label.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetLabelAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single deep label.
            </summary>
            <param name="project">Project ID</param>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetLabelAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single deep label.
            </summary>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetLabelsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of shallow label references.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetLabelsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of shallow label references.
            </summary>
            <param name="project">Project ID</param>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetLabelsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of shallow label references.
            </summary>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetProjectInfoAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve the version control information for a given Team Project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="projectId">The id (or name) of the team project</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetProjectInfoAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve the version control information for a given Team Project
            </summary>
            <param name="project">Project ID</param>
            <param name="projectId">The id (or name) of the team project</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetProjectInfoAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve the version control information for a given Team Project
            </summary>
            <param name="projectId">The id (or name) of the team project</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetProjectInfosAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetProjectInfosAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetProjectInfosAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetShelvesetChangesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get changes included in a shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="top">Max number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetShelvesetAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single deep shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="requestData">includeDetails, includeWorkItems, maxChangeCount, and maxCommentLength</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetShelvesetsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Return a collection of shallow shelveset references.
            </summary>
            <param name="requestData">name, owner, and maxCommentLength</param>
            <param name="top">Max number of shelvesets to return</param>
            <param name="skip">Number of shelvesets to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetShelvesetWorkItemsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get work items associated with a shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetBranchRefsAsync(System.Guid,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetTagRefsAsync(System.Guid,System.Object)" -->
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.RenameRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Object)">
            <summary>
            Rename a repository.  Only the name is observed.  If other properties are passed, the server will ensure they match.
            </summary>
            <param name="repositoryToRename"></param>
            <param name="newName"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientCompatBase">
            <summary>
            This class adds methods that are no longer generated by Rest Client Generator tooling, but must be kept for back compat with previous releases to ensure 3rd party Team Explorer Extensions continue to work.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientCompatBase.CreatePushAsync(System.IO.Stream,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientCompatBase.CreatePushAsync(System.IO.Stream,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientCompatBase.CreatePushAsync(System.IO.Stream,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientCompatBase.CreatePushAsync(System.IO.Stream,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientCompatBase.CreatePushAsync(System.IO.Stream,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientCompatBase.CreatePushAsync(System.IO.Stream,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitUtils.IsLegalRefName(System.String,System.Boolean)">
            <summary>
            Determines whether or not the specified ref name is legal.
            </summary>
            <param name="gitRefName">The ref name to test for legality.</param>
            <param name="testOnlyAsAPrefix">Indicates whether the specified ref name should be tested only
            as a prefix (such as is used for filtering), as opposed to a full ref name used to point to a commit.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryPermissions">
             <summary>
             Defines the permission bitmasks used in the database
             for git repositories.
            
             If modifying, see NOTE at the bottom.
             </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryPermissions.All">
            <summary>
            This defines the set of bits that are valid for the git permission space. 
            When reading or writing git permissions, these are the only bits paid attention too.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem.Url">
            <summary>
            REST url
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria">
            <summary>
            Criteria used in a search for change lists
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ItemPath">
            <summary>
            Path of item to search under
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ItemVersion">
            <summary>
            Version of the items to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.User">
            <summary>
            Alias or display name of user who made the changes
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FromDate">
            <summary>
            If provided, only include history entries created after this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ToDate">
            <summary>
            If provided, only include history entries created before this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FromVersion">
            <summary>
            If provided, a version descriptor for the earliest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ToVersion">
            <summary>
            If provided, a version descriptor for the latest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.CompareVersion">
            <summary>
            If provided, a version descriptor to compare against base
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FollowRenames">
            <summary>
            Whether or not to follow renames for the given item being queried
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ExcludeDeletes">
            <summary>
            If true, don't include delete history entries
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.Skip">
            <summary>
            Number of results to skip (used when clicking more...)
            </summary>
            TODO: this remains for legacy WebAccess support. it will go away when WebAccess moves to the REST API
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.Top">
            <summary>
            If provided, the maximum number of history entries to return
            </summary>
            TODO: this remains for legacy WebAccess support. it will go away when WebAccess moves to the REST API
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.SetFromDate(System.DateTime)">
            <summary>
            Set the from date
            </summary>
            <param name="fromDate">Only include results after this date</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.SetToDate(System.DateTime)">
            <summary>
            Set the to date
            </summary>
            <param name="toDate">Only include results before this date</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitMediaObjectRef">
            <summary>
            Encapsulates the reference metadata of a Git media object.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitMediaObjectRef.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitMediaObjectRef.#ctor(System.String,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="mediaObjectId"></param>
            <param name="length"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMediaObjectRef.Size">
            <summary>
            Gets or sets the size of the Git media object in bytes.
            This property exists for adherence to the GitHub Git Media contract.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMediaObjectRef.Oid">
            <summary>
            Gets or sets the Git media object identifier.
            This property exists for adherence to the GitHub Git Media contract.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMediaObjectRef.Id">
            <summary>
            Gets or sets the Git media object identifier.
            This Id property duplicates the Oid property, but is required by the VSO REST specification.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMediaObjectRef.Url">
            <summary>
            Gets or sets the URL for the Git media object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMediaObjectRef.Links">
            <summary>
            Gets or sets the reference links of the Git media object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBlobRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBlobRef.Size">
            <summary>
            Size of blob content (in bytes)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitHistoryQueryResults.StartingCommitId">
            <summary>
            Seed commit used for querying history.  Used for skip feature.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.ObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.OriginalObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.GitObjectType">
            <summary>
            Type of object (Commit, Tree, Blob, Tag, ...)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.CommitId">
            <summary>
            SHA1 of commit item was fetched at
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.LatestProcessedChange">
            <summary>
            Shallow ref to commit that last changed this item
            Only populated if latestProcessedChange is requested
            May not be accurate if latest change is not yet cached
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.Path">
            <summary>
            Path to item
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.Version">
            <summary>
            Version string (interpretation based on VersionType defined in subclass
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.VersionType">
            <summary>
            How to interpret version (branch,tag,commit)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.VersionOptions">
            <summary>
            Version modifiers (e.g. previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full), or None
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.ItemDescriptors">
            <summary>
            Collection of items to fetch, including path, version, and recursion level
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.IncludeContentMetadata">
            <summary>
            Whether to include metadata for all items
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.LatestProcessedChange">
            <summary>
            Whether to include shallow ref to commit that last changed each item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode">
            <summary>
            Enumerates the modes under which ref updates can be written to their repositories.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode.BestEffort">
            <summary>
            Indicates the Git protocol model where any refs that can be updated will be updated,
            but any failures will not prevent other updates from succeeding.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode.AllOrNone">
            <summary>
            Indicates that all ref updates must succeed or none will succeed. All ref updates will be atomically written.
            If any failure is encountered, previously successful updates will be rolled back and the entire operation will fail.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus">
            <summary>
            Represents the possible outcomes from a request to update a ref in a repository.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Succeeded">
            <summary>
            Indicates that the ref update request was completed successfully.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.ForcePushRequired">
            <summary>
            Indicates that the ref update request could not be completed because part of the graph
            would be disconnected by this change, and the caller does not have ForcePush permission
            on the repository.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.StaleOldObjectId">
            <summary>
            Indicates that the ref update request could not be completed because the old object ID
            presented in the request was not the object ID of the ref when the database attempted
            the update. The most likely scenario is that the caller lost a race to update the ref.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.InvalidRefName">
            <summary>
            Indicates that the ref update request could not be completed because the ref name
            presented in the request was not valid.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Unprocessed">
            <summary>
            The request was not processed
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.UnresolvableToCommit">
            <summary>
            The ref update request could not be completed because the new object ID for the ref
            could not be resolved to a commit object (potentially through any number of tags)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.WritePermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks write permissions
            required to write this ref
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.ManageNotePermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks note creation permissions
            required to write this note
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.CreateBranchPermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks the permission to 
            create a branch
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.CreateTagPermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks the permission to
            create a tag
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RejectedByPlugin">
            <summary>
            The ref update could not be completed because it was rejected by the plugin.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Locked">
            <summary>
            The ref update could not be completed because the ref is locked by another user.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RefNameConflict">
            <summary>
            The ref update could not be completed because, in case-insensitive mode,
            the ref name conflicts with an existing, differently-cased ref name.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RejectedByPolicy">
            <summary>
            The ref update could not be completed because it was rejected by policy.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.SucceededNonExistentRef">
            <summary>
            Indicates that the ref update request was completed successfully,
            but the ref doesn't actually exist so no changes were made.
            
            This should only happen during deletes.
            </summary>
            <remarks>
            Core git (and GitHub by extension) returns "warning: Deleting a non-existent ref." 
            in this case as of 3/5/2015
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.SucceededCorruptRef">
            <summary>
            Indicates that the ref update request was completed successfully,
            but the passed-in ref was corrupt - as in, the old object ID was bad.
            
            This should only happen during deletes.
            </summary>
            <remarks>
            Core git (and GitHub by extension) returns "warning: Allowing deletion of corrupt ref." 
            in this case as of 3/5/2015
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Ids">
            <summary>
            If provided, specifies the exact commit ids of the commits to fetch.
            May not be combined with other parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.FromDate">
            <summary>
            If provided, only include history entries created after this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ToDate">
            <summary>
            If provided, only include history entries created before this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ItemVersion">
            <summary>
            If provided, identifies the commit or branch to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.CompareVersion">
            <summary>
            If provided, the earliest commit in the graph to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.FromCommitId">
            <summary>
            If provided, a lower bound for filtering commits alphabetically
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ToCommitId">
            <summary>
            If provided, an upper bound for filtering commits alphabetically
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Committer">
            <summary>
            Alias or display name of the committer
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Author">
            <summary>
            Alias or display name of the author
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ItemPath">
            <summary>
            Path of item to search under
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ExcludeDeletes">
            <summary>
            If true, don't include delete history entries
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Skip">
            <summary>
            Number of entries to skip
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Top">
            <summary>
            Maximum number of entries to retrieve
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.RepositoryId">
            <summary>
            Repository ID
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.Name">
            <summary>
            Ref name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.OldObjectId">
            <summary>
            Old object ID
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.NewObjectId">
            <summary>
            New object ID
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.UpdateStatus">
            <summary>
            Status of the update from the TFS server.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.RejectedBy">
            <summary>
            Name of the plugin that rejected the updated.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.CustomMessage">
            <summary>
            Custom message for the result object
            For instance, Reason for failing. 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.Success">
            <summary>
            True if the ref update succeeded, false otherwise
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.RelativePath">
            <summary>
            Path relative to parent tree object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Mode">
            <summary>
            Mode represented as octal string
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.GitObjectType">
            <summary>
            Blob or tree
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Url">
            <summary>
            url to retrieve tree or blob
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Size">
            <summary>
            Size of content
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.Url">
            <summary>
            Url to tree 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.TreeEntries">
            <summary>
            Blobs and trees under this tree
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.Size">
            <summary>
            Sum of sizes of all children
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, commit, or index). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch/index, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, or commit). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, or commit). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType">
            <summary>
            Accepted types of version
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Branch">
            <summary>
            Interpret the version as a branch name
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Tag">
            <summary>
            Interpret the version as a tag name
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Commit">
            <summary>
            Interpret the version as a commit ID (SHA1)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Index">
            <summary>
            Interpret the version as an index name
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions">
            <summary>
            Accepted types of version options
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.None">
            <summary>
            Not specified
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.PreviousChange">
            <summary>
            Commit that changed item prior to the current version
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.FirstParent">
            <summary>
            First parent of commit (HEAD^)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ChangeList">
            <summary>
            The Change list (changeset/commit/shelveset) for this point in history
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ItemChangeType">
            <summary>
            The change made to the item from this change list (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ServerItem">
            <summary>
            The path of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryQueryResults`1.Results">
            <summary>
            The history entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryQueryResults`1.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            A more RESTy solution would be to include a Link header
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions">
            <summary>
            Optional details to include when returning an item model
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full) or None for folder items
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.Results">
            <summary>
            The change entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.ChangeCounts">
            <summary>
            Total counts for each type of change
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType">
            <summary>
            Type of change for a diff block
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.None">
            <summary>
            No change - left and right sides are identical
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Add">
            <summary>
            Content was added to the right side
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Delete">
            <summary>
            Content was deleted from the left side
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Edit">
            <summary>
            Lines were modified
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlock.TruncatedBefore">
            <summary>
            True for "ChangeType=None" blocks in a partial diff
            that have been truncated before the included text.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlock.TruncatedAfter">
            <summary>
            True for "ChangeType=None" blocks in a partial diff
            that have been truncated after the included text.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters">
            <summary>
            Parameters used when diffing 2 files
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.OriginalPath">
            <summary>
            Server path of the left/original item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.OriginalVersion">
            <summary>
            Version description of the original item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.ModifiedPath">
            <summary>
            Server path of the right/modified item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.ModifiedVersion">
            <summary>
            Version description of the right/modified item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.PartialDiff">
            <summary>
            If true, only return the changed diff blocks plus a few unchanged lines before and after each change block.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.IgnoreTrimmedWhitespace">
            <summary>
            Unless false, ignore whitespace at the beginning and end of each line
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.LineNumbersOnly">
            <summary>
            If true, don't include the content in the returned diff blocks. Only include the line numbers.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitHistoryQueryResults.StartingCommitId">
            <summary>
            Seed commit used for querying history.  Used for skip feature.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitItem.ObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitItem.CommitId">
            <summary>
            This is not used on the serverside, but is used by TypeScript.  Its added here for code generation.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitObjectReference">
            <summary>
            Represents a shallow reference to a Git object for serialization
            </summary>
            <example>
            A GitCommit may have several parents, represented by a list of GitObjectReference instances.
            This list would be serialized to JSON as something like
            "parents": [
                { 
                    "objectId": "25c12518372b4a18f1b9d85f83ae01097604dc88",
                    "url": "http://my-tfs-server/_apis/git/commits/25c12518372b4a18f1b9d85f83ae01097604dc88"
                }
            ]
            </example>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ChangeList">
            <summary>
            The Change list (changeset/commit/shelveset) for this point in history
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ItemChangeType">
            <summary>
            The change made to the item from this change list (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ServerItem">
            <summary>
            The path of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryQueryResults.Results">
            <summary>
            The history entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryQueryResults.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            A more RESTy solution would be to include a Link header
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions">
            <summary>
            Optional details to include when returning an item model
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full) or None for folder items
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.IncludeVersionDescription">
            <summary>
            If true, include a detailed version description
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.ScanBytesForEncoding">
            <summary>
            The maximum number of bytes to scan when attempting to detect file encoding.
            This is an optional implementation detail for IncludeContentMetadata, and not part of the Data Contract.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsChange.PendingVersion">
            <summary>
            Version at which a (shelved) change was pended against
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsHistoryEntry.FileId">
            <summary>
            The file id of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsHistoryEntry.Encoding">
            <summary>
            The encoding of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange.PendingVersion">
            <summary>
            Version at which a (shelved) change was pended against
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange.MergeSources">
            <summary>
            List of merge sources in case of rename or branch creation. 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria">
            <summary>
            Criteria used in a search for change lists
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ItemPath">
            <summary>
            Path of item to search under
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.versionDescriptor">
            <summary> 
            Version of the item to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.Author">
            <summary>
            Alias or display name of user who made the changes
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FromDate">
            <summary>
            If provided, only include changesets created after this date (string)
            Think of a better name for this. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ToDate">
            <summary>
            If provided, only include changesets created before this date (string)
            Think of a better name for this. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FromId">
            <summary>
            If provided, only include changesets after this changesetID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ToId">
            <summary>
            If provided, a version descriptor for the latest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FollowRenames">
            <summary>
            Whether or not to follow renames for the given item being queried
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHistoryEntry.FileId">
            <summary>
            The file id of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHistoryEntry.Encoding">
            <summary>
            The encoding of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemDescriptor">
            <summary>
            Item path and Version descriptor properties 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.ServerItem">
            <summary>
            The server item of the merge source
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.VersionFrom">
            <summary>
            Start of the version range
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.VersionTo">
            <summary>
            End of the version range
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.IsRename">
            <summary>
            Indicates if this a rename source. If false, it is a merge source.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.Name">
            <summary>
            Shelveset's name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.Owner">
            <summary>
            Owner's ID. Could be a name or a guid.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.MaxCommentLength">
            <summary>
            Max length of comment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.MaxChangeCount">
            <summary>
            Max number of changes to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeDetails">
            <summary>
            Whether to include policyOverride and notes
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeWorkItems">
            <summary>
            Whether to include workItems
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
    </members>
</doc>
