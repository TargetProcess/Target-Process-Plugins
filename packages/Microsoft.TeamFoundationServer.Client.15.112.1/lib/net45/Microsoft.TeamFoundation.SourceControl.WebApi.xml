<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.TeamFoundation.SourceControl.WebApi</name>
    </assembly>
    <members>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets a single blob.
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about a single branch.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about a single branch.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="name">Name of the branch</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about all branches within a repository.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics about all branches within a repository.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics for multiple commits
            </summary>
            <param name="searchCriteria"></param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics for multiple commits
            </summary>
            <param name="searchCriteria"></param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics for multiple commits
            </summary>
            <param name="searchCriteria"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics for multiple commits
            </summary>
            <param name="searchCriteria"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics for multiple commits
            </summary>
            <param name="searchCriteria"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve statistics for multiple commits
            </summary>
            <param name="searchCriteria"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve changes for a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve changes for a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCherryPickAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="cherryPickToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCherryPickAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="cherryPickToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCherryPickAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="cherryPickToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCherryPickAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="cherryPickToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="cherryPickId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickAsync(System.String,System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="cherryPickId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="cherryPickId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickAsync(System.Guid,System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="cherryPickId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickForRefNameAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="refName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickForRefNameAsync(System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="refName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickForRefNameAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="refName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickForRefNameAsync(System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="refName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get differences in committed items between two commits.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get differences in committed items between two commits.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get differences in committed items between two commits.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get differences in committed items between two commits.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get differences in committed items between two commits.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get differences in committed items between two commits.
            </summary>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="diffCommonCommit"></param>
            <param name="top">Maximum number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor"></param>
            <param name="targetVersionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeStatuses"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeStatuses"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeStatuses"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeStatuses"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeStatuses"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git commits for a project
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeStatuses"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetDeletedRepositoriesAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve deleted git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetDeletedRepositoriesAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve deleted git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an import request
            </summary>
            <param name="importRequest"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an import request
            </summary>
            <param name="importRequest"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an import request
            </summary>
            <param name="importRequest"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an import request
            </summary>
            <param name="importRequest"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetImportRequestAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular import request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="importRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetImportRequestAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular import request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="importRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetImportRequestAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular import request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="importRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetImportRequestAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular import request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="importRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.QueryImportRequestsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve import requests for a repository
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="includeAbandoned"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.QueryImportRequestsAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve import requests for a repository
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="includeAbandoned"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.QueryImportRequestsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve import requests for a repository
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="includeAbandoned"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.QueryImportRequestsAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve import requests for a repository
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="includeAbandoned"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update an import request
            </summary>
            <param name="importRequestToUpdate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="importRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update an import request
            </summary>
            <param name="importRequestToUpdate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="importRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update an import request
            </summary>
            <param name="importRequestToUpdate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="importRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update an import request
            </summary>
            <param name="importRequestToUpdate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="importRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId"></param>
            <param name="path"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeContentMetadata"></param>
            <param name="latestProcessedChange"></param>
            <param name="download"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a new attachment
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a new attachment
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.String,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a new attachment
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="project">Project ID or project name</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.String,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a new attachment
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="project">Project ID or project name</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.Guid,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a new attachment
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="project">Project ID</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.Guid,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a new attachment
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="project">Project ID</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.String,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.String,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.Guid,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.Guid,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.String,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.String,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.Guid,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.Guid,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.String,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.String,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.Guid,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.Guid,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for an iteration.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId">Iteration to retrieve commits for</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for an iteration.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId">Iteration to retrieve commits for</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for an iteration.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId">Iteration to retrieve commits for</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for an iteration.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId">Iteration to retrieve commits for</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for an iteration.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId">Iteration to retrieve commits for</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for an iteration.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId">Iteration to retrieve commits for</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve pull request's commits
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="compareTo"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.String,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="compareTo"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.Guid,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="compareTo"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="compareTo"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="compareTo"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="compareTo"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.String,System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="includeCommits"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="queries"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="queries"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="queries"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="queries"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="queries"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="queries"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds a reviewer to a git pull request
            </summary>
            <param name="reviewer"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="reviewers"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Adds reviewers to a git pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a reviewer from a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a reviewer from a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a reviewer from a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a reviewer from a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a reviewer from a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a reviewer from a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="reviewerId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request reviewers
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request reviewers
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request reviewers
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request reviewers
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request reviewers
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request reviewers
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestByIdAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request using its ID
            </summary>
            <param name="pullRequestId">the Id of the pull request</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsByProjectAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query pull requests by project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsByProjectAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query pull requests by project
            </summary>
            <param name="project">Project ID</param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="includeWorkItemRefs"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="includeWorkItemRefs"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="includeWorkItemRefs"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="includeWorkItemRefs"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="includeWorkItemRefs"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeCommits"></param>
            <param name="includeWorkItemRefs"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Query for pull requests
            </summary>
            <param name="repositoryId"></param>
            <param name="searchCriteria"></param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates a pull request
            </summary>
            <param name="gitPullRequestToUpdate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userMessage"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userMessage"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userMessage"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userMessage"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userMessage"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userMessage"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request iteration status
            </summary>
            <param name="status"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request iteration status
            </summary>
            <param name="status"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request iteration status
            </summary>
            <param name="status"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request iteration status
            </summary>
            <param name="status"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request iteration status
            </summary>
            <param name="status"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request iteration status
            </summary>
            <param name="status"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iterationId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status
            </summary>
            <param name="status"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status
            </summary>
            <param name="status"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status
            </summary>
            <param name="status"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status
            </summary>
            <param name="status"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status
            </summary>
            <param name="status"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status
            </summary>
            <param name="status"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="statusId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment
            </summary>
            <param name="comment"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment
            </summary>
            <param name="comment"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment
            </summary>
            <param name="comment"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment
            </summary>
            <param name="comment"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment
            </summary>
            <param name="comment"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment
            </summary>
            <param name="comment"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request comment by id for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request comment by id for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request comment by id for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request comment by id for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request comment by id for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request comment by id for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment by id for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment by id for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment by id for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment by id for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment by id for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment by id for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comments in a thread.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comments in a thread.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comments in a thread.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comments in a thread.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comments in a thread.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comments in a thread.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="comment"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="comment"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="comment"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="comment"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="comment"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="comment"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="commentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment thread by id for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.String,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment thread by id for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.Guid,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment thread by id for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment thread by id for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment thread by id for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a pull request comment thread by id for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comment threads.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comment threads.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comment threads.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comment threads.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comment threads.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all pull request comment threads.
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="iteration"></param>
            <param name="baseIteration"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update a pull request review comment thread
            </summary>
            <param name="commentThread"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="threadId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request work items
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, a project-scoped route must be used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves pushes associated with the specified repository.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves pushes associated with the specified repository.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRefLockRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefLockRequest,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Lock or unlock a ref.
            </summary>
            <param name="refLockRequest"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRefLockRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefLockRequest,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Lock or unlock a ref.
            </summary>
            <param name="refLockRequest"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRefLockRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefLockRequest,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Lock or unlock a ref.
            </summary>
            <param name="refLockRequest"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRefLockRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefLockRequest,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Lock or unlock a ref.
            </summary>
            <param name="refLockRequest"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="newRefInfo"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="filter"></param>
            <param name="projectId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.String,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="newRefInfo"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="filter"></param>
            <param name="projectId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="newRefInfo"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="filter"></param>
            <param name="projectId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.Guid,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="newRefInfo"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="filter"></param>
            <param name="projectId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="newRefInfo"></param>
            <param name="repositoryId"></param>
            <param name="filter"></param>
            <param name="projectId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="newRefInfo"></param>
            <param name="repositoryId"></param>
            <param name="filter"></param>
            <param name="projectId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates or updates refs with the given information
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="projectId">The id of the project.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateFavoriteAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefFavorite,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates a ref favorite
            </summary>
            <param name="favorite"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateFavoriteAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefFavorite,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates a ref favorite
            </summary>
            <param name="favorite"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRefFavoriteAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="favoriteId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRefFavoriteAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="favoriteId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefFavoriteAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="favoriteId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefFavoriteAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="favoriteId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefFavoritesAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the refs favorites for a repo and an identity.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id of the repository.</param>
            <param name="identityId">The id of the identity whose favorites are to be retrieved. If null, the requesting identity is used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefFavoritesAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the refs favorites for a repo and an identity.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id of the repository.</param>
            <param name="identityId">The id of the identity whose favorites are to be retrieved. If null, the requesting identity is used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a git repository
            </summary>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a git repository
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a git repository
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeLinks"></param>
            <param name="includeAllUrls"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeLinks"></param>
            <param name="includeAllUrls"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="includeLinks"></param>
            <param name="includeAllUrls"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates the Git repository with the single populated change in the specified repository information.
            </summary>
            <param name="newRepositoryInfo"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates the Git repository with the single populated change in the specified repository information.
            </summary>
            <param name="newRepositoryInfo"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Updates the Git repository with the single populated change in the specified repository information.
            </summary>
            <param name="newRepositoryInfo"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRevertAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="revertToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRevertAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="revertToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRevertAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="revertToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRevertAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="revertToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="revertId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertAsync(System.String,System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="revertId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="revertId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertAsync(System.Guid,System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="revertId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertForRefNameAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="refName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertForRefNameAsync(System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="refName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertForRefNameAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="refName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertForRefNameAsync(System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="refName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="gitCommitStatusToCreate"></param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="gitCommitStatusToCreate"></param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="gitCommitStatusToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.String,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="gitCommitStatusToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="gitCommitStatusToCreate"></param>
            <param name="project">Project ID</param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.Guid,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="gitCommitStatusToCreate"></param>
            <param name="project">Project ID</param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="latestOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.String,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="latestOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="latestOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="latestOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="latestOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="commitId"></param>
            <param name="repositoryId"></param>
            <param name="top"></param>
            <param name="skip"></param>
            <param name="latestOnly"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a set of suggestions (including a pull request suggestion).
            </summary>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a set of suggestions (including a pull request suggestion).
            </summary>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a set of suggestions (including a pull request suggestion).
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a set of suggestions (including a pull request suggestion).
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a set of suggestions (including a pull request suggestion).
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a set of suggestions (including a pull request suggestion).
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeDiffsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the differences between two trees. Commits will be resolved to the trees they point to.  Renames and object type changes are returned as delete on the old object and add on the new object.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseId">Sha1Id of base tree or commit</param>
            <param name="targetId">Sha1Id of target tree or commit</param>
            <param name="top">Maximum number of changes to return</param>
            <param name="continuationToken"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeDiffsAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the differences between two trees. Commits will be resolved to the trees they point to.  Renames and object type changes are returned as delete on the old object and add on the new object.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseId">Sha1Id of base tree or commit</param>
            <param name="targetId">Sha1Id of target tree or commit</param>
            <param name="top">Maximum number of changes to return</param>
            <param name="continuationToken"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeDiffsAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the differences between two trees. Commits will be resolved to the trees they point to.  Renames and object type changes are returned as delete on the old object and add on the new object.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseId">Sha1Id of base tree or commit</param>
            <param name="targetId">Sha1Id of target tree or commit</param>
            <param name="top">Maximum number of changes to return</param>
            <param name="continuationToken"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeDiffsAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the differences between two trees. Commits will be resolved to the trees they point to.  Renames and object type changes are returned as delete on the old object and add on the new object.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseId">Sha1Id of base tree or commit</param>
            <param name="targetId">Sha1Id of target tree or commit</param>
            <param name="top">Maximum number of changes to return</param>
            <param name="continuationToken"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="repositoryId"></param>
            <param name="sha1"></param>
            <param name="projectId"></param>
            <param name="recursive"></param>
            <param name="fileName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single branch hierarchy at the given path with parents or children (if specified)
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single branch hierarchy at the given path with parents or children (if specified)
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single branch hierarchy at the given path with parents or children (if specified)
            </summary>
            <param name="path"></param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a collection of branch roots -- first-level children, branches with no parents
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a collection of branch roots -- first-level children, branches with no parents
            </summary>
            <param name="project">Project ID</param>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a collection of branch roots -- first-level children, branches with no parents
            </summary>
            <param name="includeParent"></param>
            <param name="includeChildren"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get branch hierarchies below the specified scopePath
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="scopePath"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get branch hierarchies below the specified scopePath
            </summary>
            <param name="project">Project ID</param>
            <param name="scopePath"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get branch hierarchies below the specified scopePath
            </summary>
            <param name="scopePath"></param>
            <param name="includeDeleted"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetChangesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve Tfvc changes for a given changeset
            </summary>
            <param name="id"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="changeset"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="changeset"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="changeset"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a Tfvc Changeset
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="id"></param>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a Tfvc Changeset
            </summary>
            <param name="project">Project ID</param>
            <param name="id"></param>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a Tfvc Changeset
            </summary>
            <param name="id"></param>
            <param name="maxChangeCount"></param>
            <param name="includeDetails"></param>
            <param name="includeWorkItems"></param>
            <param name="maxCommentLength"></param>
            <param name="includeSourceRename"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve Tfvc changesets
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve Tfvc changesets
            </summary>
            <param name="project">Project ID</param>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve Tfvc changesets
            </summary>
            <param name="maxCommentLength"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="orderby"></param>
            <param name="searchCriteria"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBatchedChangesetsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="changesetsRequestData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetWorkItemsAsync(System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="id"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of Tfvc items
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of Tfvc items
            </summary>
            <param name="project">Project ID</param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of Tfvc items
            </summary>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="includeLinks"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path"></param>
            <param name="fileName"></param>
            <param name="download"></param>
            <param name="scopePath"></param>
            <param name="recursionLevel"></param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelItemsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get items under a label.
            </summary>
            <param name="labelId">Unique identifier of label</param>
            <param name="top">Max number of items to return</param>
            <param name="skip">Number of items to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single deep label.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single deep label.
            </summary>
            <param name="project">Project ID</param>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single deep label.
            </summary>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a collection of shallow label references.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a collection of shallow label references.
            </summary>
            <param name="project">Project ID</param>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a collection of shallow label references.
            </summary>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetChangesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get changes included in a shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="top">Max number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single deep shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="requestData">includeDetails, includeWorkItems, maxChangeCount, and maxCommentLength</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Return a collection of shallow shelveset references.
            </summary>
            <param name="requestData">name, owner, and maxCommentLength</param>
            <param name="top">Max number of shelvesets to return</param>
            <param name="skip">Number of shelvesets to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetWorkItemsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get work items associated with a shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConstants.MaxGitRefNameLength">
            <summary>
            The current maximum ref name length supported by the TFS Git Server
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetBranchRefsAsync(System.Guid,System.Object)">
            <summary>
            Get the refs that are branches for a specific git repository
            </summary>
            <param name="repositoryId">Repository Id</param>
            <param name="userState"></param>
            <returns>Task&lt;List&lt;GitRef&gt;&gt;</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetTagRefsAsync(System.Guid,System.Object)">
            <summary>
            Get the refs that are tags for a specific git repository
            </summary>
            <param name="repositoryId">Repository Id</param>
            <param name="userState"></param>
            <returns>Task&lt;List&lt;GitRef&gt;&gt;</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.RenameRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Object)">
            <summary>
            Rename a repository.  Only the name is observed.  If other properties are passed, the server will ensure they match.
            </summary>
            <param name="repositoryToRename"></param>
            <param name="newName"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetItemsPagedAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetItemsPagedAsync(System.String,System.Guid,System.String,System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetItemsPagedAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetItemsPagedAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase">
            <summary>
            This class contains overloads of methods that were removed from the auto-generated client
            due to adding parameters. We use extra overloads to ensure that whatever binary signature
            a client used before will map to one of these prototypes.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.String,System.Nullable{System.Boolean},System.Object)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Guid,System.Nullable{System.Boolean},System.Object)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Nullable{System.Boolean},System.Object)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="includeLinks"></param>
            <param name="userState"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryPermissions">
            <summary>
            Defines the permission bitmasks used in the database for git repositories.
            If modifying, see NOTE at the bottom.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryPermissions.All">
            <summary>
            This defines the set of bits that are valid for the git permission space. 
            When reading or writing git permissions, these are the only bits paid attention too.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionScope">
            <summary>
            Scopes where <see cref="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryPermissions"/> can apply.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionsUtil.GetTokenScope(System.String)">
            <summary>
            Infers the <see cref="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionScope"/> from how many sub-tokens in the provided security token.
            <param name="SecurityToken"> a Git Repositories Security Token that is already canonicalized by
            <see cref="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitUtils.CalculateSecurable(System.String,System.Guid,System.String)"/> in the form:
            repoV2/f7aa0cd2-5bb1-4fc7-87fc-3ca29a266aad/622eb04c-9538-4e64-bb8e-4287eb20436d/refs/heads/6d0061007300740065007200/</param>
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem.Url">
            <summary>
            REST url
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment">
            <summary>
            Meta data for a file attached to an artifact
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Id">
            <summary>
            Id of the code review attachment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.DisplayName">
            <summary>
            The display name of the attachment, can't be null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Url">
            <summary>
            The url to download the content of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Description">
            <summary>
            The description of the attachment, can be null.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Author">
            <summary>
            The person that uploaded this attachment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.CreatedDate">
            <summary>
            The time the attachment was uploaded
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.ContentHash">
            <summary>
            Content hash of on-disk representation of file content. Its calculated by the server by using SHA1 hash function.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.Id">
            <summary>
            The pull request comment id. It always starts from 1.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.ParentCommentId">
            <summary>
            The pull request comment id of the parent comment. This is used for replies
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.ThreadId">
            <summary>
            Represents the parent thread id.
            Used for internal server purposes only -- note that this field is not exposed to the REST client.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.Author">
            <summary>
            The author of the pull request comment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.Content">
            <summary>
            The comment's content.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.PublishedDate">
            <summary>
            The date a comment was first published.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.LastUpdatedDate">
            <summary>
            The date a comment was last updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.IsDeleted">
            <summary>
            Marks if this comment was soft-deleted.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.CommentType">
            <summary>
            Determines what kind of comment when it was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.UsersLiked">
            <summary>
            A list of the users who've liked this comment.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType">
            <summary>
            The type of a comment.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType.Unknown">
            <summary>
            The comment type is not known.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType.Text">
            <summary>
            This is a regular user comment.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType.CodeChange">
            <summary>
            The comment comes as a result of a code change.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType.System">
            <summary>
            The comment represents a system message.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread">
            <summary>
            Represents a given comment thread
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Id">
            <summary>
            The comment thread id.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.PublishedDate">
            <summary>
            The time this thread was published.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.LastUpdatedDate">
            <summary>
            The time this thread was last updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Comments">
            <summary>
            A list of the comments.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Status">
            <summary>
            The status of the comment thread.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.ThreadContext">
            <summary>
            Specify thread context such as position in left/right file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Properties">
            <summary>
            A list of (optional) thread properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.IsDeleted">
            <summary>
            Specify if the thread is deleted which happens when all comments are deleted
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus">
            <summary>
            The status of a comment thread.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.FilePath">
            <summary>
            File path relative to the root of the repository. It's up to the client to use any path format.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.LeftFileStart">
            <summary>
            Position of first character of the comment in left file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.LeftFileEnd">
            <summary>
            Position of last character of the comment in left file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.RightFileStart">
            <summary>
            Position of first character of the comment in right file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.RightFileEnd">
            <summary>
            Position of last character of the comment in right file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentPosition.Line">
            <summary>
            Position line starting with one.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentPosition.Offset">
            <summary>
            Position offset starting with zero.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeTreeItems.Items">
            <summary>
            The last change of items.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeTreeItems.LastExploredTime">
            <summary>
            The last explored time, in case the result is not comprehensive. Null otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeItem.Path">
            <summary>
            Gets or sets the path of the item.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeItem.CommitId">
            <summary>
            Gets or sets the commit Id this item was modified most recently for the provided version.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria">
            <summary>
            Criteria used in a search for change lists
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ItemPath">
            <summary>
            Path of item to search under. If the itemPaths memebr is used then it will take precedence over this.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ItemPaths">
            <summary>
            List of item paths to search under. If this member is used then itemPath will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ItemVersion">
            <summary>
            Version of the items to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.User">
            <summary>
            Alias or display name of user who made the changes
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FromDate">
            <summary>
            If provided, only include history entries created after this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ToDate">
            <summary>
            If provided, only include history entries created before this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FromVersion">
            <summary>
            If provided, a version descriptor for the earliest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ToVersion">
            <summary>
            If provided, a version descriptor for the latest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.CompareVersion">
            <summary>
            If provided, a version descriptor to compare against base
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FollowRenames">
            <summary>
            Whether or not to follow renames for the given item being queried
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ExcludeDeletes">
            <summary>
            If true, don't include delete history entries
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.Skip">
            <summary>
            Number of results to skip (used when clicking more...)
            </summary>
            TODO: this remains for legacy WebAccess support. it will go away when WebAccess moves to the REST API
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.Top">
            <summary>
            If provided, the maximum number of history entries to return
            </summary>
            TODO: this remains for legacy WebAccess support. it will go away when WebAccess moves to the REST API
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.SetFromDate(System.DateTime)">
            <summary>
            Set the from date
            </summary>
            <param name="fromDate">Only include results after this date</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.SetToDate(System.DateTime)">
            <summary>
            Set the to date
            </summary>
            <param name="toDate">Only include results before this date</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileContentMetadata.EncodingWithBom">
            <summary>
            If applicable to the file encoding (typically for UTF-8), specifies if it has a byte order mark (BOM).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBlobRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBlobRef.Size">
            <summary>
            Size of blob content (in bytes)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitChange.OriginalPath">
            <summary>
            Original path of item if different from current path
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitChange.ChangeId">
            <summary>
            Id of the change within the group.  For example, within the iteration
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitChange.NewContentTemplate">
            <summary>
            New Content template to be used
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitHistoryQueryResults.StartingCommitId">
            <summary>
            Seed commit used for querying history.  Used for skip feature.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.ObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.OriginalObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.GitObjectType">
            <summary>
            Type of object (Commit, Tree, Blob, Tag, ...)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.CommitId">
            <summary>
            SHA1 of commit item was fetched at
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.LatestProcessedChange">
            <summary>
            Shallow ref to commit that last changed this item
            Only populated if latestProcessedChange is requested
            May not be accurate if latest change is not yet cached
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.Path">
            <summary>
            Path to item
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.Version">
            <summary>
            Version string (interpretation based on VersionType defined in subclass
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.VersionType">
            <summary>
            How to interpret version (branch,tag,commit)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.VersionOptions">
            <summary>
            Version modifiers (e.g. previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full), or None
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.ItemDescriptors">
            <summary>
            Collection of items to fetch, including path, version, and recursion level
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.IncludeContentMetadata">
            <summary>
            Whether to include metadata for all items
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.LatestProcessedChange">
            <summary>
            Whether to include shallow ref to commit that last changed each item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode">
            <summary>
            Enumerates the modes under which ref updates can be written to their repositories.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode.BestEffort">
            <summary>
            Indicates the Git protocol model where any refs that can be updated will be updated,
            but any failures will not prevent other updates from succeeding.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode.AllOrNone">
            <summary>
            Indicates that all ref updates must succeed or none will succeed. All ref updates will be atomically written.
            If any failure is encountered, previously successful updates will be rolled back and the entire operation will fail.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus">
            <summary>
            Represents the possible outcomes from a request to update a ref in a repository.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Succeeded">
            <summary>
            Indicates that the ref update request was completed successfully.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.ForcePushRequired">
            <summary>
            Indicates that the ref update request could not be completed because part of the graph
            would be disconnected by this change, and the caller does not have ForcePush permission
            on the repository.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.StaleOldObjectId">
            <summary>
            Indicates that the ref update request could not be completed because the old object ID
            presented in the request was not the object ID of the ref when the database attempted
            the update. The most likely scenario is that the caller lost a race to update the ref.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.InvalidRefName">
            <summary>
            Indicates that the ref update request could not be completed because the ref name
            presented in the request was not valid.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Unprocessed">
            <summary>
            The request was not processed
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.UnresolvableToCommit">
            <summary>
            The ref update request could not be completed because the new object ID for the ref
            could not be resolved to a commit object (potentially through any number of tags)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.WritePermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks write permissions
            required to write this ref
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.ManageNotePermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks note creation permissions
            required to write this note
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.CreateBranchPermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks the permission to 
            create a branch
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.CreateTagPermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks the permission to
            create a tag
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RejectedByPlugin">
            <summary>
            The ref update could not be completed because it was rejected by the plugin.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Locked">
            <summary>
            The ref update could not be completed because the ref is locked by another user.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RefNameConflict">
            <summary>
            The ref update could not be completed because, in case-insensitive mode,
            the ref name conflicts with an existing, differently-cased ref name.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RejectedByPolicy">
            <summary>
            The ref update could not be completed because it was rejected by policy.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.SucceededNonExistentRef">
            <summary>
            Indicates that the ref update request was completed successfully,
            but the ref doesn't actually exist so no changes were made.
            
            This should only happen during deletes.
            </summary>
            <remarks>
            Core git (and GitHub by extension) returns "warning: Deleting a non-existent ref." 
            in this case as of 3/5/2015
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.SucceededCorruptRef">
            <summary>
            Indicates that the ref update request was completed successfully,
            but the passed-in ref was corrupt - as in, the old object ID was bad.
            
            This should only happen during deletes.
            </summary>
            <remarks>
            Core git (and GitHub by extension) returns "warning: Allowing deletion of corrupt ref." 
            in this case as of 3/5/2015
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Ids">
            <summary>
            If provided, specifies the exact commit ids of the commits to fetch.
            May not be combined with other parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.FromDate">
            <summary>
            If provided, only include history entries created after this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ToDate">
            <summary>
            If provided, only include history entries created before this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ItemVersion">
            <summary>
            If provided, identifies the commit or branch to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.CompareVersion">
            <summary>
            If provided, the earliest commit in the graph to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.FromCommitId">
            <summary>
            If provided, a lower bound for filtering commits alphabetically
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ToCommitId">
            <summary>
            If provided, an upper bound for filtering commits alphabetically
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Committer">
            <summary>
            Alias or display name of the committer
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Author">
            <summary>
            Alias or display name of the author
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ItemPath">
            <summary>
            Path of item to search under
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ExcludeDeletes">
            <summary>
            If true, don't include delete history entries
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Skip">
            <summary>
            Number of entries to skip
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Top">
            <summary>
            Maximum number of entries to retrieve
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.IncludeWorkItems">
            <summary>
            Whether to include linked work items
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefFavorite.RefFavoriteType">
            <summary>
            Acceptable values for Type property
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.RepositoryId">
            <summary>
            Repository ID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.Name">
            <summary>
            Ref name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.OldObjectId">
            <summary>
            Old object ID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.NewObjectId">
            <summary>
            New object ID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.IsLocked">
            <summary>
            Whether the ref is locked or not
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.UpdateStatus">
            <summary>
            Status of the update from the TFS server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.RejectedBy">
            <summary>
            Name of the plugin that rejected the updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.CustomMessage">
            <summary>
            Custom message for the result object
            For instance, Reason for failing. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.Success">
            <summary>
            True if the ref update succeeded, false otherwise
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.RelativePath">
            <summary>
            Path relative to parent tree object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Mode">
            <summary>
            Mode represented as octal string
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.GitObjectType">
            <summary>
            Blob or tree
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Url">
            <summary>
            url to retrieve tree or blob
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Size">
            <summary>
            Size of content
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.Url">
            <summary>
            Url to tree 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.TreeEntries">
            <summary>
            Blobs and trees under this tree
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.Size">
            <summary>
            Sum of sizes of all children
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, commit, or index). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch/index, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, or commit). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, or commit). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType">
            <summary>
            Accepted types of version
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Branch">
            <summary>
            Interpret the version as a branch name
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Tag">
            <summary>
            Interpret the version as a tag name
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Commit">
            <summary>
            Interpret the version as a commit ID (SHA1)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Index">
            <summary>
            Interpret the version as an index name
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions">
            <summary>
            Accepted types of version options
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.None">
            <summary>
            Not specified
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.PreviousChange">
            <summary>
            Commit that changed item prior to the current version
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.FirstParent">
            <summary>
            First parent of commit (HEAD^)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.TargetObjectId">
            <summary>
            SHA1 hash of the object in the target tree, if it exists. 
            Will be null in case of deletes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.BaseObjectId">
            <summary>
            SHA1 hash of the object in the base tree, if it exists.
            Will be null in case of adds.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.ObjectType">
            <summary>
            Object type of the tree entry. 
            Blob, Tree or Commit("submodule")
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.Path">
            <summary>
            Relative path in base and target trees.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.ChangeType">
            <summary>
            Type of change that affected this entry.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiff.BaseTreeId">
            <summary>
            ObjectId of the base tree of this diff.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiff.TargetTreeId">
            <summary>
            ObjectId of the target tree of this diff.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiff.DiffEntries">
            <summary>
            List of tree entries that differ between the base
            and target tree.
            
            Renames and object type changes are returned as a 
            delete for the old object and add for the new object.
            
            If a continuation token is returned in the response header, 
            some tree entries are yet to be processed and may yeild more
            diff entries. If the continuation token is not returned
            all the diff entries have been included in this response.        
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiff.Url">
            <summary>
            REST Url to this resource.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffResponse.ContinuationToken">
            <summary>
            The HTTP client methods find the continuation token header in the 
            response and populate this field. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest.Parameters">
            <summary>
            Parameters for creating an import request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters">
            <summary>
            Parameters for creating an import request
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.TfvcSource">
            <summary>
            Source for importing tfvc repository
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.GitSource">
            <summary>
            Source for importing git repository
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.ServiceEndpointId">
            <summary>
            Service Endpoint for connection to external endpoint
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.DeleteServiceEndpointAfterImportIsDone">
            <summary>
            Option to delete service endpoint when import is done
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportGitSource">
            <summary>
            Parameter for creating a git import request when source is Git version control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportGitSource.Url">
            <summary>
            Url for the source repo
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportTfvcSource">
            <summary>
            Parameter for creating a git import request when source is tfvc version control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportTfvcSource.Path">
            <summary>
            Path which we want to import (this can be copied from Path Control in Explorer)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportTfvcSource.ImportHistory">
            <summary>
            Set true to import History, false otherwise
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportTfvcSource.ImportHistoryDurationInDays">
            <summary>
            Get history for last n days (max allowed value is 180 days)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestChange.ChangeTrackingId">
            <summary>
            Id used to track files through multiple changes
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread">
            <summary>
            Represents a given user or system Pull Request comment thread
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread.ArtifactUri">
            <summary>
            The artifact uri of the comment thread id.
            Used for internal server purposes only -- note that this field is not exposed to the REST client.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread.PullRequestThreadContext">
            <summary>
            Extended context information unique to pull requests
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread.MarkForUpdate">
            <summary>
            Specifies whether a thread is marked for an update operation.
            Used for internal server purposes only -- note that this field is not exposed to the REST client.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThreadContext.IterationContext">
            <summary>
            Specify comparing iteration Ids when a comment thread is added while comparing 2 iterations.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThreadContext.TrackingCriteria">
            <summary>
            The criteria used to track this thread. If this property is filled out when the thread is returned, then
            the thread has been tracked from its original location using the given criteria.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThreadContext.ChangeTrackingId">
            <summary>
            Used to track a comment across iterations.
            This value can be found by looking at the iteration's changes list.
            Must be set for pull requests with iteration support. Otherwise, it's not required for 'legacy' pull requests. 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentIterationContext">
            <summary>
            Iteration context is used to specify comparing iteration Ids when a comment thread is added while comparing 2 iterations.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentIterationContext.FirstComparingIteration">
            <summary>
            First comparing iteration Id. Minimum value is 1.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentIterationContext.SecondComparingIteration">
            <summary>
            Second comparing iteration Id. Minimum value is 1.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria">
            <summary>
            Criteria to decide if and how a thread should be tracked
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.FirstComparingIteration">
            <summary>
            The first comparing iteration being viewed. Threads will be tracked if this is greater than 0.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.SecondComparingIteration">
            <summary>
            The second comparing iteration being viewed. Threads will be tracked if this is greater than 0.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestTabExtensionConfig">
            <summary>
            Initial config contract sent to extensions creating tabs
            on the pull request page
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryType">
            <summary>
            Accepted types of pull request queries
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryType.NotSet">
            <summary>
            No query type set
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryType.LastMergeCommit">
            <summary>
            search by merge commit
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryType.Commit">
            <summary>
            search by commit
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryInput">
            <summary>
            The input required for a pull request query.
            Currently there is only one query: LastMergeCommit,
            which returns all pull requests whose LastMergeCommit
            is in the list of CommitIds.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryInput.Type">
            <summary>
            The type of query to perform
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryInput.Items">
            <summary>
            The list commit ids to search for.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery">
            <summary>
            A pull request query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery.QueryInputs">
            <summary>
            The query to perform
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery.Results">
            <summary>
            The results of the query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestReviewFileContentInfo.Path">
            <summary>
            The file change path.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestReviewFileContentInfo.SHA1Hash">
            <summary>
            Content hash of on-disk representation of file content. Its calculated by the client by using SHA1 hash function.
            Ensure that uploaded file has same encoding as in source control.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus">
            <summary>
            This class contains the metadata of a service/extension posting status.
            Status can be associated with a pull request or an iteration.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictDirectoryFile">
            <summary>
            Data object for FileDirectory conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictFileDirectory">
            <summary>
            Data object for DirectoryFile conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictDeleteEdit">
            <summary>
            Data object for EditDelete conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPickOneAction
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictEditDelete">
            <summary>
            Data object for DeleteEdit conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPickOneAction
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictEditEdit">
            <summary>
            Data object for EditEdit conflict
            </summary>
            <remarks>
            Resolve with GitResolutionContentMerge
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRenameRename">
            <summary>
            Data object for RenameRename conflict
            </summary>
            <remarks>
            Resolve with GitResolutionContentMerge
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictAddRename">
            <summary>
            Data object for RenameAdd conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictDeleteRename">
            <summary>
            Data object for RenameDelete conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPickOneAction
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRename2to1">
            <summary>
            Data object for Rename2to1 conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRename1to2">
            <summary>
            Data object for Rename1to2 conflict
            </summary>
            <remarks>
            Resolve with GitResolutionRename1to2
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRenameDelete">
            <summary>
            Data object for DeleteRename conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPickOneAction
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRenameAdd">
            <summary>
            Data object for AddRename conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictAddAdd">
            <summary>
            Data object for AddAdd conflict
            </summary>
            <remarks>
            Resolve with GitResolutionContentMerge
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionStatus">
            <summary>
            Resolution status of a conflict.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType">
            <summary>
            The type of a merge conflict.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.None">
            <summary>
            No conflict
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.AddAdd">
            <summary>
            Added on source and target; content differs
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.AddRename">
            <summary>
            Added on source and rename destination on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.DeleteEdit">
            <summary>
            Deleted on source and edited on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.DeleteRename">
            <summary>
            Deleted on source and renamed on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.DirectoryFile">
            <summary>
            Path is a directory on source and a file on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.DirectoryChild">
            <summary>
            Children of directory which has DirectoryFile or FileDirectory conflict
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.EditDelete">
            <summary>
            Edited on source and deleted on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.EditEdit">
            <summary>
            Edited on source and target; content differs
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.FileDirectory">
            <summary>
            Path is a file on source and a directory on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.Rename1to2">
            <summary>
            Same file renamed on both source and target; destination paths differ
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.Rename2to1">
            <summary>
            Different files renamed to same destination path on both source and target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.RenameAdd">
            <summary>
            Rename destination on source and new file on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.RenameDelete">
            <summary>
            Renamed on source and deleted on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.RenameRename">
            <summary>
            Rename destination on both source and target; content differs
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError">
            <summary>
            The type of a merge conflict.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.None">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.MergeContentNotFound">
            <summary>
            User set a blob id for resolving a content merge, but blob was not found in repo during application
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.PathInUse">
            <summary>
            Attempted to resolve a conflict by moving a file to another path, but path was already in use
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.InvalidPath">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.UnknownAction">
            <summary>
            GitResolutionAction was set to an unrecognized value
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.UnknownMergeType">
            <summary>
            GitResolutionMergeType was set to an unrecognized value
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.OtherError">
            <summary>
            Any error for which a more specific code doesn't apply
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ChangeList">
            <summary>
            The Change list (changeset/commit/shelveset) for this point in history
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ItemChangeType">
            <summary>
            The change made to the item from this change list (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ServerItem">
            <summary>
            The path of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryQueryResults`1.Results">
            <summary>
            The history entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryQueryResults`1.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            A more RESTy solution would be to include a Link header
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions">
            <summary>
            Optional details to include when returning an item model
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full) or None for folder items
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.Results">
            <summary>
            The change entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.ChangeCounts">
            <summary>
            Total counts for each type of change
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType">
            <summary>
            Type of change for a diff block
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.None">
            <summary>
            No change - left and right sides are identical
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Add">
            <summary>
            Content was added to the right side
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Delete">
            <summary>
            Content was deleted from the left side
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Edit">
            <summary>
            Lines were modified
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlock.TruncatedBefore">
            <summary>
            True for "ChangeType=None" blocks in a partial diff
            that have been truncated before the included text.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlock.TruncatedAfter">
            <summary>
            True for "ChangeType=None" blocks in a partial diff
            that have been truncated after the included text.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters">
            <summary>
            Parameters used when diffing 2 files
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.OriginalPath">
            <summary>
            Server path of the left/original item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.OriginalVersion">
            <summary>
            Version description of the original item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.ModifiedPath">
            <summary>
            Server path of the right/modified item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.ModifiedVersion">
            <summary>
            Version description of the right/modified item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.PartialDiff">
            <summary>
            If true, only return the changed diff blocks plus a few unchanged lines before and after each change block.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.IgnoreTrimmedWhitespace">
            <summary>
            Unless false, ignore whitespace at the beginning and end of each line
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.LineNumbersOnly">
            <summary>
            If true, don't include the content in the returned diff blocks. Only include the line numbers.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.IncludeCharDiffs">
            <summary>
            If true, include char diffs with each diff block
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitHistoryQueryResults.StartingCommitId">
            <summary>
            Seed commit used for querying history.  Used for skip feature.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitItem.ObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitItem.CommitId">
            <summary>
            This is not used on the serverside, but is used by TypeScript.  Its added here for code generation.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitObjectReference">
            <summary>
            Represents a shallow reference to a Git object for serialization
            </summary>
            <example>
            A GitCommit may have several parents, represented by a list of GitObjectReference instances.
            This list would be serialized to JSON as something like
            "parents": [
                { 
                    "objectId": "25c12518372b4a18f1b9d85f83ae01097604dc88",
                    "url": "http://my-tfs-server/_apis/git/commits/25c12518372b4a18f1b9d85f83ae01097604dc88"
                }
            ]
            </example>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ChangeList">
            <summary>
            The Change list (changeset/commit/shelveset) for this point in history
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ItemChangeType">
            <summary>
            The change made to the item from this change list (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ServerItem">
            <summary>
            The path of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryQueryResults.Results">
            <summary>
            The history entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryQueryResults.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            A more RESTy solution would be to include a Link header
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions">
            <summary>
            Optional details to include when returning an item model
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full) or None for folder items
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.IncludeVersionDescription">
            <summary>
            If true, include a detailed version description
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.ScanBytesForEncoding">
            <summary>
            The maximum number of bytes to scan when attempting to detect file encoding.
            This is an optional implementation detail for IncludeContentMetadata, and not part of the Data Contract.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsChange.PendingVersion">
            <summary>
            Version at which a (shelved) change was pended against
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsHistoryEntry.FileId">
            <summary>
            The file id of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsHistoryEntry.Encoding">
            <summary>
            The encoding of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.VersionControlRecursionType.None">
            <summary>
            Only return the specified item.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.VersionControlRecursionType.OneLevel">
            <summary>
            Return the specified item and its direct children.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.VersionControlRecursionType.OneLevelPlusNestedEmptyFolders">
            <summary>
            Return the specified item and its direct children,
            as well as recursive chains of nested child folders that only contain a single folder.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.VersionControlRecursionType.Full">
            <summary>
            Return specified item and all descendants
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTemplate.Name">
            <summary>
            Name of the Template
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTemplate.Type">
            <summary>
            Type of the Template
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange.PendingVersion">
            <summary>
            Version at which a (shelved) change was pended against
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange.MergeSources">
            <summary>
            List of merge sources in case of rename or branch creation. 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria">
            <summary>
            Criteria used in a search for change lists
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ItemPath">
            <summary>
            Path of item to search under
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.versionDescriptor">
            <summary> 
            Version of the item to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.Author">
            <summary>
            Alias or display name of user who made the changes
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FromDate">
            <summary>
            If provided, only include changesets created after this date (string)
            Think of a better name for this. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ToDate">
            <summary>
            If provided, only include changesets created before this date (string)
            Think of a better name for this. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FromId">
            <summary>
            If provided, only include changesets after this changesetID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ToId">
            <summary>
            If provided, a version descriptor for the latest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FollowRenames">
            <summary>
            Whether or not to follow renames for the given item being queried
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHistoryEntry.FileId">
            <summary>
            The file id of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHistoryEntry.Encoding">
            <summary>
            The encoding of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem.Size">
            <summary>
            The size of the file, if applicable. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem.HashValue">
            <summary>
            MD5 hash as a base 64 string, applies to files only. 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemDescriptor">
            <summary>
            Item path and Version descriptor properties 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.ServerItem">
            <summary>
            The server item of the merge source
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.VersionFrom">
            <summary>
            Start of the version range
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.VersionTo">
            <summary>
            End of the version range
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.IsRename">
            <summary>
            Indicates if this a rename source. If false, it is a merge source.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelveset">
            <summary>
            This is the deep shelveset class
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRef">
            <summary>
            This is the shallow shelveset class
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.Name">
            <summary>
            Shelveset's name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.Owner">
            <summary>
            Owner's ID. Could be a name or a guid.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.MaxCommentLength">
            <summary>
            Max length of comment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.MaxChangeCount">
            <summary>
            Max number of changes to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeDetails">
            <summary>
            Whether to include policyOverride and notes
            Only applies when requesting a single deep shelveset
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeWorkItems">
            <summary>
            Whether to include workItems
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references.
            Does not apply when requesting a single deep shelveset object. Links will always be included in the deep shelveset.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIdeType">
            <summary>
            Enumeration that represents the types of IDEs supported.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde">
            <summary>
            Represents a Supported IDE entity.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.IdeType">
            <summary>
            The type of the IDE.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.Name">
            <summary>
            The name of the IDE.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.DownloadUrl">
            <summary>
            The download URL for the IDE.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.ProtocolHandlerUrl">
            <summary>
            The URL to open the protocol handler for the IDE.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.SupportedPlatforms">
            <summary>
            A list of SupportedPlatforms.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext">
            <summary>
            Context used while sharing a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext.Receivers">
            <summary>
            Identities of users who will receive a share notification.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext.Message">
            <summary>
            Optional user note or message.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType.None">
            <summary>
            Only return the specified item.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType.OneLevel">
            <summary>
            Return the specified item and its direct children.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType.OneLevelPlusNestedEmptyFolders">
            <summary>
            Return the specified item and its direct children,
            as well as recursive chains of nested child folders that only contain a single folder.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType.Full">
            <summary>
            Return specified item and all descendants
            </summary>
        </member>
    </members>
</doc>
