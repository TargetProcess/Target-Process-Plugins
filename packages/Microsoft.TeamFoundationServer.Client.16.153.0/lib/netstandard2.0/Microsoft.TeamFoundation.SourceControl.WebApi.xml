<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.TeamFoundation.SourceControl.WebApi</name>
    </assembly>
    <members>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAnnotatedTagAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an annotated tag.
            </summary>
            <param name="tagObject">Object containing details of tag to be created.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAnnotatedTagAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an annotated tag.
            </summary>
            <param name="tagObject">Object containing details of tag to be created.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAnnotatedTagAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an annotated tag.
            </summary>
            <param name="tagObject">Object containing details of tag to be created.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAnnotatedTagAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an annotated tag.
            </summary>
            <param name="tagObject">Object containing details of tag to be created.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAnnotatedTagAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get an annotated tag.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="objectId">ObjectId (Sha1Id) of tag to get.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAnnotatedTagAsync(System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get an annotated tag.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="objectId">ObjectId (Sha1Id) of tag to get.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAnnotatedTagAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get an annotated tag.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="objectId">ObjectId (Sha1Id) of tag to get.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAnnotatedTagAsync(System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get an annotated tag.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="objectId">ObjectId (Sha1Id) of tag to get.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobContentAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds">Blob IDs (SHA1 hashes) to be returned in the zip file.</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds">Blob IDs (SHA1 hashes) to be returned in the zip file.</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds">Blob IDs (SHA1 hashes) to be returned in the zip file.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds">Blob IDs (SHA1 hashes) to be returned in the zip file.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds">Blob IDs (SHA1 hashes) to be returned in the zip file.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobsZipAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Gets one or more blobs in a zip file download.
            </summary>
            <param name="blobIds">Blob IDs (SHA1 hashes) to be returned in the zip file.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filename"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBlobZipAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="resolveLfs">If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="name">Name of the branch.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="name">Name of the branch.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="name">Name of the branch.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="name">Name of the branch.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="name">Name of the branch.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about a single branch.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="name">Name of the branch.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchesAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve statistics about all branches within a repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="baseVersionDescriptor">Identifies the commit or branch to use as the base.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="searchCriteria"></param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="searchCriteria"></param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.String,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="searchCriteria"></param>
             <param name="project">Project ID or project name</param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="searchCriteria"></param>
             <param name="project">Project ID or project name</param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="searchCriteria"></param>
             <param name="project">Project ID</param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetBranchStatsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryBranchStatsCriteria,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="searchCriteria"></param>
             <param name="project">Project ID</param>
             <param name="repositoryId"></param>
             <param name="userState"></param>
             <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetChangesAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve changes for a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="top">The maximum number of changes to return.</param>
            <param name="skip">The number of changes to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickRelationshipsAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Given a <paramref name="commitId" />, returns a list of commits that are in the same cherry-pick family.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId"></param>
            <param name="commitId"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickRelationshipsAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Given a <paramref name="commitId" />, returns a list of commits that are in the same cherry-pick family.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId"></param>
            <param name="commitId"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickRelationshipsAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Given a <paramref name="commitId" />, returns a list of commits that are in the same cherry-pick family.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId"></param>
            <param name="commitId"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickRelationshipsAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Given a <paramref name="commitId" />, returns a list of commits that are in the same cherry-pick family.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId"></param>
            <param name="commitId"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickRelationshipsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Given a <paramref name="commitId" />, returns a list of commits that are in the same cherry-pick family.
            </summary>
            <param name="repositoryNameOrId"></param>
            <param name="commitId"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickRelationshipsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Given a <paramref name="commitId" />, returns a list of commits that are in the same cherry-pick family.
            </summary>
            <param name="repositoryNameOrId"></param>
            <param name="commitId"></param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCherryPickAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Cherry pick a specific commit or commits that are associated to a pull request into a new branch.
            </summary>
            <param name="cherryPickToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCherryPickAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Cherry pick a specific commit or commits that are associated to a pull request into a new branch.
            </summary>
            <param name="cherryPickToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCherryPickAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Cherry pick a specific commit or commits that are associated to a pull request into a new branch.
            </summary>
            <param name="cherryPickToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCherryPickAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Cherry pick a specific commit or commits that are associated to a pull request into a new branch.
            </summary>
            <param name="cherryPickToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a cherry pick by cherry pick Id.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="cherryPickId">ID of the cherry pick.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickAsync(System.String,System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a cherry pick by cherry pick Id.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="cherryPickId">ID of the cherry pick.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a cherry pick by cherry pick Id.
            </summary>
            <param name="project">Project ID</param>
            <param name="cherryPickId">ID of the cherry pick.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickAsync(System.Guid,System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a cherry pick by cherry pick Id.
            </summary>
            <param name="project">Project ID</param>
            <param name="cherryPickId">ID of the cherry pick.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickForRefNameAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a cherry pick for a specific branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="refName">The GitAsyncRefOperationParameters generatedRefName used for the cherry pick operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickForRefNameAsync(System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a cherry pick for a specific branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="refName">The GitAsyncRefOperationParameters generatedRefName used for the cherry pick operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickForRefNameAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a cherry pick for a specific branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="refName">The GitAsyncRefOperationParameters generatedRefName used for the cherry pick operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCherryPickForRefNameAsync(System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a cherry pick for a specific branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="refName">The GitAsyncRefOperationParameters generatedRefName used for the cherry pick operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Find the closest common commit (the merge base) between base and target commits, and get the diff between either the base and target commits or common and target commits.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="diffCommonCommit">If true, diff between common and target commits. If false, diff between base and target commits.</param>
            <param name="top">Maximum number of changes to return. Defaults to 100.</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor">Descriptor for base commit.</param>
            <param name="targetVersionDescriptor">Descriptor for target commit.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Find the closest common commit (the merge base) between base and target commits, and get the diff between either the base and target commits or common and target commits.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="diffCommonCommit">If true, diff between common and target commits. If false, diff between base and target commits.</param>
            <param name="top">Maximum number of changes to return. Defaults to 100.</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor">Descriptor for base commit.</param>
            <param name="targetVersionDescriptor">Descriptor for target commit.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Find the closest common commit (the merge base) between base and target commits, and get the diff between either the base and target commits or common and target commits.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="diffCommonCommit">If true, diff between common and target commits. If false, diff between base and target commits.</param>
            <param name="top">Maximum number of changes to return. Defaults to 100.</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor">Descriptor for base commit.</param>
            <param name="targetVersionDescriptor">Descriptor for target commit.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Find the closest common commit (the merge base) between base and target commits, and get the diff between either the base and target commits or common and target commits.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="diffCommonCommit">If true, diff between common and target commits. If false, diff between base and target commits.</param>
            <param name="top">Maximum number of changes to return. Defaults to 100.</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor">Descriptor for base commit.</param>
            <param name="targetVersionDescriptor">Descriptor for target commit.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Find the closest common commit (the merge base) between base and target commits, and get the diff between either the base and target commits or common and target commits.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="diffCommonCommit">If true, diff between common and target commits. If false, diff between base and target commits.</param>
            <param name="top">Maximum number of changes to return. Defaults to 100.</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor">Descriptor for base commit.</param>
            <param name="targetVersionDescriptor">Descriptor for target commit.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitDiffsAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor,Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Find the closest common commit (the merge base) between base and target commits, and get the diff between either the base and target commits or common and target commits.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="diffCommonCommit">If true, diff between common and target commits. If false, diff between base and target commits.</param>
            <param name="top">Maximum number of changes to return. Defaults to 100.</param>
            <param name="skip">Number of changes to skip</param>
            <param name="baseVersionDescriptor">Descriptor for base commit.</param>
            <param name="targetVersionDescriptor">Descriptor for target commit.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.String,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a particular commit.
            </summary>
            <param name="commitId">The id of the commit.</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="changeCount">The number of changes to include in the result.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="searchCriteria"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks">Set to false to avoid including REST Url links for resources. Defaults to true.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks">Set to false to avoid including REST Url links for resources. Defaults to true.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks">Set to false to avoid including REST Url links for resources. Defaults to true.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks">Set to false to avoid including REST Url links for resources. Defaults to true.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks">Set to false to avoid including REST Url links for resources. Defaults to true.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushCommitsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of commits associated with a particular push.
            </summary>
            <param name="repositoryId">The id or friendly name of the repository. To use the friendly name, projectId must also be specified.</param>
            <param name="pushId">The id of the push.</param>
            <param name="top">The maximum number of commits to return ("get the top x commits").</param>
            <param name="skip">The number of commits to skip.</param>
            <param name="includeLinks">Set to false to avoid including REST Url links for resources. Defaults to true.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project matching the search criteria
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="top">Maximum number of commits to return.</param>
            <param name="includeStatuses">True to include additional commit status information.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project matching the search criteria
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="top">Maximum number of commits to return.</param>
            <param name="includeStatuses">True to include additional commit status information.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project matching the search criteria
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="top">Maximum number of commits to return.</param>
            <param name="includeStatuses">True to include additional commit status information.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project matching the search criteria
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="top">Maximum number of commits to return.</param>
            <param name="includeStatuses">True to include additional commit status information.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project matching the search criteria
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="top">Maximum number of commits to return.</param>
            <param name="includeStatuses">True to include additional commit status information.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommitsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria,System.Guid,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git commits for a project matching the search criteria
            </summary>
            <param name="searchCriteria">Search options</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="top">Maximum number of commits to return.</param>
            <param name="includeStatuses">True to include additional commit status information.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetDeletedRepositoriesAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve deleted git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetDeletedRepositoriesAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve deleted git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetFileDiffsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffsCriteria,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file diffs for each of the specified files
            </summary>
            <param name="fileDiffsCriteria">List of file parameters objects</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetFileDiffsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffsCriteria,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file diffs for each of the specified files
            </summary>
            <param name="fileDiffsCriteria">List of file parameters objects</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetFileDiffsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffsCriteria,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file diffs for each of the specified files
            </summary>
            <param name="fileDiffsCriteria">List of file parameters objects</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetFileDiffsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffsCriteria,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file diffs for each of the specified files
            </summary>
            <param name="fileDiffsCriteria">List of file parameters objects</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForksAsync(System.String,System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all forks of a repository in the collection.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="collectionId">Team project collection ID.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForksAsync(System.String,System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all forks of a repository in the collection.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="collectionId">Team project collection ID.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForksAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all forks of a repository in the collection.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="collectionId">Team project collection ID.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForksAsync(System.Guid,System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all forks of a repository in the collection.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="collectionId">Team project collection ID.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForksAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all forks of a repository in the collection.
            </summary>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="collectionId">Team project collection ID.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForksAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all forks of a repository in the collection.
            </summary>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="collectionId">Team project collection ID.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateForkSyncRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request that another repository's refs be fetched into this one. It syncs two existing forks. To create a fork, please see the <a href="https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1"> repositories endpoint</a>
            </summary>
            <param name="syncParams">Source repository and ref mapping.</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateForkSyncRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request that another repository's refs be fetched into this one. It syncs two existing forks. To create a fork, please see the <a href="https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1"> repositories endpoint</a>
            </summary>
            <param name="syncParams">Source repository and ref mapping.</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateForkSyncRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters,System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request that another repository's refs be fetched into this one. It syncs two existing forks. To create a fork, please see the <a href="https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1"> repositories endpoint</a>
            </summary>
            <param name="syncParams">Source repository and ref mapping.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateForkSyncRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters,System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request that another repository's refs be fetched into this one. It syncs two existing forks. To create a fork, please see the <a href="https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1"> repositories endpoint</a>
            </summary>
            <param name="syncParams">Source repository and ref mapping.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateForkSyncRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request that another repository's refs be fetched into this one. It syncs two existing forks. To create a fork, please see the <a href="https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1"> repositories endpoint</a>
            </summary>
            <param name="syncParams">Source repository and ref mapping.</param>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateForkSyncRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters,System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request that another repository's refs be fetched into this one. It syncs two existing forks. To create a fork, please see the <a href="https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1"> repositories endpoint</a>
            </summary>
            <param name="syncParams">Source repository and ref mapping.</param>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestAsync(System.String,System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific fork sync operation's details.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="forkSyncOperationId">OperationId of the sync request.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific fork sync operation's details.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="forkSyncOperationId">OperationId of the sync request.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific fork sync operation's details.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="forkSyncOperationId">OperationId of the sync request.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific fork sync operation's details.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="forkSyncOperationId">OperationId of the sync request.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestAsync(System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific fork sync operation's details.
            </summary>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="forkSyncOperationId">OperationId of the sync request.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestAsync(System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific fork sync operation's details.
            </summary>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="forkSyncOperationId">OperationId of the sync request.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all requested fork sync operations on this repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned requests.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestsAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all requested fork sync operations on this repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned requests.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all requested fork sync operations on this repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned requests.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestsAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all requested fork sync operations on this repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned requests.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all requested fork sync operations on this repository.
            </summary>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned requests.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetForkSyncRequestsAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all requested fork sync operations on this repository.
            </summary>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned requests.</param>
            <param name="includeLinks">True to include links.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an import request.
            </summary>
            <param name="importRequest">The import request to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an import request.
            </summary>
            <param name="importRequest">The import request to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an import request.
            </summary>
            <param name="importRequest">The import request to create.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create an import request.
            </summary>
            <param name="importRequest">The import request to create.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetImportRequestAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular import request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="importRequestId">The unique identifier for the import request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetImportRequestAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular import request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="importRequestId">The unique identifier for the import request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetImportRequestAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular import request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="importRequestId">The unique identifier for the import request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetImportRequestAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a particular import request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="importRequestId">The unique identifier for the import request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.QueryImportRequestsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve import requests for a repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned import requests in the results.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.QueryImportRequestsAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve import requests for a repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned import requests in the results.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.QueryImportRequestsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve import requests for a repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned import requests in the results.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.QueryImportRequestsAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve import requests for a repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeAbandoned">True to include abandoned import requests in the results.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retry or abandon a failed import request.
            </summary>
            <param name="importRequestToUpdate">The updated version of the import request. Currently, the only change allowed is setting the Status to Queued or Abandoned.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="importRequestId">The unique identifier for the import request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retry or abandon a failed import request.
            </summary>
            <param name="importRequestToUpdate">The updated version of the import request. Currently, the only change allowed is setting the Status to Queued or Abandoned.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="importRequestId">The unique identifier for the import request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retry or abandon a failed import request.
            </summary>
            <param name="importRequestToUpdate">The updated version of the import request. Currently, the only change allowed is setting the Status to Queued or Abandoned.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="importRequestId">The unique identifier for the import request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateImportRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retry or abandon a failed import request.
            </summary>
            <param name="importRequestToUpdate">The updated version of the import request. Currently, the only change allowed is setting the Status to Queued or Abandoned.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="importRequestId">The unique identifier for the import request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="includeLinks">Set to true to include links to items.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="includeLinks">Set to true to include links to items.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="includeLinks">Set to true to include links to items.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="includeLinks">Set to true to include links to items.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="includeLinks">Set to true to include links to items.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="includeLinks">Set to true to include links to items.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is the default branch for the repository.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="resolveLfs">Set to true to resolve Git LFS pointer files to return actual content from Git LFS.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData">Request data attributes: ItemDescriptors, IncludeContentMetadata, LatestProcessedChange, IncludeLinks. ItemDescriptors: Collection of items to fetch, including path, version, and recursion level. IncludeContentMetadata: Whether to include metadata for all items LatestProcessedChange: Whether to include shallow ref to commit that last changed each item. IncludeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData">Request data attributes: ItemDescriptors, IncludeContentMetadata, LatestProcessedChange, IncludeLinks. ItemDescriptors: Collection of items to fetch, including path, version, and recursion level. IncludeContentMetadata: Whether to include metadata for all items LatestProcessedChange: Whether to include shallow ref to commit that last changed each item. IncludeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData">Request data attributes: ItemDescriptors, IncludeContentMetadata, LatestProcessedChange, IncludeLinks. ItemDescriptors: Collection of items to fetch, including path, version, and recursion level. IncludeContentMetadata: Whether to include metadata for all items LatestProcessedChange: Whether to include shallow ref to commit that last changed each item. IncludeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData">Request data attributes: ItemDescriptors, IncludeContentMetadata, LatestProcessedChange, IncludeLinks. ItemDescriptors: Collection of items to fetch, including path, version, and recursion level. IncludeContentMetadata: Whether to include metadata for all items LatestProcessedChange: Whether to include shallow ref to commit that last changed each item. IncludeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData">Request data attributes: ItemDescriptors, IncludeContentMetadata, LatestProcessedChange, IncludeLinks. ItemDescriptors: Collection of items to fetch, including path, version, and recursion level. IncludeContentMetadata: Whether to include metadata for all items LatestProcessedChange: Whether to include shallow ref to commit that last changed each item. IncludeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
            </summary>
            <param name="requestData">Request data attributes: ItemDescriptors, IncludeContentMetadata, LatestProcessedChange, IncludeLinks. ItemDescriptors: Collection of items to fetch, including path, version, and recursion level. IncludeContentMetadata: Whether to include metadata for all items LatestProcessedChange: Whether to include shallow ref to commit that last changed each item. IncludeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeBasesAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Find the merge bases of two commits, optionally across forks. If <paramref name="otherRepositoryId" /> is not specified, the merge bases will only be calculated within the context of the local <paramref name="repositoryNameOrId" />.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">ID or name of the local repository.</param>
            <param name="commitId">First commit, usually the tip of the target branch of the potential merge.</param>
            <param name="otherCommitId">Other commit, usually the tip of the source branch of the potential merge.</param>
            <param name="otherCollectionId">The collection ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="otherRepositoryId">The repository ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeBasesAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Find the merge bases of two commits, optionally across forks. If <paramref name="otherRepositoryId" /> is not specified, the merge bases will only be calculated within the context of the local <paramref name="repositoryNameOrId" />.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">ID or name of the local repository.</param>
            <param name="commitId">First commit, usually the tip of the target branch of the potential merge.</param>
            <param name="otherCommitId">Other commit, usually the tip of the source branch of the potential merge.</param>
            <param name="otherCollectionId">The collection ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="otherRepositoryId">The repository ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeBasesAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Find the merge bases of two commits, optionally across forks. If <paramref name="otherRepositoryId" /> is not specified, the merge bases will only be calculated within the context of the local <paramref name="repositoryNameOrId" />.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">ID or name of the local repository.</param>
            <param name="commitId">First commit, usually the tip of the target branch of the potential merge.</param>
            <param name="otherCommitId">Other commit, usually the tip of the source branch of the potential merge.</param>
            <param name="otherCollectionId">The collection ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="otherRepositoryId">The repository ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeBasesAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Find the merge bases of two commits, optionally across forks. If <paramref name="otherRepositoryId" /> is not specified, the merge bases will only be calculated within the context of the local <paramref name="repositoryNameOrId" />.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">ID or name of the local repository.</param>
            <param name="commitId">First commit, usually the tip of the target branch of the potential merge.</param>
            <param name="otherCommitId">Other commit, usually the tip of the source branch of the potential merge.</param>
            <param name="otherCollectionId">The collection ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="otherRepositoryId">The repository ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeBasesAsync(System.String,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Find the merge bases of two commits, optionally across forks. If <paramref name="otherRepositoryId" /> is not specified, the merge bases will only be calculated within the context of the local <paramref name="repositoryNameOrId" />.
            </summary>
            <param name="repositoryNameOrId">ID or name of the local repository.</param>
            <param name="commitId">First commit, usually the tip of the target branch of the potential merge.</param>
            <param name="otherCommitId">Other commit, usually the tip of the source branch of the potential merge.</param>
            <param name="otherCollectionId">The collection ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="otherRepositoryId">The repository ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeBasesAsync(System.Guid,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Find the merge bases of two commits, optionally across forks. If <paramref name="otherRepositoryId" /> is not specified, the merge bases will only be calculated within the context of the local <paramref name="repositoryNameOrId" />.
            </summary>
            <param name="repositoryNameOrId">ID or name of the local repository.</param>
            <param name="commitId">First commit, usually the tip of the target branch of the potential merge.</param>
            <param name="otherCommitId">Other commit, usually the tip of the source branch of the potential merge.</param>
            <param name="otherCollectionId">The collection ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="otherRepositoryId">The repository ID where <paramref name="otherCommitId" /> lives.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateMergeRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeParameters,System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request a git merge operation. Currently we support merging only 2 commits.
            </summary>
            <param name="mergeParameters">Parents commitIds and merge commit messsage.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateMergeRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeParameters,System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request a git merge operation. Currently we support merging only 2 commits.
            </summary>
            <param name="mergeParameters">Parents commitIds and merge commit messsage.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateMergeRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeParameters,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request a git merge operation. Currently we support merging only 2 commits.
            </summary>
            <param name="mergeParameters">Parents commitIds and merge commit messsage.</param>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateMergeRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeParameters,System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Request a git merge operation. Currently we support merging only 2 commits.
            </summary>
            <param name="mergeParameters">Parents commitIds and merge commit messsage.</param>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeRequestAsync(System.String,System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific merge operation's details.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="mergeOperationId">OperationId of the merge request.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeRequestAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific merge operation's details.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="mergeOperationId">OperationId of the merge request.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeRequestAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific merge operation's details.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="mergeOperationId">OperationId of the merge request.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetMergeRequestAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a specific merge operation's details.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryNameOrId">The name or ID of the repository.</param>
            <param name="mergeOperationId">OperationId of the merge request.</param>
            <param name="includeLinks">True to include links</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPolicyConfigurationsAsync(System.String,System.Nullable{System.Guid},System.String,System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of policy configurations by a given set of scope/filtering criteria.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository id.</param>
            <param name="refName">The fully-qualified Git ref name (e.g. refs/heads/master).</param>
            <param name="policyType">The policy type filter.</param>
            <param name="top">Maximum number of policies to return.</param>
            <param name="continuationToken">Pass a policy configuration ID to fetch the next page of results, up to top number of results, for this endpoint.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPolicyConfigurationsAsync(System.Guid,System.Nullable{System.Guid},System.String,System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of policy configurations by a given set of scope/filtering criteria.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository id.</param>
            <param name="refName">The fully-qualified Git ref name (e.g. refs/heads/master).</param>
            <param name="policyType">The policy type filter.</param>
            <param name="top">Maximum number of policies to return.</param>
            <param name="continuationToken">Pass a policy configuration ID to fetch the next page of results, up to top number of results, for this endpoint.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Attach a new file to a pull request.
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="fileName">The name of the file.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Attach a new file to a pull request.
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="fileName">The name of the file.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.String,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Attach a new file to a pull request.
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="project">Project ID or project name</param>
            <param name="fileName">The name of the file.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.String,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Attach a new file to a pull request.
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="project">Project ID or project name</param>
            <param name="fileName">The name of the file.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.Guid,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Attach a new file to a pull request.
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="project">Project ID</param>
            <param name="fileName">The name of the file.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateAttachmentAsync(System.IO.Stream,System.Guid,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Attach a new file to a pull request.
            </summary>
            <param name="uploadStream">Stream to upload</param>
            <param name="project">Project ID</param>
            <param name="fileName">The name of the file.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request attachment.
            </summary>
            <param name="fileName">The name of the attachment to delete.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request attachment.
            </summary>
            <param name="fileName">The name of the attachment to delete.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.String,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request attachment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName">The name of the attachment to delete.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.String,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request attachment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName">The name of the attachment to delete.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.Guid,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request attachment.
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName">The name of the attachment to delete.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteAttachmentAsync(System.Guid,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a pull request attachment.
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName">The name of the attachment to delete.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.String,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.String,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.Guid,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentContentAsync(System.Guid,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of files attached to a given pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of files attached to a given pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of files attached to a given pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of files attached to a given pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of files attached to a given pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentsAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a list of files attached to a given pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.String,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.String,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.Guid,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetAttachmentZipAsync(System.Guid,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the file content of a pull request attachment.
            </summary>
            <param name="project">Project ID</param>
            <param name="fileName">The name of the attachment.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateLikeAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Add a like on a comment.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateLikeAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Add a like on a comment.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateLikeAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Add a like on a comment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateLikeAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Add a like on a comment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateLikeAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Add a like on a comment.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateLikeAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Add a like on a comment.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteLikeAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a like on a comment.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteLikeAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a like on a comment.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteLikeAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a like on a comment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteLikeAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a like on a comment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteLikeAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a like on a comment.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteLikeAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete a like on a comment.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetLikesAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get likes for a comment.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetLikesAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get likes for a comment.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetLikesAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get likes for a comment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetLikesAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get likes for a comment.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetLikesAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get likes for a comment.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetLikesAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get likes for a comment.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">The ID of the thread that contains the comment.</param>
            <param name="commentId">The ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="top">Maximum number of commits to return. The maximum number of commits that can be returned per batch is 500.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="top">Maximum number of commits to return. The maximum number of commits that can be returned per batch is 500.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="top">Maximum number of commits to return. The maximum number of commits that can be returned per batch is 500.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="top">Maximum number of commits to return. The maximum number of commits that can be returned per batch is 500.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="top">Maximum number of commits to return. The maximum number of commits that can be returned per batch is 500.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="top">Maximum number of commits to return. The maximum number of commits that can be returned per batch is 500.</param>
            <param name="skip">Number of commits to skip.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestCommitsAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the commits for the specified pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve one conflict for a pull request by ID
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="excludeResolved"></param>
            <param name="onlyResolved"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="excludeResolved"></param>
            <param name="onlyResolved"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="excludeResolved"></param>
            <param name="onlyResolved"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="excludeResolved"></param>
            <param name="onlyResolved"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="excludeResolved"></param>
            <param name="onlyResolved"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestConflictsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve all conflicts for a pull request
            </summary>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="skip"></param>
            <param name="top"></param>
            <param name="includeObsolete"></param>
            <param name="excludeResolved"></param>
            <param name="onlyResolved"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update merge conflict resolution
            </summary>
            <param name="conflict"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="conflictId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict},System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update multiple merge conflict resolutions
            </summary>
            <param name="conflictUpdates"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict},System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update multiple merge conflict resolutions
            </summary>
            <param name="conflictUpdates"></param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict},System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update multiple merge conflict resolutions
            </summary>
            <param name="conflictUpdates"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict},System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update multiple merge conflict resolutions
            </summary>
            <param name="conflictUpdates"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict},System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update multiple merge conflict resolutions
            </summary>
            <param name="conflictUpdates"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestConflictsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitConflict},System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update multiple merge conflict resolutions
            </summary>
            <param name="conflictUpdates"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="pullRequestId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the changes made in a pull request between two iterations.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration. <br /> Iteration IDs are zero-based with zero indicating the common commit between the source and target branches. Iteration one is the head of the source branch at the time the pull request is created and subsequent iterations are created when there are pushes to the source branch.</param>
            <param name="top">Optional. The number of changes to retrieve.  The default value is 100 and the maximum value is 2000.</param>
            <param name="skip">Optional. The number of changes to ignore.  For example, to retrieve changes 101-150, set top 50 and skip to 100.</param>
            <param name="compareTo">ID of the pull request iteration to compare against.  The default value is zero which indicates the comparison is made against the common commit between the source and target branches</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.String,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the changes made in a pull request between two iterations.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration. <br /> Iteration IDs are zero-based with zero indicating the common commit between the source and target branches. Iteration one is the head of the source branch at the time the pull request is created and subsequent iterations are created when there are pushes to the source branch.</param>
            <param name="top">Optional. The number of changes to retrieve.  The default value is 100 and the maximum value is 2000.</param>
            <param name="skip">Optional. The number of changes to ignore.  For example, to retrieve changes 101-150, set top 50 and skip to 100.</param>
            <param name="compareTo">ID of the pull request iteration to compare against.  The default value is zero which indicates the comparison is made against the common commit between the source and target branches</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.Guid,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the changes made in a pull request between two iterations.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration. <br /> Iteration IDs are zero-based with zero indicating the common commit between the source and target branches. Iteration one is the head of the source branch at the time the pull request is created and subsequent iterations are created when there are pushes to the source branch.</param>
            <param name="top">Optional. The number of changes to retrieve.  The default value is 100 and the maximum value is 2000.</param>
            <param name="skip">Optional. The number of changes to ignore.  For example, to retrieve changes 101-150, set top 50 and skip to 100.</param>
            <param name="compareTo">ID of the pull request iteration to compare against.  The default value is zero which indicates the comparison is made against the common commit between the source and target branches</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the changes made in a pull request between two iterations.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration. <br /> Iteration IDs are zero-based with zero indicating the common commit between the source and target branches. Iteration one is the head of the source branch at the time the pull request is created and subsequent iterations are created when there are pushes to the source branch.</param>
            <param name="top">Optional. The number of changes to retrieve.  The default value is 100 and the maximum value is 2000.</param>
            <param name="skip">Optional. The number of changes to ignore.  For example, to retrieve changes 101-150, set top 50 and skip to 100.</param>
            <param name="compareTo">ID of the pull request iteration to compare against.  The default value is zero which indicates the comparison is made against the common commit between the source and target branches</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the changes made in a pull request between two iterations.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration. <br /> Iteration IDs are zero-based with zero indicating the common commit between the source and target branches. Iteration one is the head of the source branch at the time the pull request is created and subsequent iterations are created when there are pushes to the source branch.</param>
            <param name="top">Optional. The number of changes to retrieve.  The default value is 100 and the maximum value is 2000.</param>
            <param name="skip">Optional. The number of changes to ignore.  For example, to retrieve changes 101-150, set top 50 and skip to 100.</param>
            <param name="compareTo">ID of the pull request iteration to compare against.  The default value is zero which indicates the comparison is made against the common commit between the source and target branches</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationChangesAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the changes made in a pull request between two iterations.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration. <br /> Iteration IDs are zero-based with zero indicating the common commit between the source and target branches. Iteration one is the head of the source branch at the time the pull request is created and subsequent iterations are created when there are pushes to the source branch.</param>
            <param name="top">Optional. The number of changes to retrieve.  The default value is 100 and the maximum value is 2000.</param>
            <param name="skip">Optional. The number of changes to ignore.  For example, to retrieve changes 101-150, set top 50 and skip to 100.</param>
            <param name="compareTo">ID of the pull request iteration to compare against.  The default value is zero which indicates the comparison is made against the common commit between the source and target branches</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the specified iteration for a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration to return.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the specified iteration for a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration to return.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the specified iteration for a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration to return.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the specified iteration for a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration to return.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the specified iteration for a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration to return.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the specified iteration for a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration to return.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.String,System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the list of iterations for the specified pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="includeCommits">If true, include the commits associated with each iteration in the response.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the list of iterations for the specified pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="includeCommits">If true, include the commits associated with each iteration in the response.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the list of iterations for the specified pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="includeCommits">If true, include the commits associated with each iteration in the response.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the list of iterations for the specified pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="includeCommits">If true, include the commits associated with each iteration in the response.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.String,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the list of iterations for the specified pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="includeCommits">If true, include the commits associated with each iteration in the response.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationsAsync(System.Guid,System.Int32,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get the list of iterations for the specified pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="includeCommits">If true, include the commits associated with each iteration in the response.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestIterationStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestIterationStatusAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request iteration status.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestIterationStatusAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request iteration status.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestIterationStatusAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request iteration status.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestIterationStatusAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request iteration status.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestIterationStatusAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request iteration status.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestIterationStatusAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request iteration status.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestIterationStatusesAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request iteration.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestIterationStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request iteration statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestIterationStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request iteration statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestIterationStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request iteration statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestIterationStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request iteration statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestIterationStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request iteration statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestIterationStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request iteration statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the pull request iteration.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestLabelAsync(Microsoft.TeamFoundation.Core.WebApi.WebApiCreateTagRequestData,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a label for a specified pull request. The only required field is the name of the new label.
            </summary>
            <param name="label">Label to assign to the pull request.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestLabelAsync(Microsoft.TeamFoundation.Core.WebApi.WebApiCreateTagRequestData,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a label for a specified pull request. The only required field is the name of the new label.
            </summary>
            <param name="label">Label to assign to the pull request.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestLabelAsync(Microsoft.TeamFoundation.Core.WebApi.WebApiCreateTagRequestData,System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a label for a specified pull request. The only required field is the name of the new label.
            </summary>
            <param name="label">Label to assign to the pull request.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestLabelAsync(Microsoft.TeamFoundation.Core.WebApi.WebApiCreateTagRequestData,System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a label for a specified pull request. The only required field is the name of the new label.
            </summary>
            <param name="label">Label to assign to the pull request.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestLabelAsync(Microsoft.TeamFoundation.Core.WebApi.WebApiCreateTagRequestData,System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a label for a specified pull request. The only required field is the name of the new label.
            </summary>
            <param name="label">Label to assign to the pull request.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestLabelAsync(Microsoft.TeamFoundation.Core.WebApi.WebApiCreateTagRequestData,System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a label for a specified pull request. The only required field is the name of the new label.
            </summary>
            <param name="label">Label to assign to the pull request.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestLabelsAsync(System.String,System.String,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Removes a label from the set of those assigned to the pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestLabelsAsync(System.String,System.Guid,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Removes a label from the set of those assigned to the pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestLabelsAsync(System.Guid,System.String,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Removes a label from the set of those assigned to the pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestLabelsAsync(System.Guid,System.Guid,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Removes a label from the set of those assigned to the pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestLabelsAsync(System.String,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Removes a label from the set of those assigned to the pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestLabelsAsync(System.Guid,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Removes a label from the set of those assigned to the pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelAsync(System.String,System.String,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves a single label that has been assigned to a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelAsync(System.String,System.Guid,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves a single label that has been assigned to a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelAsync(System.Guid,System.String,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves a single label that has been assigned to a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelAsync(System.Guid,System.Guid,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves a single label that has been assigned to a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelAsync(System.String,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves a single label that has been assigned to a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelAsync(System.Guid,System.Int32,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieves a single label that has been assigned to a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="labelIdOrName">The name or ID of the label requested.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelsAsync(System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the labels assigned to a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelsAsync(System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the labels assigned to a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelsAsync(System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the labels assigned to a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelsAsync(System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the labels assigned to a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelsAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the labels assigned to a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestLabelsAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the labels assigned to a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="projectId">Project ID or project name.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestPropertiesAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get external properties of the pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestPropertiesAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get external properties of the pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestPropertiesAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get external properties of the pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestPropertiesAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get external properties of the pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestPropertiesAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get external properties of the pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestPropertiesAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get external properties of the pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create or update pull request external properties. The patch operation can be `add`, `replace` or `remove`. For `add` operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For `replace` operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For `remove` operation, the path cannot be empty. If the path does not exist, no action will be performed.
            </summary>
            <param name="patchDocument">Properties to add, replace or remove in JSON Patch format.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create or update pull request external properties. The patch operation can be `add`, `replace` or `remove`. For `add` operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For `replace` operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For `remove` operation, the path cannot be empty. If the path does not exist, no action will be performed.
            </summary>
            <param name="patchDocument">Properties to add, replace or remove in JSON Patch format.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create or update pull request external properties. The patch operation can be `add`, `replace` or `remove`. For `add` operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For `replace` operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For `remove` operation, the path cannot be empty. If the path does not exist, no action will be performed.
            </summary>
            <param name="patchDocument">Properties to add, replace or remove in JSON Patch format.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create or update pull request external properties. The patch operation can be `add`, `replace` or `remove`. For `add` operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For `replace` operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For `remove` operation, the path cannot be empty. If the path does not exist, no action will be performed.
            </summary>
            <param name="patchDocument">Properties to add, replace or remove in JSON Patch format.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create or update pull request external properties. The patch operation can be `add`, `replace` or `remove`. For `add` operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For `replace` operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For `remove` operation, the path cannot be empty. If the path does not exist, no action will be performed.
            </summary>
            <param name="patchDocument">Properties to add, replace or remove in JSON Patch format.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestPropertiesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create or update pull request external properties. The patch operation can be `add`, `replace` or `remove`. For `add` operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For `replace` operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For `remove` operation, the path cannot be empty. If the path does not exist, no action will be performed.
            </summary>
            <param name="patchDocument">Properties to add, replace or remove in JSON Patch format.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            This API is used to find what pull requests are related to a given commit.  It can be used to either find the pull request that created a particular merge commit or it can be used to find all pull requests that have ever merged a particular commit.  The input is a list of queries which each contain a list of commits. For each commit that you search against, you will get back a dictionary of commit -> pull requests.
            </summary>
            <param name="queries">The list of queries to perform.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            This API is used to find what pull requests are related to a given commit.  It can be used to either find the pull request that created a particular merge commit or it can be used to find all pull requests that have ever merged a particular commit.  The input is a list of queries which each contain a list of commits. For each commit that you search against, you will get back a dictionary of commit -> pull requests.
            </summary>
            <param name="queries">The list of queries to perform.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            This API is used to find what pull requests are related to a given commit.  It can be used to either find the pull request that created a particular merge commit or it can be used to find all pull requests that have ever merged a particular commit.  The input is a list of queries which each contain a list of commits. For each commit that you search against, you will get back a dictionary of commit -> pull requests.
            </summary>
            <param name="queries">The list of queries to perform.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            This API is used to find what pull requests are related to a given commit.  It can be used to either find the pull request that created a particular merge commit or it can be used to find all pull requests that have ever merged a particular commit.  The input is a list of queries which each contain a list of commits. For each commit that you search against, you will get back a dictionary of commit -> pull requests.
            </summary>
            <param name="queries">The list of queries to perform.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            This API is used to find what pull requests are related to a given commit.  It can be used to either find the pull request that created a particular merge commit or it can be used to find all pull requests that have ever merged a particular commit.  The input is a list of queries which each contain a list of commits. For each commit that you search against, you will get back a dictionary of commit -> pull requests.
            </summary>
            <param name="queries">The list of queries to perform.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestQueryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            This API is used to find what pull requests are related to a given commit.  It can be used to either find the pull request that created a particular merge commit or it can be used to find all pull requests that have ever merged a particular commit.  The input is a list of queries which each contain a list of commits. For each commit that you search against, you will get back a dictionary of commit -> pull requests.
            </summary>
            <param name="queries">The list of queries to perform.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add a reviewer to a pull request or cast a vote.
            </summary>
            <param name="reviewer">Reviewer's vote.<br />If the reviewer's ID is included here, it must match the reviewerID parameter.<br />Reviewers can set their own vote with this method.  When adding other reviewers, vote must be set to zero.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add a reviewer to a pull request or cast a vote.
            </summary>
            <param name="reviewer">Reviewer's vote.<br />If the reviewer's ID is included here, it must match the reviewerID parameter.<br />Reviewers can set their own vote with this method.  When adding other reviewers, vote must be set to zero.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add a reviewer to a pull request or cast a vote.
            </summary>
            <param name="reviewer">Reviewer's vote.<br />If the reviewer's ID is included here, it must match the reviewerID parameter.<br />Reviewers can set their own vote with this method.  When adding other reviewers, vote must be set to zero.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add a reviewer to a pull request or cast a vote.
            </summary>
            <param name="reviewer">Reviewer's vote.<br />If the reviewer's ID is included here, it must match the reviewerID parameter.<br />Reviewers can set their own vote with this method.  When adding other reviewers, vote must be set to zero.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add a reviewer to a pull request or cast a vote.
            </summary>
            <param name="reviewer">Reviewer's vote.<br />If the reviewer's ID is included here, it must match the reviewerID parameter.<br />Reviewers can set their own vote with this method.  When adding other reviewers, vote must be set to zero.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewerAsync(Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote,System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add a reviewer to a pull request or cast a vote.
            </summary>
            <param name="reviewer">Reviewer's vote.<br />If the reviewer's ID is included here, it must match the reviewerID parameter.<br />Reviewers can set their own vote with this method.  When adding other reviewers, vote must be set to zero.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add reviewers to a pull request.
            </summary>
            <param name="reviewers">Reviewers to add to the pull request.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add reviewers to a pull request.
            </summary>
            <param name="reviewers">Reviewers to add to the pull request.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add reviewers to a pull request.
            </summary>
            <param name="reviewers">Reviewers to add to the pull request.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add reviewers to a pull request.
            </summary>
            <param name="reviewers">Reviewers to add to the pull request.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add reviewers to a pull request.
            </summary>
            <param name="reviewers">Reviewers to add to the pull request.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestReviewersAsync(Microsoft.VisualStudio.Services.WebApi.IdentityRef[],System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Add reviewers to a pull request.
            </summary>
            <param name="reviewers">Reviewers to add to the pull request.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove a reviewer from a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer to remove.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove a reviewer from a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer to remove.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove a reviewer from a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer to remove.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove a reviewer from a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer to remove.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove a reviewer from a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer to remove.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestReviewerAsync(System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Remove a reviewer from a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer to remove.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a particular reviewer on a pull request
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a particular reviewer on a pull request
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a particular reviewer on a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.String,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a particular reviewer on a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a particular reviewer on a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewerAsync(System.Guid,System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a particular reviewer on a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="reviewerId">ID of the reviewer.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the reviewers for a pull request
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the reviewers for a pull request
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the reviewers for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the reviewers for a pull request
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the reviewers for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestReviewersAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve the reviewers for a pull request
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestReviewersAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote},System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Reset the votes of multiple reviewers on a pull request.  NOTE: This endpoint only supports updating votes, but does not support updating required reviewers (use policy) or display names.
            </summary>
            <param name="patchVotes">IDs of the reviewers whose votes will be reset to zero</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestReviewersAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote},System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Reset the votes of multiple reviewers on a pull request.  NOTE: This endpoint only supports updating votes, but does not support updating required reviewers (use policy) or display names.
            </summary>
            <param name="patchVotes">IDs of the reviewers whose votes will be reset to zero</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestReviewersAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote},System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Reset the votes of multiple reviewers on a pull request.  NOTE: This endpoint only supports updating votes, but does not support updating required reviewers (use policy) or display names.
            </summary>
            <param name="patchVotes">IDs of the reviewers whose votes will be reset to zero</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestReviewersAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote},System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Reset the votes of multiple reviewers on a pull request.  NOTE: This endpoint only supports updating votes, but does not support updating required reviewers (use policy) or display names.
            </summary>
            <param name="patchVotes">IDs of the reviewers whose votes will be reset to zero</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestReviewersAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote},System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Reset the votes of multiple reviewers on a pull request.  NOTE: This endpoint only supports updating votes, but does not support updating required reviewers (use policy) or display names.
            </summary>
            <param name="patchVotes">IDs of the reviewers whose votes will be reset to zero</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestReviewersAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote},System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Reset the votes of multiple reviewers on a pull request.  NOTE: This endpoint only supports updating votes, but does not support updating required reviewers (use policy) or display names.
            </summary>
            <param name="patchVotes">IDs of the reviewers whose votes will be reset to zero</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestByIdAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestByIdAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestByIdAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsByProjectAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all pull requests matching a specified criteria.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="searchCriteria">Pull requests will be returned that match this search criteria.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="top">The number of pull requests to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsByProjectAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all pull requests matching a specified criteria.
            </summary>
            <param name="project">Project ID</param>
            <param name="searchCriteria">Pull requests will be returned that match this search criteria.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="top">The number of pull requests to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a pull request.
            </summary>
            <param name="gitPullRequestToCreate">The pull request to create.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="supportsIterations">If true, subsequent pushes to the pull request will be individually reviewable. Set this to false for large pull requests for performance reasons if this functionality is not needed.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a pull request.
            </summary>
            <param name="gitPullRequestToCreate">The pull request to create.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="supportsIterations">If true, subsequent pushes to the pull request will be individually reviewable. Set this to false for large pull requests for performance reasons if this functionality is not needed.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a pull request.
            </summary>
            <param name="gitPullRequestToCreate">The pull request to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="supportsIterations">If true, subsequent pushes to the pull request will be individually reviewable. Set this to false for large pull requests for performance reasons if this functionality is not needed.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a pull request.
            </summary>
            <param name="gitPullRequestToCreate">The pull request to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="supportsIterations">If true, subsequent pushes to the pull request will be individually reviewable. Set this to false for large pull requests for performance reasons if this functionality is not needed.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a pull request.
            </summary>
            <param name="gitPullRequestToCreate">The pull request to create.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="supportsIterations">If true, subsequent pushes to the pull request will be individually reviewable. Set this to false for large pull requests for performance reasons if this functionality is not needed.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a pull request.
            </summary>
            <param name="gitPullRequestToCreate">The pull request to create.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="supportsIterations">If true, subsequent pushes to the pull request will be individually reviewable. Set this to false for large pull requests for performance reasons if this functionality is not needed.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">Not used.</param>
            <param name="top">Not used.</param>
            <param name="includeCommits">If true, the pull request will be returned with the associated commits.</param>
            <param name="includeWorkItemRefs">If true, the pull request will be returned with the associated work item references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">Not used.</param>
            <param name="top">Not used.</param>
            <param name="includeCommits">If true, the pull request will be returned with the associated commits.</param>
            <param name="includeWorkItemRefs">If true, the pull request will be returned with the associated work item references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">Not used.</param>
            <param name="top">Not used.</param>
            <param name="includeCommits">If true, the pull request will be returned with the associated commits.</param>
            <param name="includeWorkItemRefs">If true, the pull request will be returned with the associated work item references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">Not used.</param>
            <param name="top">Not used.</param>
            <param name="includeCommits">If true, the pull request will be returned with the associated commits.</param>
            <param name="includeWorkItemRefs">If true, the pull request will be returned with the associated work item references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">Not used.</param>
            <param name="top">Not used.</param>
            <param name="includeCommits">If true, the pull request will be returned with the associated commits.</param>
            <param name="includeWorkItemRefs">If true, the pull request will be returned with the associated work item references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">The ID of the pull request to retrieve.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">Not used.</param>
            <param name="top">Not used.</param>
            <param name="includeCommits">If true, the pull request will be returned with the associated commits.</param>
            <param name="includeWorkItemRefs">If true, the pull request will be returned with the associated work item references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all pull requests matching a specified criteria.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="searchCriteria">Pull requests will be returned that match this search criteria.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="top">The number of pull requests to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all pull requests matching a specified criteria.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="searchCriteria">Pull requests will be returned that match this search criteria.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="top">The number of pull requests to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all pull requests matching a specified criteria.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="searchCriteria">Pull requests will be returned that match this search criteria.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="top">The number of pull requests to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all pull requests matching a specified criteria.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="searchCriteria">Pull requests will be returned that match this search criteria.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="top">The number of pull requests to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all pull requests matching a specified criteria.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="searchCriteria">Pull requests will be returned that match this search criteria.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="top">The number of pull requests to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all pull requests matching a specified criteria.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="searchCriteria">Pull requests will be returned that match this search criteria.</param>
            <param name="maxCommentLength">Not used.</param>
            <param name="skip">The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="top">The number of pull requests to retrieve.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a pull request
            </summary>
            <param name="gitPullRequestToUpdate">The pull request content that should be updated.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a pull request
            </summary>
            <param name="gitPullRequestToUpdate">The pull request content that should be updated.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a pull request
            </summary>
            <param name="gitPullRequestToUpdate">The pull request content that should be updated.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a pull request
            </summary>
            <param name="gitPullRequestToUpdate">The pull request content that should be updated.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a pull request
            </summary>
            <param name="gitPullRequestToUpdate">The pull request content that should be updated.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a pull request
            </summary>
            <param name="gitPullRequestToUpdate">The pull request content that should be updated.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Sends an e-mail notification about a specific pull request to a set of recipients
            </summary>
            <param name="userMessage"></param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Sends an e-mail notification about a specific pull request to a set of recipients
            </summary>
            <param name="userMessage"></param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Sends an e-mail notification about a specific pull request to a set of recipients
            </summary>
            <param name="userMessage"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Sends an e-mail notification about a specific pull request to a set of recipients
            </summary>
            <param name="userMessage"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Sends an e-mail notification about a specific pull request to a set of recipients
            </summary>
            <param name="userMessage"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.SharePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Sends an e-mail notification about a specific pull request to a set of recipients
            </summary>
            <param name="userMessage"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePullRequestStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a pull request status.
            </summary>
            <param name="status">Pull request status to create.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestStatusAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request status.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestStatusAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request status.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestStatusAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request status.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestStatusAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request status.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestStatusAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request status.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeletePullRequestStatusAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Delete pull request status.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the specific pull request status by ID. The status ID is unique within the pull request across all iterations.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="statusId">ID of the pull request status.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestStatusesAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get all the statuses associated with a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdatePullRequestStatusesAsync(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Update pull request statuses collection. The only supported operation type is `remove`.
            </summary>
            <param name="patchDocument">Operations to apply to the pull request statuses in JSON Patch format.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request’s target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a comment on a specific thread in a pull request (up to 500 comments can be created per thread).
            </summary>
            <param name="comment">The comment to create. Comments can be up to 150,000 characters.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a comment on a specific thread in a pull request (up to 500 comments can be created per thread).
            </summary>
            <param name="comment">The comment to create. Comments can be up to 150,000 characters.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a comment on a specific thread in a pull request (up to 500 comments can be created per thread).
            </summary>
            <param name="comment">The comment to create. Comments can be up to 150,000 characters.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a comment on a specific thread in a pull request (up to 500 comments can be created per thread).
            </summary>
            <param name="comment">The comment to create. Comments can be up to 150,000 characters.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a comment on a specific thread in a pull request (up to 500 comments can be created per thread).
            </summary>
            <param name="comment">The comment to create. Comments can be up to 150,000 characters.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a comment on a specific thread in a pull request (up to 500 comments can be created per thread).
            </summary>
            <param name="comment">The comment to create. Comments can be up to 150,000 characters.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a comment associated with a specific thread in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a comment associated with a specific thread in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a comment associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a comment associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a comment associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteCommentAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a comment associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a comment associated with a specific thread in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a comment associated with a specific thread in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a comment associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a comment associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a comment associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a comment associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all comments associated with a specific thread in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all comments associated with a specific thread in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all comments associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all comments associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all comments associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetCommentsAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all comments associated with a specific thread in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a comment associated with a specific thread in a pull request.
            </summary>
            <param name="comment">The comment content that should be updated. Comments can be up to 150,000 characters.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a comment associated with a specific thread in a pull request.
            </summary>
            <param name="comment">The comment content that should be updated. Comments can be up to 150,000 characters.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a comment associated with a specific thread in a pull request.
            </summary>
            <param name="comment">The comment content that should be updated. Comments can be up to 150,000 characters.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.String,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a comment associated with a specific thread in a pull request.
            </summary>
            <param name="comment">The comment content that should be updated. Comments can be up to 150,000 characters.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a comment associated with a specific thread in a pull request.
            </summary>
            <param name="comment">The comment content that should be updated. Comments can be up to 150,000 characters.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateCommentAsync(Microsoft.TeamFoundation.SourceControl.WebApi.Comment,System.Guid,System.Guid,System.Int32,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a comment associated with a specific thread in a pull request.
            </summary>
            <param name="comment">The comment content that should be updated. Comments can be up to 150,000 characters.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread that the desired comment is in.</param>
            <param name="commentId">ID of the comment to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a thread in a pull request.
            </summary>
            <param name="commentThread">The thread to create. Thread must contain at least one comment.</param>
            <param name="repositoryId">Repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a thread in a pull request.
            </summary>
            <param name="commentThread">The thread to create. Thread must contain at least one comment.</param>
            <param name="repositoryId">Repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a thread in a pull request.
            </summary>
            <param name="commentThread">The thread to create. Thread must contain at least one comment.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a thread in a pull request.
            </summary>
            <param name="commentThread">The thread to create. Thread must contain at least one comment.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a thread in a pull request.
            </summary>
            <param name="commentThread">The thread to create. Thread must contain at least one comment.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">Repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a thread in a pull request.
            </summary>
            <param name="commentThread">The thread to create. Thread must contain at least one comment.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">Repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a thread in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="iteration">If specified, thread position will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread position will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.String,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a thread in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="iteration">If specified, thread position will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread position will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.Guid,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a thread in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="iteration">If specified, thread position will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread position will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a thread in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="iteration">If specified, thread position will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread position will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a thread in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="iteration">If specified, thread position will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread position will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestThreadAsync(System.Guid,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a thread in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread.</param>
            <param name="iteration">If specified, thread position will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread position will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all threads in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iteration">If specified, thread positions will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread positions will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all threads in a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iteration">If specified, thread positions will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread positions will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all threads in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iteration">If specified, thread positions will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread positions will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all threads in a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iteration">If specified, thread positions will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread positions will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all threads in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iteration">If specified, thread positions will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread positions will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetThreadsAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve all threads in a pull request.
            </summary>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iteration">If specified, thread positions will be tracked using this iteration as the right side of the diff.</param>
            <param name="baseIteration">If specified, thread positions will be tracked using this iteration as the left side of the diff.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a thread in a pull request.
            </summary>
            <param name="commentThread">The thread content that should be updated.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a thread in a pull request.
            </summary>
            <param name="commentThread">The thread content that should be updated.</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a thread in a pull request.
            </summary>
            <param name="commentThread">The thread content that should be updated.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a thread in a pull request.
            </summary>
            <param name="commentThread">The thread content that should be updated.</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a thread in a pull request.
            </summary>
            <param name="commentThread">The thread content that should be updated.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateThreadAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread,System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Update a thread in a pull request.
            </summary>
            <param name="commentThread">The thread content that should be updated.</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The repository ID of the pull request's target branch.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="threadId">ID of the thread to update.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemRefsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemRefsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemRefsAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemRefsAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemRefsAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPullRequestWorkItemRefsAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreatePushAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPush,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Push changes to the repository.
            </summary>
            <param name="push"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="pushId">ID of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates">If true, include the list of refs that were updated by the push.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves a particular push.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="pushId">ID of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates">If true, include the list of refs that were updated by the push.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="pushId">ID of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates">If true, include the list of refs that were updated by the push.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves a particular push.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="pushId">ID of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates">If true, include the list of refs that were updated by the push.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves a particular push.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="pushId">ID of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates">If true, include the list of refs that were updated by the push.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves a particular push.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="pushId">ID of the push.</param>
            <param name="includeCommits">The number of commits to include in the result.</param>
            <param name="includeRefUpdates">If true, include the list of refs that were updated by the push.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of pushes to skip.</param>
            <param name="top">Number of pushes to return.</param>
            <param name="searchCriteria">Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of pushes to skip.</param>
            <param name="top">Number of pushes to return.</param>
            <param name="searchCriteria">Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of pushes to skip.</param>
            <param name="top">Number of pushes to return.</param>
            <param name="searchCriteria">Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of pushes to skip.</param>
            <param name="top">Number of pushes to return.</param>
            <param name="searchCriteria">Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of pushes to skip.</param>
            <param name="top">Number of pushes to return.</param>
            <param name="searchCriteria">Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetPushesAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves pushes associated with the specified repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="skip">Number of pushes to skip.</param>
            <param name="top">Number of pushes to return.</param>
            <param name="searchCriteria">Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryFromRecycleBinAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Destroy (hard delete) a soft-deleted Git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryFromRecycleBinAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Destroy (hard delete) a soft-deleted Git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRecycleBinRepositoriesAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve soft-deleted git repositories from the recycle bin.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRecycleBinRepositoriesAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve soft-deleted git repositories from the recycle bin.
            </summary>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.RestoreRepositoryFromRecycleBinAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRecycleBinRepositoryDetails,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Recover a soft-deleted Git repository. Recently deleted repositories go into a soft-delete state for a period of time before they are hard deleted and become unrecoverable.
            </summary>
            <param name="repositoryDetails"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.RestoreRepositoryFromRecycleBinAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRecycleBinRepositoryDetails,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Recover a soft-deleted Git repository. Recently deleted repositories go into a soft-delete state for a period of time before they are hard deleted and become unrecoverable.
            </summary>
            <param name="repositoryDetails"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs (starts with).</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="includeStatuses">[optional] Includes up to the first 1000 commit statuses for each ref. The default value is false.</param>
            <param name="includeMyBranches">[optional] Includes only branches that the user owns, the branches the user favorites, and the default branch. The default value is false. Cannot be combined with the filter parameter.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="peelTags">[optional] Annotated tags will populate the PeeledObjectId property. default is false.</param>
            <param name="filterContains">[optional] A filter to apply to the refs (contains).</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs (starts with).</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="includeStatuses">[optional] Includes up to the first 1000 commit statuses for each ref. The default value is false.</param>
            <param name="includeMyBranches">[optional] Includes only branches that the user owns, the branches the user favorites, and the default branch. The default value is false. Cannot be combined with the filter parameter.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="peelTags">[optional] Annotated tags will populate the PeeledObjectId property. default is false.</param>
            <param name="filterContains">[optional] A filter to apply to the refs (contains).</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs (starts with).</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="includeStatuses">[optional] Includes up to the first 1000 commit statuses for each ref. The default value is false.</param>
            <param name="includeMyBranches">[optional] Includes only branches that the user owns, the branches the user favorites, and the default branch. The default value is false. Cannot be combined with the filter parameter.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="peelTags">[optional] Annotated tags will populate the PeeledObjectId property. default is false.</param>
            <param name="filterContains">[optional] A filter to apply to the refs (contains).</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs (starts with).</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="includeStatuses">[optional] Includes up to the first 1000 commit statuses for each ref. The default value is false.</param>
            <param name="includeMyBranches">[optional] Includes only branches that the user owns, the branches the user favorites, and the default branch. The default value is false. Cannot be combined with the filter parameter.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="peelTags">[optional] Annotated tags will populate the PeeledObjectId property. default is false.</param>
            <param name="filterContains">[optional] A filter to apply to the refs (contains).</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs (starts with).</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="includeStatuses">[optional] Includes up to the first 1000 commit statuses for each ref. The default value is false.</param>
            <param name="includeMyBranches">[optional] Includes only branches that the user owns, the branches the user favorites, and the default branch. The default value is false. Cannot be combined with the filter parameter.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="peelTags">[optional] Annotated tags will populate the PeeledObjectId property. default is false.</param>
            <param name="filterContains">[optional] A filter to apply to the refs (contains).</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries the provided repository for its refs and returns them.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs (starts with).</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="includeStatuses">[optional] Includes up to the first 1000 commit statuses for each ref. The default value is false.</param>
            <param name="includeMyBranches">[optional] Includes only branches that the user owns, the branches the user favorites, and the default branch. The default value is false. Cannot be combined with the filter parameter.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="peelTags">[optional] Annotated tags will populate the PeeledObjectId property. default is false.</param>
            <param name="filterContains">[optional] A filter to apply to the refs (contains).</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Lock or Unlock a branch.
            </summary>
            <param name="newRefInfo">The ref update action (lock/unlock) to perform</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">The name of the branch to lock/unlock</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.String,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Lock or Unlock a branch.
            </summary>
            <param name="newRefInfo">The ref update action (lock/unlock) to perform</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">The name of the branch to lock/unlock</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Lock or Unlock a branch.
            </summary>
            <param name="newRefInfo">The ref update action (lock/unlock) to perform</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">The name of the branch to lock/unlock</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.Guid,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Lock or Unlock a branch.
            </summary>
            <param name="newRefInfo">The ref update action (lock/unlock) to perform</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">The name of the branch to lock/unlock</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Lock or Unlock a branch.
            </summary>
            <param name="newRefInfo">The ref update action (lock/unlock) to perform</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">The name of the branch to lock/unlock</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Lock or Unlock a branch.
            </summary>
            <param name="newRefInfo">The ref update action (lock/unlock) to perform</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">The name of the branch to lock/unlock</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creating, updating, or deleting refs(branches).
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creating, updating, or deleting refs(branches).
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creating, updating, or deleting refs(branches).
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creating, updating, or deleting refs(branches).
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creating, updating, or deleting refs(branches).
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRefsAsync(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdate},System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Creating, updating, or deleting refs(branches).
            </summary>
            <param name="refUpdates">List of ref updates to attempt to perform</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="projectId">ID or name of the team project. Optional if specifying an ID for repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateFavoriteAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefFavorite,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates a ref favorite
            </summary>
            <param name="favorite">The ref favorite to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateFavoriteAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRefFavorite,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Creates a ref favorite
            </summary>
            <param name="favorite">The ref favorite to create.</param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRefFavoriteAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Deletes the refs favorite specified
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="favoriteId">The Id of the ref favorite to delete.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRefFavoriteAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Deletes the refs favorite specified
            </summary>
            <param name="project">Project ID</param>
            <param name="favoriteId">The Id of the ref favorite to delete.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefFavoriteAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the refs favorite for a favorite Id.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="favoriteId">The Id of the requested ref favorite.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefFavoriteAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the refs favorite for a favorite Id.
            </summary>
            <param name="project">Project ID</param>
            <param name="favoriteId">The Id of the requested ref favorite.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefFavoritesAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the refs favorites for a repo and an identity.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The id of the repository.</param>
            <param name="identityId">The id of the identity whose favorites are to be retrieved. If null, the requesting identity is used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRefFavoritesAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the refs favorites for a repo and an identity.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The id of the repository.</param>
            <param name="identityId">The id of the identity whose favorites are to be retrieved. If null, the requesting identity is used.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryCreateOptions,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git repository in a team project.
            </summary>
            <param name="gitRepositoryToCreate">Specify the repo name, team project and/or parent repository. Team project information can be ommitted from gitRepositoryToCreate if the request is project-scoped (i.e., includes project Id).</param>
            <param name="sourceRef">[optional] Specify the source refs to use while creating a fork repo</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryCreateOptions,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git repository in a team project.
            </summary>
            <param name="gitRepositoryToCreate">Specify the repo name, team project and/or parent repository. Team project information can be ommitted from gitRepositoryToCreate if the request is project-scoped (i.e., includes project Id).</param>
            <param name="project">Project ID or project name</param>
            <param name="sourceRef">[optional] Specify the source refs to use while creating a fork repo</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryCreateOptions,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a git repository in a team project.
            </summary>
            <param name="gitRepositoryToCreate">Specify the repo name, team project and/or parent repository. Team project information can be ommitted from gitRepositoryToCreate if the request is project-scoped (i.e., includes project Id).</param>
            <param name="project">Project ID</param>
            <param name="sourceRef">[optional] Specify the source refs to use while creating a fork repo</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a git repository
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a git repository
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.DeleteRepositoryAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Delete a git repository
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeLinks">[optional] True to include reference links. The default value is false.</param>
            <param name="includeAllUrls">[optional] True to include all remote URLs. The default value is false.</param>
            <param name="includeHidden">[optional] True to include hidden repositories. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeLinks">[optional] True to include reference links. The default value is false.</param>
            <param name="includeAllUrls">[optional] True to include all remote URLs. The default value is false.</param>
            <param name="includeHidden">[optional] True to include hidden repositories. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoriesAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve git repositories.
            </summary>
            <param name="includeLinks">[optional] True to include reference links. The default value is false.</param>
            <param name="includeAllUrls">[optional] True to include all remote URLs. The default value is false.</param>
            <param name="includeHidden">[optional] True to include hidden repositories. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryWithParentAsync(System.String,System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">True to include parent repository. Only available in authenticated calls.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryWithParentAsync(System.String,System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">True to include parent repository. Only available in authenticated calls.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryWithParentAsync(System.Guid,System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">True to include parent repository. Only available in authenticated calls.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryWithParentAsync(System.Guid,System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">True to include parent repository. Only available in authenticated calls.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryWithParentAsync(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">True to include parent repository. Only available in authenticated calls.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRepositoryWithParentAsync(System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a git repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">True to include parent repository. Only available in authenticated calls.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the Git repository with either a new repo name or a new default branch.
            </summary>
            <param name="newRepositoryInfo">Specify a new repo name or a new default branch of the repository</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the Git repository with either a new repo name or a new default branch.
            </summary>
            <param name="newRepositoryInfo">Specify a new repo name or a new default branch of the repository</param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.UpdateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the Git repository with either a new repo name or a new default branch.
            </summary>
            <param name="newRepositoryInfo">Specify a new repo name or a new default branch of the repository</param>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRevertAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Starts the operation to create a new branch which reverts changes introduced by either a specific commit or commits that are associated to a pull request.
            </summary>
            <param name="revertToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRevertAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Starts the operation to create a new branch which reverts changes introduced by either a specific commit or commits that are associated to a pull request.
            </summary>
            <param name="revertToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRevertAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Starts the operation to create a new branch which reverts changes introduced by either a specific commit or commits that are associated to a pull request.
            </summary>
            <param name="revertToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateRevertAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Starts the operation to create a new branch which reverts changes introduced by either a specific commit or commits that are associated to a pull request.
            </summary>
            <param name="revertToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertAsync(System.String,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a revert operation by revert Id.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="revertId">ID of the revert operation.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertAsync(System.String,System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a revert operation by revert Id.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="revertId">ID of the revert operation.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertAsync(System.Guid,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a revert operation by revert Id.
            </summary>
            <param name="project">Project ID</param>
            <param name="revertId">ID of the revert operation.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertAsync(System.Guid,System.Int32,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a revert operation by revert Id.
            </summary>
            <param name="project">Project ID</param>
            <param name="revertId">ID of the revert operation.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertForRefNameAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a revert operation for a specific branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="refName">The GitAsyncRefOperationParameters generatedRefName used for the revert operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertForRefNameAsync(System.String,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a revert operation for a specific branch.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="refName">The GitAsyncRefOperationParameters generatedRefName used for the revert operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertForRefNameAsync(System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a revert operation for a specific branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="refName">The GitAsyncRefOperationParameters generatedRefName used for the revert operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetRevertForRefNameAsync(System.Guid,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information about a revert operation for a specific branch.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="refName">The GitAsyncRefOperationParameters generatedRefName used for the revert operation.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create Git commit status.
            </summary>
            <param name="gitCommitStatusToCreate">Git commit status object to create.</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create Git commit status.
            </summary>
            <param name="gitCommitStatusToCreate">Git commit status object to create.</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create Git commit status.
            </summary>
            <param name="gitCommitStatusToCreate">Git commit status object to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.String,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create Git commit status.
            </summary>
            <param name="gitCommitStatusToCreate">Git commit status object to create.</param>
            <param name="project">Project ID or project name</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.Guid,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create Git commit status.
            </summary>
            <param name="gitCommitStatusToCreate">Git commit status object to create.</param>
            <param name="project">Project ID</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.CreateCommitStatusAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus,System.Guid,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create Git commit status.
            </summary>
            <param name="gitCommitStatusToCreate">Git commit status object to create.</param>
            <param name="project">Project ID</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get statuses associated with the Git commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="top">Optional. The number of statuses to retrieve. Default is 1000.</param>
            <param name="skip">Optional. The number of statuses to ignore. Default is 0. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="latestOnly">The flag indicates whether to get only latest statuses grouped by `Context.Name` and `Context.Genre`.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.String,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get statuses associated with the Git commit.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="top">Optional. The number of statuses to retrieve. Default is 1000.</param>
            <param name="skip">Optional. The number of statuses to ignore. Default is 0. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="latestOnly">The flag indicates whether to get only latest statuses grouped by `Context.Name` and `Context.Genre`.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get statuses associated with the Git commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="top">Optional. The number of statuses to retrieve. Default is 1000.</param>
            <param name="skip">Optional. The number of statuses to ignore. Default is 0. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="latestOnly">The flag indicates whether to get only latest statuses grouped by `Context.Name` and `Context.Genre`.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.Guid,System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get statuses associated with the Git commit.
            </summary>
            <param name="project">Project ID</param>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="top">Optional. The number of statuses to retrieve. Default is 1000.</param>
            <param name="skip">Optional. The number of statuses to ignore. Default is 0. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="latestOnly">The flag indicates whether to get only latest statuses grouped by `Context.Name` and `Context.Genre`.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get statuses associated with the Git commit.
            </summary>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="top">Optional. The number of statuses to retrieve. Default is 1000.</param>
            <param name="skip">Optional. The number of statuses to ignore. Default is 0. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="latestOnly">The flag indicates whether to get only latest statuses grouped by `Context.Name` and `Context.Genre`.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetStatusesAsync(System.String,System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get statuses associated with the Git commit.
            </summary>
            <param name="commitId">ID of the Git commit.</param>
            <param name="repositoryId">ID of the repository.</param>
            <param name="top">Optional. The number of statuses to retrieve. Default is 1000.</param>
            <param name="skip">Optional. The number of statuses to ignore. Default is 0. For example, to retrieve results 101-150, set top to 50 and skip to 100.</param>
            <param name="latestOnly">The flag indicates whether to get only latest statuses grouped by `Context.Name` and `Context.Genre`.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request suggestion for a particular repository or team project.
            </summary>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request suggestion for a particular repository or team project.
            </summary>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request suggestion for a particular repository or team project.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request suggestion for a particular repository or team project.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request suggestion for a particular repository or team project.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetSuggestionsAsync(System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a pull request suggestion for a particular repository or team project.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID of the git repository.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeDiffsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the differences between two trees. Commits will be resolved to the trees they point to.  Renames and object type changes are returned as delete on the old object and add on the new object.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseId">Sha1Id of base tree or commit</param>
            <param name="targetId">Sha1Id of target tree or commit</param>
            <param name="top">Maximum number of changes to return</param>
            <param name="continuationToken"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeDiffsAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the differences between two trees. Commits will be resolved to the trees they point to.  Renames and object type changes are returned as delete on the old object and add on the new object.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseId">Sha1Id of base tree or commit</param>
            <param name="targetId">Sha1Id of target tree or commit</param>
            <param name="top">Maximum number of changes to return</param>
            <param name="continuationToken"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeDiffsAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the differences between two trees. Commits will be resolved to the trees they point to.  Renames and object type changes are returned as delete on the old object and add on the new object.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseId">Sha1Id of base tree or commit</param>
            <param name="targetId">Sha1Id of target tree or commit</param>
            <param name="top">Maximum number of changes to return</param>
            <param name="continuationToken"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeDiffsAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Gets the differences between two trees. Commits will be resolved to the trees they point to.  Renames and object type changes are returned as delete on the old object and add on the new object.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Friendly name or guid of repository</param>
            <param name="baseId">Sha1Id of base tree or commit</param>
            <param name="targetId">Sha1Id of target tree or commit</param>
            <param name="top">Maximum number of changes to return</param>
            <param name="continuationToken"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClientBase.GetTreeZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.
            </summary>
            <param name="repositoryId">Repository Id.</param>
            <param name="sha1">SHA1 hash of the tree object.</param>
            <param name="projectId">Project Id.</param>
            <param name="recursive">Search recursively. Include trees underneath this tree. Default is false.</param>
            <param name="fileName">Name to use if a .zip file is returned. Default is the object ID.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single branch hierarchy at the given path with parents or children as specified.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
            <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
            <param name="includeChildren">Return child branches, if there are any. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single branch hierarchy at the given path with parents or children as specified.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
            <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
            <param name="includeChildren">Return child branches, if there are any. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single branch hierarchy at the given path with parents or children as specified.
            </summary>
            <param name="path">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
            <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
            <param name="includeChildren">Return child branches, if there are any. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of branch roots -- first-level children, branches with no parents.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
            <param name="includeChildren">Return the child branches for each root branch. Default: False</param>
            <param name="includeDeleted">Return deleted branches. Default: False</param>
            <param name="includeLinks">Return links. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of branch roots -- first-level children, branches with no parents.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
            <param name="includeChildren">Return the child branches for each root branch. Default: False</param>
            <param name="includeDeleted">Return deleted branches. Default: False</param>
            <param name="includeLinks">Return links. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchesAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of branch roots -- first-level children, branches with no parents.
            </summary>
            <param name="includeParent">Return the parent branch, if there is one. Default: False</param>
            <param name="includeChildren">Return the child branches for each root branch. Default: False</param>
            <param name="includeDeleted">Return deleted branches. Default: False</param>
            <param name="includeLinks">Return links. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get branch hierarchies below the specified scopePath
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="scopePath">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
            <param name="includeDeleted">Return deleted branches. Default: False</param>
            <param name="includeLinks">Return links. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get branch hierarchies below the specified scopePath
            </summary>
            <param name="project">Project ID</param>
            <param name="scopePath">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
            <param name="includeDeleted">Return deleted branches. Default: False</param>
            <param name="includeLinks">Return links. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBranchRefsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get branch hierarchies below the specified scopePath
            </summary>
            <param name="scopePath">Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.</param>
            <param name="includeDeleted">Return deleted branches. Default: False</param>
            <param name="includeLinks">Return links. Default: False</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetChangesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve Tfvc changes for a given changeset.
            </summary>
            <param name="id">ID of the changeset. Default: null</param>
            <param name="skip">Number of results to skip. Default: null</param>
            <param name="top">The maximum number of results to return. Default: null</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a new changeset.
            </summary>
            <param name="changeset"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a new changeset.
            </summary>
            <param name="changeset"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.CreateChangesetAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create a new changeset.
            </summary>
            <param name="changeset"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Tfvc Changeset
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="id">Changeset Id to retrieve.</param>
            <param name="maxChangeCount">Number of changes to return (maximum 100 changes) Default: 0</param>
            <param name="includeDetails">Include policy details and check-in notes in the response. Default: false</param>
            <param name="includeWorkItems">Include workitems. Default: false</param>
            <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
            <param name="includeSourceRename">Include renames.  Default: false</param>
            <param name="skip">Number of results to skip. Default: null</param>
            <param name="top">The maximum number of results to return. Default: null</param>
            <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
            <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.Guid,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Tfvc Changeset
            </summary>
            <param name="project">Project ID</param>
            <param name="id">Changeset Id to retrieve.</param>
            <param name="maxChangeCount">Number of changes to return (maximum 100 changes) Default: 0</param>
            <param name="includeDetails">Include policy details and check-in notes in the response. Default: false</param>
            <param name="includeWorkItems">Include workitems. Default: false</param>
            <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
            <param name="includeSourceRename">Include renames.  Default: false</param>
            <param name="skip">Number of results to skip. Default: null</param>
            <param name="top">The maximum number of results to return. Default: null</param>
            <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
            <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Tfvc Changeset
            </summary>
            <param name="id">Changeset Id to retrieve.</param>
            <param name="maxChangeCount">Number of changes to return (maximum 100 changes) Default: 0</param>
            <param name="includeDetails">Include policy details and check-in notes in the response. Default: false</param>
            <param name="includeWorkItems">Include workitems. Default: false</param>
            <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
            <param name="includeSourceRename">Include renames.  Default: false</param>
            <param name="skip">Number of results to skip. Default: null</param>
            <param name="top">The maximum number of results to return. Default: null</param>
            <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
            <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve Tfvc Changesets
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
            <param name="skip">Number of results to skip. Default: null</param>
            <param name="top">The maximum number of results to return. Default: null</param>
            <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
            <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve Tfvc Changesets
            </summary>
            <param name="project">Project ID</param>
            <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
            <param name="skip">Number of results to skip. Default: null</param>
            <param name="top">The maximum number of results to return. Default: null</param>
            <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
            <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria,System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieve Tfvc Changesets
            </summary>
            <param name="maxCommentLength">Include details about associated work items in the response. Default: null</param>
            <param name="skip">Number of results to skip. Default: null</param>
            <param name="top">The maximum number of results to return. Default: null</param>
            <param name="orderby">Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.</param>
            <param name="searchCriteria">Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetBatchedChangesetsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns changesets for a given list of changeset Ids.
            </summary>
            <param name="changesetsRequestData">List of changeset IDs.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetChangesetWorkItemsAsync(System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Retrieves the work items associated with a particular changeset.
            </summary>
            <param name="id">ID of the changeset. Default: null</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsBatchZipAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.
            </summary>
            <param name="itemRequestData"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a list of Tfvc items
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="includeLinks">True to include links.</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.Guid,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a list of Tfvc items
            </summary>
            <param name="project">Project ID</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="includeLinks">True to include links.</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemsAsync(System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a list of Tfvc items
            </summary>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="includeLinks">True to include links.</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemTextAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetItemZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelItemsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get items under a label.
            </summary>
            <param name="labelId">Unique identifier of label</param>
            <param name="top">Max number of items to return</param>
            <param name="skip">Number of items to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.String,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single deep label.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.Guid,System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single deep label.
            </summary>
            <param name="project">Project ID</param>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single deep label.
            </summary>
            <param name="labelId">Unique identifier of label</param>
            <param name="requestData">maxItemCount</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of shallow label references.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(System.Guid,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of shallow label references.
            </summary>
            <param name="project">Project ID</param>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetLabelsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a collection of shallow label references.
            </summary>
            <param name="requestData">labelScope, name, owner, and itemLabelFilter</param>
            <param name="top">Max number of labels to return</param>
            <param name="skip">Number of labels to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetChangesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Get changes included in a shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="top">Max number of changes to return</param>
            <param name="skip">Number of changes to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetAsync(System.String,Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get a single deep shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="requestData">includeDetails, includeWorkItems, maxChangeCount, and maxCommentLength</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetsAsync(Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Threading.CancellationToken)">
            <summary>
            Return a collection of shallow shelveset references.
            </summary>
            <param name="requestData">name, owner, and maxCommentLength</param>
            <param name="top">Max number of shelvesets to return</param>
            <param name="skip">Number of shelvesets to skip</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetShelvesetWorkItemsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get work items associated with a shelveset.
            </summary>
            <param name="shelvesetId">Shelveset's unique ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetTfvcStatisticsAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Provides File Count and Uncompressed Bytes for a Collection/Project at a particular scope for TFVC.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="scopePath">'$/' for collection, '$/project' for specific project</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetTfvcStatisticsAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Provides File Count and Uncompressed Bytes for a Collection/Project at a particular scope for TFVC.
            </summary>
            <param name="project">Project ID</param>
            <param name="scopePath">'$/' for collection, '$/project' for specific project</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClientBase.GetTfvcStatisticsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Provides File Count and Uncompressed Bytes for a Collection/Project at a particular scope for TFVC.
            </summary>
            <param name="scopePath">'$/' for collection, '$/project' for specific project</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusState">
            <summary>
            State of the status.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusState.NotSet">
            <summary>
            Status state not set. Default state.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusState.Pending">
            <summary>
            Status pending.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusState.Succeeded">
            <summary>
            Status succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusState.Failed">
            <summary>
            Status failed.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusState.Error">
            <summary>
            Status with an error.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusState.NotApplicable">
            <summary>
            Status is not applicable to the target object.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestStatus">
            <summary>
            Status of a pull request.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestStatus.NotSet">
            <summary>
            Status not set. Default state.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestStatus.Active">
            <summary>
            Pull request is active.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestStatus.Abandoned">
            <summary>
            Pull request is abandoned.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestStatus.Completed">
            <summary>
            Pull request is completed.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestStatus.All">
            <summary>
            Used in pull request search criterias to include all statuses.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConstants.SettingsServiceCompareBranchKey">
            <summary>
            Key used when storing the compare branch in the ISettingsService for a user
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConstants.MaxGitRefNameLength">
            <summary>
            The current maximum ref name length supported by the TFS Git Server
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestAsyncStatus">
            <summary>
            The status of a pull request merge.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestAsyncStatus.NotSet">
            <summary>
            Status is not set. Default state.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestAsyncStatus.Queued">
            <summary>
            Pull request merge is queued.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestAsyncStatus.Conflicts">
            <summary>
            Pull request merge failed due to conflicts.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestAsyncStatus.Succeeded">
            <summary>
            Pull request merge succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestAsyncStatus.RejectedByPolicy">
            <summary>
            Pull request merge rejected by policy.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestAsyncStatus.Failure">
            <summary>
            Pull request merge failed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestMergeFailureType">
            <summary>
            The specific type of a pull request merge failure.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestMergeFailureType.None">
            <summary>
            Type is not set. Default type.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestMergeFailureType.Unknown">
            <summary>
            Pull request merge failure type unknown.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestMergeFailureType.CaseSensitive">
            <summary>
            Pull request merge failed due to case mismatch.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestMergeFailureType.ObjectTooLarge">
            <summary>
            Pull request merge failed due to an object being too large.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncOperationStatus">
            <summary>
            Current status of the asynchronous operation.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncOperationStatus.Queued">
            <summary>
            The operation is waiting in a queue and has not yet started.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncOperationStatus.InProgress">
            <summary>
            The operation is currently in progress.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncOperationStatus.Completed">
            <summary>
            The operation has completed.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncOperationStatus.Failed">
            <summary>
            The operation has failed. Check for an error message.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncOperationStatus.Abandoned">
            <summary>
            The operation has been abandoned.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictSourceType">
            <summary>
            Describes the type of source which generated a git conflict
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictSourceType.PullRequest">
            <summary>
            Conflict was generated during a pull request
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictSourceType.AsyncOperation">
            <summary>
            Conflict was generated during an async operation (e.g. cherry-pick)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetBranchRefsAsync(System.Guid,System.Object)">
            <summary>
            Get the refs that are branches for a specific git repository
            </summary>
            <param name="repositoryId">Repository Id</param>
            <param name="userState"></param>
            <returns>Task&lt;List&lt;GitRef&gt;&gt;</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetTagRefsAsync(System.Guid,System.Object)">
            <summary>
            Get the refs that are tags for a specific git repository
            </summary>
            <param name="repositoryId">Repository Id</param>
            <param name="userState"></param>
            <returns>Task&lt;List&lt;GitRef&gt;&gt;</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.RenameRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Object)">
            <summary>
            Rename a repository.  Only the name is observed.  If other properties are passed, the server will ensure they match.
            </summary>
            <param name="repositoryToRename"></param>
            <param name="newName"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetItemsPagedAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API]
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetItemsPagedAsync(System.String,System.Guid,System.String,System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API]
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetItemsPagedAsync(System.Guid,System.String,System.String,System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API]
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetItemsPagedAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Int32},System.String,Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API]
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetPullRequestCommitsPagedAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified pull request.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetPullRequestCommitsPagedAsync(System.Guid,System.String,System.Int32,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified pull request.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetPullRequestCommitsPagedAsync(System.String,System.Guid,System.Int32,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified pull request.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitHttpClient.GetPullRequestCommitsPagedAsync(System.Guid,System.Guid,System.Int32,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified pull request.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase">
            <summary>
            This class contains overloads of methods that were removed from the auto-generated client
            due to adding parameters. We use extra overloads to ensure that whatever binary signature
            a client used before will map to one of these prototypes.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.String,System.Nullable{System.Boolean},System.Object)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Guid,System.Nullable{System.Boolean},System.Object)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeLinks"></param>
            <param name="userState"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="includeLinks"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Nullable{System.Boolean},System.Object)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="includeLinks"></param>
            <param name="userState"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreatePullRequestAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest,System.Guid,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git pull request
            </summary>
            <param name="gitPullRequestToCreate"></param>
            <param name="project">Project ID</param>
            <param name="repositoryId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoryAsync(System.String,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">[optional] True to include parent repository. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoryAsync(System.String,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a git repository.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">[optional] True to include parent repository. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoryAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">[optional] True to include parent repository. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoryAsync(System.Guid,System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a git repository.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">[optional] True to include parent repository. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoryAsync(System.String,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a git repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">[optional] True to include parent repository. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoryAsync(System.Guid,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a git repository.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="includeParent">[optional] True to include parent repository. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="project">Project ID or project name</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.CreateRepositoryAsync(Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Create a git repository
            </summary>
            <param name="gitRepositoryToCreate"></param>
            <param name="project">Project ID</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="includeLinks"></param>
            <param name="includeAllUrls"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Guid,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="project">Project ID</param>
            <param name="includeLinks"></param>
            <param name="includeAllUrls"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRepositoriesAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve git repositories.
            </summary>
            <param name="includeLinks"></param>
            <param name="includeAllUrls"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.String,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.Guid,System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor,System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content, which is always returned as a download.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="path">The item path.</param>
            <param name="scopePath">The path scope.  The default is null.</param>
            <param name="recursionLevel">The recursion level of this request. The default is 'none', no recursion.</param>
            <param name="includeContentMetadata">Set to true to include content metadata.  Default is false.</param>
            <param name="latestProcessedChange">Set to true to include the latest changes.  Default is false.</param>
            <param name="download">Set to true to download the response as a file.  Default is false.</param>
            <param name="versionDescriptor">Version descriptor.  Default is null.</param>
            <param name="includeContent">Set to true to include item content when requesting json.  Default is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestWorkItemsAsync(System.String,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.String,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestWorkItemsAsync(System.Guid,System.Guid,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a list of work items associated with a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRefsAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRefsAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRefsAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRefsAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRefsAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetRefsAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Queries the provided repository for its refs and returns them.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="filter">[optional] A filter to apply to the refs.</param>
            <param name="includeLinks">[optional] Specifies if referenceLinks should be included in the result. default is false.</param>
            <param name="latestStatusesOnly">[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobContentAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobContentAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobContentAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobZipAsync(System.String,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobZipAsync(System.Guid,System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetBlobZipAsync(System.Guid,System.String,System.Nullable{System.Boolean},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get a single blob.
            </summary>
            <param name="repositoryId">The name or ID of the repository.</param>
            <param name="sha1">SHA1 hash of the file. You can get the SHA1 of a file using the "Git/Items/Get Item" endpoint.</param>
            <param name="download">If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip</param>
            <param name="fileName">Provide a fileName to use for a download.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestIterationCommitsAsync(System.String,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitCompatHttpClientBase.GetPullRequestIterationCommitsAsync(System.Guid,System.Guid,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get the commits for the specified iteration of a pull request.
            </summary>
            <param name="project">Project ID</param>
            <param name="repositoryId">ID or name of the repository.</param>
            <param name="pullRequestId">ID of the pull request.</param>
            <param name="iterationId">ID of the iteration from which to get the commits.</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitUtils.StringFromByteArray(System.Byte[])">
            <summary>
            Convert the byte array to a lower case hex string.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitUtils.AppendBytesToStringBuilder(System.Text.StringBuilder,System.ArraySegment{System.Byte})">
            <summary>
            Append <paramref name="bytes"/> to <paramref name="builder"/> as a lower case hex string.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitUtils.SafeUnicodeLENoBOM">
            <summary>
            Gets a <see cref="T:System.Text.UnicodeEncoding"/> (without BOM) that throws when decoding invalid byte sequences or
            encoding unsupported char sequences (Unicode can't encode strings w/ invalid surrogate
            pair sequences).  Use this instead of <see cref="P:System.Text.Encoding.Unicode"/>, which uses a
            fallback character instead of throwing, which leads to silent corruption.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryPermissions">
            <summary>
            Defines the permission bitmasks used in the database for git repositories.
            If modifying, see NOTE at the bottom.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionScope">
            <summary>
            Scopes where <see cref="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryPermissions"/> can apply.
            </summary>
            <remarks>
            This enum currently serves 2 purposes:
            1. Used by VC Admin UI to determine the GitRepositoryPermissions value that applies
            to a specific scope and can be changed using the web UI.
            2. Used through Git Server to specify a scope to pass to SecurityHelper calls to decide whether
            an identity has the required access to a resource. Only Project/Repository/Branch apply.
            FUTURE: We should separate these uses since some scopes are never valid in SecurityHelper
            calls, and both sets will continue changing for different reasons.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionsUtil.GetTokenScope(System.String)">
            <summary>
            Infers the <see cref="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionScope"/> from how many sub-tokens in the provided security token.
            <param name="securityToken"> a Git Repositories Security Token that is already canonicalized by
            <see cref="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitUtils.CalculateSecurable(System.String,System.Guid,System.String)"/> in the form:
            repoV2/f7aa0cd2-5bb1-4fc7-87fc-3ca29a266aad/622eb04c-9538-4e64-bb8e-4287eb20436d/refs/heads/6d0061007300740065007200/</param>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionsUtil.GetProjectIdFromToken(System.String)">
            <summary>
            Get project Guid from a canonicalized token.
            <param name="securityToken"> a Git Repositories Security Token that is already canonicalized by
            <see cref="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitUtils.CalculateSecurable(System.String,System.Guid,System.String)"/> in the form:
            repoV2/f7aa0cd2-5bb1-4fc7-87fc-3ca29a266aad/622eb04c-9538-4e64-bb8e-4287eb20436d/refs/heads/6d0061007300740065007200/</param>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionsUtil.GetRepoIdFromToken(System.String)">
            <summary>
            Get repo Guid from a canonicalized token.
            <param name="securityToken"> a Git Repositories Security Token that is already canonicalized by
            <see cref="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitUtils.CalculateSecurable(System.String,System.Guid,System.String)"/> in the form:
            repoV2/f7aa0cd2-5bb1-4fc7-87fc-3ca29a266aad/622eb04c-9538-4e64-bb8e-4287eb20436d/refs/heads/6d0061007300740065007200/</param>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitPermissionsUtil.GetRefNameFromToken(System.String)">
            <summary>
            Get readble ref name from a canonicalized token.
            e.g.: return "refs/heads/master" from "repoV2/f7aa0cd2-5bb1-4fc7-87fc-3ca29a266aad/622eb04c-9538-4e64-bb8e-4287eb20436d/refs/heads/6d0061007300740065007200"
            <param name="securityToken"> a Git Repositories Security Token that is already canonicalized</param>
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase">
            <summary>
            This class contains overloads of methods that were removed from the auto-generated client
            due to adding parameters. We use extra overloads to ensure that whatever binary signature
            a client used before will map to one of these prototypes.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemContentAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemContentAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemTextAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemTextAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemTextAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemZipAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID or project name</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemZipAsync(System.Guid,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="project">Project ID</param>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcCompatHttpClientBase.GetItemZipAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType},Microsoft.TeamFoundation.SourceControl.WebApi.TfvcVersionDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Get Item Metadata and/or Content for a single item. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.
            </summary>
            <param name="path">Version control path of an individual item to return.</param>
            <param name="fileName">file name of item returned.</param>
            <param name="download">If true, create a downloadable attachment.</param>
            <param name="scopePath">Version control path of a folder to return multiple items.</param>
            <param name="recursionLevel">None (just the item), or OneLevel (contents of a folder).</param>
            <param name="versionDescriptor"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsPagedAsync(System.String,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsPagedAsync(System.Guid,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsPagedAsync(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsByChangesetPagedAsync(System.String,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsByChangesetPagedAsync(System.Guid,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetItemsByChangesetPagedAsync(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get lightweight item metadata information with continuation token support.
            Gets the specified number of items under the scopePath at full recursion.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHttpClient.GetChangesetChangesPagedAsync(System.Int32,System.Int32,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Internal customers only API] 
            Get changeset changes information with continuation token support.
            Gets the specified number of changes for a particular changeset.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlSecuredObject">
            <summary>
            Base class for Web API data contracts that implements ISecuredObject for public projects
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem.Id">
            <summary>
            Id of associated the work item.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.AssociatedWorkItem.Url">
            <summary>
            REST Url of the work item.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment">
            <summary>
            Meta data for a file attached to an artifact.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Id">
            <summary>
            Id of the attachment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.DisplayName">
            <summary>
            The display name of the attachment. Can't be null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Url">
            <summary>
            The url to download the content of the attachment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Description">
            <summary>
            The description of the attachment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Author">
            <summary>
            The person that uploaded this attachment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.CreatedDate">
            <summary>
            The time the attachment was uploaded.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.ContentHash">
            <summary>
            Content hash of on-disk representation of file content. Its calculated by the server by using SHA1 hash function.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Properties">
            <summary>
            Extended properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Attachment.Links">
            <summary>
            Links to other related objects.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Comment">
            <summary>
            Represents a comment which is one of potentially many in a comment thread.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.Id">
            <summary>
            The comment ID. IDs start at 1 and are unique to a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.ParentCommentId">
            <summary>
            The ID of the parent comment. This is used for replies.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.ThreadId">
            <summary>
            The parent thread ID.
            Used for internal server purposes only -- note that this field is not exposed to the REST client.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.Author">
            <summary>
            The author of the comment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.Content">
            <summary>
            The comment content.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.PublishedDate">
            <summary>
            The date the comment was first published.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.LastUpdatedDate">
            <summary>
            The date the comment was last updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.LastContentUpdatedDate">
            <summary>
            The date the comment's content was last updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.IsDeleted">
            <summary>
            Whether or not this comment was soft-deleted.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.CommentType">
            <summary>
            The comment type at the time of creation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.UsersLiked">
            <summary>
            A list of the users who have liked this comment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Comment.Links">
            <summary>
            Links to other related objects.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType">
            <summary>
            The type of a comment.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType.Unknown">
            <summary>
            The comment type is not known.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType.Text">
            <summary>
            This is a regular user comment.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType.CodeChange">
            <summary>
            The comment comes as a result of a code change.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentType.System">
            <summary>
            The comment represents a system message.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread">
            <summary>
            Represents a comment thread of a pull request. A thread contains meta data about the file
            it was left on along with one or more comments (an initial comment and the subsequent replies).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Id">
            <summary>
            The comment thread id.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.PublishedDate">
            <summary>
            The time this thread was published.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.LastUpdatedDate">
            <summary>
            The time this thread was last updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Comments">
            <summary>
            A list of the comments.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Status">
            <summary>
            The status of the comment thread.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.ThreadContext">
            <summary>
            Specify thread context such as position in left/right file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Properties">
            <summary>
            Optional properties associated with the thread as a collection of key-value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Identities">
            <summary>
            Set of identities related to this thread
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.IsDeleted">
            <summary>
            Specify if the thread is deleted which happens when all comments are deleted.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThread.Links">
            <summary>
            Links to other related objects.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus">
            <summary>
            The status of a comment thread.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus.Unknown">
            <summary>
            The thread status is unknown.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus.Active">
            <summary>
            The thread status is active.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus.Fixed">
            <summary>
            The thread status is resolved as fixed.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus.WontFix">
            <summary>
            The thread status is resolved as won't fix.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus.Closed">
            <summary>
            The thread status is closed.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus.ByDesign">
            <summary>
            The thread status is resolved as by design.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadStatus.Pending">
            <summary>
            The thread status is pending.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.FilePath">
            <summary>
            File path relative to the root of the repository. It's up to the client to use any path format.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.LeftFileStart">
            <summary>
            Position of first character of the thread's span in left file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.LeftFileEnd">
            <summary>
            Position of last character of the thread's span in left file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.RightFileStart">
            <summary>
            Position of first character of the thread's span in right file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentThreadContext.RightFileEnd">
            <summary>
            Position of last character of the thread's span in right file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentPosition.Line">
            <summary>
            The line number of a thread's position. Starts at 1.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentPosition.Offset">
            <summary>
            The character offset of a thread's position inside of a line. Starts at 0.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusContext">
            <summary>
            Status context that uniquely identifies the status.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusContext.Name">
            <summary>
            Name identifier of the status, cannot be null or empty. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatusContext.Genre">
            <summary>
            Genre of the status. Typically name of the service/tool generating the status, can be empty.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus">
            <summary>
            This class contains the metadata of a service/extension posting a status.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.Id">
            <summary>
            Status identifier.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.State">
            <summary>
            State of the status.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.Description">
            <summary>
            Status description. Typically describes current state of the status.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.Context">
            <summary>
            Context of the status.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.CreationDate">
            <summary>
            Creation date and time of the status.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.UpdatedDate">
            <summary>
            Last update date and time of the status.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.CreatedBy">
            <summary>
            Identity that created the status.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.TargetUrl">
            <summary>
            URL with status details.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitStatus.Links">
            <summary>
            Reference links.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeTreeItems.Items">
            <summary>
            The last change of items.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeTreeItems.LastExploredTime">
            <summary>
            The last explored time, in case the result is not comprehensive. Null otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeTreeItems.Commits">
            <summary>
            The list of commits referenced by Items, if they were requested.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeItem.Path">
            <summary>
            Gets or sets the path of the item.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLastChangeItem.CommitId">
            <summary>
            Gets or sets the commit Id this item was modified most recently for the provided version.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Change`1.Item">
            <summary>
            Current version.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Change`1.SourceServerItem">
            <summary>
            Path of the item on the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Change`1.ChangeType">
            <summary>
            The type of change that was made to the item.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Change`1.NewContent">
            <summary>
            Content of the item after the change.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Change`1.Url">
            <summary>
            URL to retrieve the item.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria">
            <summary>
            Criteria used in a search for change lists
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ItemPath">
            <summary>
            Path of item to search under. If the itemPaths memebr is used then it will take precedence over this.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ItemPaths">
            <summary>
            List of item paths to search under. If this member is used then itemPath will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ItemVersion">
            <summary>
            Version of the items to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.User">
            <summary>
            Alias or display name of user who made the changes
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FromDate">
            <summary>
            If provided, only include history entries created after this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ToDate">
            <summary>
            If provided, only include history entries created before this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FromVersion">
            <summary>
            If provided, a version descriptor for the earliest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ToVersion">
            <summary>
            If provided, a version descriptor for the latest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.CompareVersion">
            <summary>
            If provided, a version descriptor to compare against base
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.FollowRenames">
            <summary>
            Whether or not to follow renames for the given item being queried
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.ExcludeDeletes">
            <summary>
            If true, don't include delete history entries
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.Skip">
            <summary>
            Number of results to skip (used when clicking more...)
            </summary>
            TODO: this remains for legacy WebAccess support. it will go away when WebAccess moves to the REST API
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.Top">
            <summary>
            If provided, the maximum number of history entries to return
            </summary>
            TODO: this remains for legacy WebAccess support. it will go away when WebAccess moves to the REST API
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.SetFromDate(System.DateTime)">
            <summary>
            Set the from date
            </summary>
            <param name="fromDate">Only include results after this date</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.ChangeListSearchCriteria.SetToDate(System.DateTime)">
            <summary>
            Set the to date
            </summary>
            <param name="toDate">Only include results before this date</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileContentMetadata.EncodingWithBom">
            <summary>
            If applicable to the file encoding (typically for UTF-8), specifies if it has a byte order mark (BOM).
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkRef">
            <summary>
            Information about a fork ref.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkRef.Repository">
            <summary>
            The repository ID of the fork.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBlobRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBlobRef.Size">
            <summary>
            Size of blob content (in bytes)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitBranchStats">
            <summary>
            Ahead and behind counts for a particular ref.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBranchStats.Commit">
            <summary>
            Current commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBranchStats.Name">
            <summary>
            Name of the ref.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBranchStats.AheadCount">
            <summary>
            Number of commits ahead.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBranchStats.BehindCount">
            <summary>
            Number of commits behind.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBranchStats.IsBaseVersion">
            <summary>
            True if this is the result for the base version.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitBranchStats.ResolveBranchName(System.String)">
            <summary>
            Make sure branch name used does NOT include "refs/heads/
            </summary>
            <param name="nameIn">The branch name the BranchStats model is being build with.</param>
            <returns>The branch name without "refs/heads/"</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitChange.OriginalPath">
            <summary>
            Original path of item if different from current path.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitChange.ChangeId">
            <summary>
            ID of the change within the group of changes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitChange.NewContentTemplate">
            <summary>
            New Content template to be used when pushing new changes.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef">
            <summary>
            Provides properties that describe a Git commit and associated metadata.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.CommitId">
            <summary>
            ID (SHA-1) of the commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Author">
            <summary>
            Author of the commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Committer">
            <summary>
            Committer of the commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Comment">
            <summary>
            Comment or message of the commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.CommentTruncated">
            <summary>
            Indicates if the comment is truncated from the full Git commit comment message.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.ChangeCounts">
            <summary>
            Counts of the types of changes (edits, deletes, etc.) included with the commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Changes">
            <summary>
            An enumeration of the changes included with the commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Parents">
            <summary>
            An enumeration of the parent commit IDs for this commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Url">
            <summary>
            REST URL for this resource.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.RemoteUrl">
            <summary>
            Remote URL path to the commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Links">
            <summary>
            A collection of related REST reference links.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Statuses">
            <summary>
            A list of status metadata from services and extensions that may associate additional information to the commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.WorkItems">
            <summary>
            A list of workitems associated with this commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitCommitRef.Push">
            <summary>
            The push associated with this commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitHistoryQueryResults.StartingCommitId">
            <summary>
            Seed commit used for querying history.  Used for skip feature.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.ObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.OriginalObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.GitObjectType">
            <summary>
            Type of object (Commit, Tree, Blob, Tag, ...)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.CommitId">
            <summary>
            SHA1 of commit item was fetched at
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItem.LatestProcessedChange">
            <summary>
            Shallow ref to commit that last changed this item
            Only populated if latestProcessedChange is requested
            May not be accurate if latest change is not yet cached
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.Path">
            <summary>
            Path to item
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.Version">
            <summary>
            Version string (interpretation based on VersionType defined in subclass
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.VersionType">
            <summary>
            How to interpret version (branch,tag,commit)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.VersionOptions">
            <summary>
            Version modifiers (e.g. previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemDescriptor.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full), or None
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.ItemDescriptors">
            <summary>
            Collection of items to fetch, including path, version, and recursion level
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.IncludeContentMetadata">
            <summary>
            Whether to include metadata for all items
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.LatestProcessedChange">
            <summary>
            Whether to include shallow ref to commit that last changed each item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitItemRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode">
            <summary>
            Enumerates the modes under which ref updates can be written to their repositories.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode.BestEffort">
            <summary>
            Indicates the Git protocol model where any refs that can be updated will be updated,
            but any failures will not prevent other updates from succeeding.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateMode.AllOrNone">
            <summary>
            Indicates that all ref updates must succeed or none will succeed. All ref updates will be atomically written.
            If any failure is encountered, previously successful updates will be rolled back and the entire operation will fail.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus">
            <summary>
            Represents the possible outcomes from a request to update a ref in a repository.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Succeeded">
            <summary>
            Indicates that the ref update request was completed successfully.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.ForcePushRequired">
            <summary>
            Indicates that the ref update request could not be completed because part of the graph
            would be disconnected by this change, and the caller does not have ForcePush permission
            on the repository.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.StaleOldObjectId">
            <summary>
            Indicates that the ref update request could not be completed because the old object ID
            presented in the request was not the object ID of the ref when the database attempted
            the update. The most likely scenario is that the caller lost a race to update the ref.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.InvalidRefName">
            <summary>
            Indicates that the ref update request could not be completed because the ref name
            presented in the request was not valid.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Unprocessed">
            <summary>
            The request was not processed
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.UnresolvableToCommit">
            <summary>
            The ref update request could not be completed because the new object ID for the ref
            could not be resolved to a commit object (potentially through any number of tags)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.WritePermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks write permissions
            required to write this ref
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.ManageNotePermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks note creation permissions
            required to write this note
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.CreateBranchPermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks the permission to 
            create a branch
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.CreateTagPermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks the permission to
            create a tag
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RejectedByPlugin">
            <summary>
            The ref update could not be completed because it was rejected by the plugin.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.Locked">
            <summary>
            The ref update could not be completed because the ref is locked by another user.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RefNameConflict">
            <summary>
            The ref update could not be completed because, in case-insensitive mode,
            the ref name conflicts with an existing, differently-cased ref name.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.RejectedByPolicy">
            <summary>
            The ref update could not be completed because it was rejected by policy.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.SucceededNonExistentRef">
            <summary>
            Indicates that the ref update request was completed successfully,
            but the ref doesn't actually exist so no changes were made.
            
            This should only happen during deletes.
            </summary>
            <remarks>
            Core git (and GitHub by extension) returns "warning: Deleting a non-existent ref." 
            in this case as of 3/5/2015
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateStatus.SucceededCorruptRef">
            <summary>
            Indicates that the ref update request was completed successfully,
            but the passed-in ref was corrupt - as in, the old object ID was bad.
            
            This should only happen during deletes.
            </summary>
            <remarks>
            Core git (and GitHub by extension) returns "warning: Allowing deletion of corrupt ref." 
            in this case as of 3/5/2015
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryRef.IsFork">
            <summary>
            True if the repository was created as a fork
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepositoryRef.Collection">
            <summary>
            Team Project Collection where this Fork resides
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitObject">
            <summary>
            Git object identifier and type information.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitObject.ObjectId">
            <summary>
            Object Id (Sha1Id).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitObject.ObjectType">
            <summary>
            Type of object (Commit, Tree, Blob, Tag)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPushSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Ids">
            <summary>
            If provided, specifies the exact commit ids of the commits to fetch.
            May not be combined with other parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.FromDate">
            <summary>
            If provided, only include history entries created after this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ToDate">
            <summary>
            If provided, only include history entries created before this date (string)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ItemVersion">
            <summary>
            If provided, identifies the commit or branch to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.CompareVersion">
            <summary>
            Only applicable when ItemVersion specified. If provided, start walking history starting at this commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.FromCommitId">
            <summary>
            If provided, a lower bound for filtering commits alphabetically
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ToCommitId">
            <summary>
            If provided, an upper bound for filtering commits alphabetically
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Committer">
            <summary>
            Alias or display name of the committer
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Author">
            <summary>
            Alias or display name of the author
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ItemPath">
            <summary>
            Path of item to search under
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.ExcludeDeletes">
            <summary>
            Only applies when an itemPath is specified. This determines whether to exclude delete entries of the specified path.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Skip">
            <summary>
            Number of entries to skip
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.Top">
            <summary>
            Maximum number of entries to retrieve
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.IncludeWorkItems">
            <summary>
            Whether to include linked work items
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.IncludeUserImageUrl">
            <summary>
            Whether to include the image Url for committers and authors
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.IncludePushData">
            <summary>
            Whether to include the push information
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryCommitsCriteria.HistoryMode">
            <summary>
            What Git history mode should be used. This only applies to the search criteria when Ids = null 
            and an itemPath is specified.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitHistoryMode">
            <summary>
            Accepted types of version
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitHistoryMode.SimplifiedHistory">
            <summary>
            The history mode used by `git log`. This is the default.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitHistoryMode.FirstParent">
            <summary>
            The history mode used by `git log --first-parent`
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitHistoryMode.FullHistory">
            <summary>
            The history mode used by `git log --full-history`
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitHistoryMode.FullHistorySimplifyMerges">
            <summary>
            The history mode used by `git log --full-history --simplify-merges`
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryRefsCriteria.RefNames">
            <summary>
            List of complete or partial names for refs to be searched
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryRefsCriteria.CommitIds">
            <summary>
            List of commit Ids to be searched
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitQueryRefsCriteria.SearchType">
            <summary>
            Type of search on refNames, if provided
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRecycleBinRepositoryDetails.Deleted">
            <summary>
            Setting to false will undo earlier deletion and restore the repository.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefFavorite.RefFavoriteType">
            <summary>
            Acceptable values for Type property
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.RepositoryId">
            <summary>
            Repository ID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.Name">
            <summary>
            Ref name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.OldObjectId">
            <summary>
            Old object ID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.NewObjectId">
            <summary>
            New object ID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.IsLocked">
            <summary>
            Whether the ref is locked or not
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.UpdateStatus">
            <summary>
            Status of the update from the TFS server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.RejectedBy">
            <summary>
            Name of the plugin that rejected the updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.CustomMessage">
            <summary>
            Custom message for the result object
            For instance, Reason for failing. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefUpdateResult.Success">
            <summary>
            True if the ref update succeeded, false otherwise
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag">
            <summary>
            A Git annotated tag.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag.Name">
            <summary>
             The name of the annotated tag.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag.ObjectId">
            <summary>
             The objectId (Sha1Id) of the tag.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag.TaggedObject">
            <summary>
            Tagged git object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag.TaggedBy">
            <summary>
            User info and date of tagging.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAnnotatedTag.Message">
            <summary>
            The tagging Message
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.RelativePath">
            <summary>
            Path relative to parent tree object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Mode">
            <summary>
            Mode represented as octal string
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.GitObjectType">
            <summary>
            Blob or tree
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Url">
            <summary>
            url to retrieve tree or blob
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeEntryRef.Size">
            <summary>
            Size of content
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository.Size">
            <summary>
            Compressed size (bytes) of the repository.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitRepository.IsFork">
            <summary>
            True if the repository was created as a fork
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.ObjectId">
            <summary>
            SHA1 hash of git object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.Url">
            <summary>
            Url to tree 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.TreeEntries">
            <summary>
            Blobs and trees under this tree
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeRef.Size">
            <summary>
            Sum of sizes of all children
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitUserDate">
            <summary>
            User info and date for Git operations.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitUserDate.Name">
            <summary>
             Name of the user performing the Git operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitUserDate.Email">
            <summary>
             Email address of the user performing the Git operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitUserDate.Date">
            <summary>
             Date of the Git operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitUserDate.ImageUrl">
            <summary>
             Url for the user's avatar.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, or commit). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, or commit). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitBaseVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.VersionType">
            <summary>
            Version type (branch, tag, or commit). Determines how Id is interpreted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.Version">
            <summary>
            Version string identifier (name of tag/branch, SHA1 of commit)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTargetVersionDescriptor.VersionOptions">
            <summary>
            Version options - Specify additional modifiers to version (e.g Previous)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType">
            <summary>
            Accepted types of version
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Branch">
            <summary>
            Interpret the version as a branch name
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Tag">
            <summary>
            Interpret the version as a tag name
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionType.Commit">
            <summary>
            Interpret the version as a commit ID (SHA1)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions">
            <summary>
            Accepted types of version options
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.None">
            <summary>
            Not specified
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.PreviousChange">
            <summary>
            Commit that changed item prior to the current version
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitVersionOptions.FirstParent">
            <summary>
            First parent of commit (HEAD^)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote">
            <summary>
            Identity information including a vote on a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote.ReviewerUrl">
            <summary>
            URL to retrieve information about this identity
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote.Vote">
            <summary>
            Vote on a pull request:<br/>
            10 - approved
            5 - approved with suggestions
            0 - no vote
            -5 - waiting for author
            -10 - rejected
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote.VotedFor">
            <summary>
            Groups or teams that that this reviewer contributed to.
            <br/>
            Groups and teams can be reviewers on pull requests but can not vote directly.  When a member of
            the group or team votes, that vote is rolled up into the group or team vote.  VotedFor is a list
            of such votes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.IdentityRefWithVote.IsRequired">
            <summary>
            Indicates if this is a required reviewer for this pull request.
            <br/>
            Branches can have policies that require particular reviewers are required for pull requests.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitSuggestion">
            <summary>
            An object describing the git suggestion.  Git suggestions are currently limited 
            to suggested pull requests.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitSuggestion.Type">
            <summary>
            The type of suggestion (e.g. pull request).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitSuggestion.Properties">
            <summary>
            Specific properties describing the suggestion.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.TargetObjectId">
            <summary>
            SHA1 hash of the object in the target tree, if it exists. 
            Will be null in case of deletes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.BaseObjectId">
            <summary>
            SHA1 hash of the object in the base tree, if it exists.
            Will be null in case of adds.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.ObjectType">
            <summary>
            Object type of the tree entry. 
            Blob, Tree or Commit("submodule")
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.Path">
            <summary>
            Relative path in base and target trees.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffEntry.ChangeType">
            <summary>
            Type of change that affected this entry.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiff.BaseTreeId">
            <summary>
            ObjectId of the base tree of this diff.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiff.TargetTreeId">
            <summary>
            ObjectId of the target tree of this diff.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiff.DiffEntries">
            <summary>
            List of tree entries that differ between the base
            and target tree.
            
            Renames and object type changes are returned as a 
            delete for the old object and add for the new object.
            
            If a continuation token is returned in the response header, 
            some tree entries are yet to be processed and may yeild more
            diff entries. If the continuation token is not returned
            all the diff entries have been included in this response.        
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiff.Url">
            <summary>
            REST Url to this resource.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTreeDiffResponse.ContinuationToken">
            <summary>
            The HTTP client methods find the continuation token header in the 
            response and populate this field. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPolicyConfigurationResponse.ContinuationToken">
            <summary>
            The HTTP client methods find the continuation token header in the 
            response and populate this field. 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitRefSearchType">
            <summary>
            Search type on ref name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperation.Url">
            <summary>
            A URL that can be used to make further requests for status about the operation
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationDetail">
            <summary>
            Information about the progress of a cherry pick or revert operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationDetail.CurrentCommitId">
            <summary>
            The current commit from the list of commits that are being cherry picked or reverted.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationDetail.Progress">
            <summary>
            A number between 0 and 1 indicating the percent complete of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationDetail.Conflict">
            <summary>
            Indicates if there was a conflict generated when trying to cherry pick or revert the changes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationDetail.Timedout">
            <summary>
            Indicates if the operation went beyond the maximum time allowed for a cherry pick or revert operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationDetail.Status">
            <summary>
            Provides a status code that indicates the reason the cherry pick or revert failed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationDetail.FailureMessage">
            <summary>
            Detailed information about why the cherry pick or revert failed to complete.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitCherryPick">
            <summary>
            This object is returned from Cherry Pick operations
            and provides the id and status of the operation
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters">
            <summary>
            Parameters that are provided in the request body when requesting to cherry pick or revert.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters.Repository">
            <summary>
            The git repository for the cherry pick or revert operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters.Source">
            <summary>
            Details about the source of the cherry pick or revert operation (e.g. A pull request
            or a specific commit).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters.OntoRefName">
            <summary>
            The target branch for the cherry pick or revert operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationParameters.GeneratedRefName">
            <summary>
            Proposed target branch name for the cherry pick or revert operation.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationSource">
            <summary>
            GitAsyncRefOperationSource specifies the pull request or list of commits to use
            when making a cherry pick and revert operation request. Only one should be provided.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationSource.PullRequestId">
            <summary>
            Id of the pull request to cherry pick or revert
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationSource.CommitList">
            <summary>
            A list of commits to cherry pick or revert
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.None">
            <summary>
            No status
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.InvalidRefName">
            <summary>
            Indicates that the ref update request could not be completed because the ref name
            presented in the request was not valid.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.RefNameConflict">
            <summary>
            The ref update could not be completed because, in case-insensitive mode,
            the ref name conflicts with an existing, differently-cased ref name.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.CreateBranchPermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks the permission to 
            create a branch
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.WritePermissionRequired">
            <summary>
            The ref update request could not be completed because the user lacks write permissions
            required to write this ref
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.TargetBranchDeleted">
            <summary>
            Target branch was deleted after Git async operation started
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.GitObjectTooLarge">
            <summary>
            Git object is too large to materialize into memory
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.OperationIndentityNotFound">
            <summary>
            Identity who authorized the operation was not found
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.AsyncOperationNotFound">
            <summary>
            Async operation was not found
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.Other">
            <summary>
            Unexpected failure
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitAsyncRefOperationFailureStatus.EmptyCommitterSignature">
            <summary>
            Initiator of async operation has signature with empty name or email
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest">
            <summary>
            A request to import data from a remote source control system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest.ImportRequestId">
            <summary>
            The unique identifier for this import request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest.Repository">
            <summary>
            The target repository for this import.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest.Parameters">
            <summary>
            Parameters for creating the import request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest.Status">
            <summary>
            Current status of the import.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest.DetailedStatus">
            <summary>
            Detailed status of the import, including the current step and an error message, if applicable.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest.Links">
            <summary>
            Links to related resources.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequest.Url">
            <summary>
            A link back to this import request resource.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters">
            <summary>
            Parameters for creating an import request
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.#ctor(Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters)">
            <summary>
            Constructor for Shallow Copy 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.TfvcSource">
            <summary>
            Source for importing tfvc repository
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.GitSource">
            <summary>
            Source for importing git repository
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.ServiceEndpointId">
            <summary>
            Service Endpoint for connection to external endpoint
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportRequestParameters.DeleteServiceEndpointAfterImportIsDone">
            <summary>
            Option to delete service endpoint when import is done
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportStatusDetail">
            <summary>
            Additional status information about an import request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportStatusDetail.CurrentStep">
            <summary>
            Index into <see cref="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportStatusDetail.AllSteps"/> for the current step
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportStatusDetail.AllSteps">
            <summary>
            All valid steps for the import process
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportStatusDetail.ErrorMessage">
            <summary>
            Error message if the operation failed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportGitSource">
            <summary>
            Parameter for creating a git import request when source is Git version control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportGitSource.Url">
            <summary>
            Url for the source repo
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportGitSource.Overwrite">
            <summary>
            Tells if this is a sync request or not
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportTfvcSource">
            <summary>
            Parameter for creating a git import request when source is tfvc version control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportTfvcSource.Path">
            <summary>
            Path which we want to import (this can be copied from Path Control in Explorer)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportTfvcSource.ImportHistory">
            <summary>
            Set true to import History, false otherwise
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitImportTfvcSource.ImportHistoryDurationInDays">
            <summary>
            Get history for last n days (max allowed value is 180 days)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest">
            <summary>
            Represents all the data associated with a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Repository">
            <summary>
            The repository containing the target branch of the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.PullRequestId">
            <summary>
            The ID of the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.CodeReviewId">
            <summary>
            The code review ID of the pull request. Used internally.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Status">
            <summary>
            The status of the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.CreatedBy">
            <summary>
            The identity of the user who created the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.CreationDate">
            <summary>
            The date when the pull request was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.ClosedDate">
            <summary>
            The date when the pull request was closed (completed, abandoned, or merged externally).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Title">
            <summary>
            The title of the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Description">
            <summary>
            The description of the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.SourceRefName">
            <summary>
            The name of the source branch of the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.TargetRefName">
            <summary>
            The name of the target branch of the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.MergeStatus">
            <summary>
            The current status of the pull request merge.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.MergeFailureType">
            <summary>
            The type of failure (if any) of the pull request merge.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.MergeFailureMessage">
            <summary>
            If set, pull request merge failed for this reason.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.IsDraft">
            <summary>
            Draft / WIP pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.MergeId">
            <summary>
            The ID of the job used to run the pull request merge. Used internally.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.LastMergeSourceCommit">
            <summary>
            The commit at the head of the source branch at the time of the last pull request merge.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.LastMergeTargetCommit">
            <summary>
            The commit at the head of the target branch at the time of the last pull request merge.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.LastMergeCommit">
            <summary>
            The commit of the most recent pull request merge.
            If empty, the most recent merge is in progress or was unsuccessful.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Reviewers">
            <summary>
            A list of reviewers on the pull request along with the state of their votes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Labels">
            <summary>
            The labels associated with the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Commits">
            <summary>
            The commits contained in the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Url">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.RemoteUrl">
            <summary>
            Used internally.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.Links">
            <summary>
            Links to other related objects.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.CompletionOptions">
            <summary>
            Options which affect how the pull request will be merged when it is completed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.MergeOptions">
            <summary>
            Options used when the pull request merge runs.
            These are separate from completion options since completion happens only once and a new merge
            will run every time the source branch of the pull request changes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.SupportsIterations">
            <summary>
            If true, this pull request supports multiple iterations. Iteration support means individual pushes to
            the source branch of the pull request can be reviewed and comments left in one iteration will be
            tracked across future iterations.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.WorkItemRefs">
            <summary>
            Any work item references associated with this pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.CompletionQueueTime">
            <summary>
            The most recent date at which the pull request entered the queue to be completed. Used internally.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.ClosedBy">
            <summary>
            The user who closed the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.AutoCompleteSetBy">
            <summary>
            If set, auto-complete is enabled for this pull request and this is the identity that enabled it.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.ArtifactId">
            <summary>
            A string which uniquely identifies this pull request. To generate an artifact ID for a pull request, use this template:
            ```vstfs:///Git/PullRequestId/{projectId}/{repositoryId}/{pullRequestId}```
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest.ForkSource">
            <summary>
            If this is a PR from a fork this will contain information about its source.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestChange">
            <summary>
            Change made in a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestChange.ChangeTrackingId">
            <summary>
            ID used to track files through multiple changes.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread">
            <summary>
            Represents a comment thread of a pull request. A thread contains meta data about the file
            it was left on (if any) along with one or more comments (an initial comment and the subsequent replies).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread.ArtifactUri">
            <summary>
            The artifact uri of the comment thread id.
            Used for internal server purposes only -- note that this field is not exposed to the REST client.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread.PullRequestThreadContext">
            <summary>
            Extended context information unique to pull requests
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread.MarkForUpdate">
            <summary>
            Specifies whether a thread is marked for an update operation.
            Used for internal server purposes only -- note that this field is not exposed to the REST client.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThreadContext">
            <summary>
            Comment thread context contains details about what diffs were being viewed at the time of
            thread creation and whether or not the thread has been tracked from that original diff.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThreadContext.IterationContext">
            <summary>
            The iteration context being viewed when the thread was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThreadContext.TrackingCriteria">
            <summary>
            The criteria used to track this thread. If this property is filled out when the thread is returned, then
            the thread has been tracked from its original location using the given criteria.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThreadContext.ChangeTrackingId">
            <summary>
            Used to track a comment across iterations.
            This value can be found by looking at the iteration's changes list.
            Must be set for pull requests with iteration support. Otherwise, it's not required for 'legacy' pull requests. 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentIterationContext">
            <summary>
            Comment iteration context is used to identify which diff was being viewed when the thread was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentIterationContext.FirstComparingIteration">
            <summary>
            The iteration of the file on the left side of the diff when the thread was created.
            If this value is equal to SecondComparingIteration, then this version is the common commit between the source and target branches of the pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentIterationContext.SecondComparingIteration">
            <summary>
            The iteration of the file on the right side of the diff when the thread was created.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria">
            <summary>
            Comment tracking criteria is used to identify which iteration context the thread has been tracked to (if any)
            along with some detail about the original position and filename.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.FirstComparingIteration">
            <summary>
            The iteration of the file on the left side of the diff that the thread will be tracked to.
            Threads were tracked if this is greater than 0.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.SecondComparingIteration">
            <summary>
            The iteration of the file on the right side of the diff that the thread will be tracked to.
            Threads were tracked if this is greater than 0.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.OrigFilePath">
            <summary>
            Original filepath the thread was created on before tracking. This will be different than the current thread
            filepath if the file in question was renamed in a later iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.OrigLeftFileStart">
            <summary>
            Original position of first character of the thread's span in left file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.OrigLeftFileEnd">
            <summary>
            Original position of last character of the thread's span in left file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.OrigRightFileStart">
            <summary>
            Original position of first character of the thread's span in right file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CommentTrackingCriteria.OrigRightFileEnd">
            <summary>
            Original position of last character of the thread's span in right file.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions">
            <summary>
            Preferences about how the pull request should be completed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.MergeCommitMessage">
            <summary>
            If set, this will be used as the commit message of the merge commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.DeleteSourceBranch">
            <summary>
            If true, the source branch of the pull request will be deleted after completion.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.SquashMerge">
            <summary>
            SquashMerge is deprecated. You should explicity set the value of MergeStrategy.
            If MergeStrategy is set to any value, the SquashMerge value will be ignored.
            If MergeStrategy is not set, the merge strategy will be no-fast-forward if this flag is false, or squash if true.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.MergeStrategy">
            <summary>
            Specify the strategy used to merge the pull request during completion.
            If MergeStrategy is not set to any value, a no-FF merge will be created if SquashMerge == false.
            If MergeStrategy is not set to any value, the pull request commits will be squash if SquashMerge == true.
            The SquashMerge member is deprecated. It is recommended that you explicitly set MergeStrategy in all
            cases. If an explicit value is provided for MergeStrategy, the SquashMerge member will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.BypassPolicy">
            <summary>
            If true, policies will be explicitly bypassed while the pull request is completed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.BypassReason">
            <summary>
            If policies are bypassed, this reason is stored as to why bypass was used.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.TransitionWorkItems">
            <summary>
            If true, we will attempt to transition any work items linked to the pull request into the next logical state
            (i.e. Active -> Resolved)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.TriggeredByAutoComplete">
            <summary>
            If true, the current completion attempt was triggered via auto-complete. Used internally.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCompletionOptions.Normalize">
            <summary>
            This updates SquashMerge and MergeStrategy so that they agree with each other.
            MergeStrategy takes precedence.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestMergeOptions">
            <summary>
            The options which are used when a pull request merge is created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestMergeOptions.DisableRenames">
            <summary>
            If true, rename detection will not be performed during the merge.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestMergeOptions.DetectRenameFalsePositives" -->
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestMergeStrategy">
            <summary>
            Enumeration of possible merge strategies which can be used to complete a pull request.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestMergeStrategy.NoFastForward">
            <summary>
            A two-parent, no-fast-forward merge. The source branch is unchanged. This is the default behavior.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestMergeStrategy.Squash">
            <summary>
            Put all changes from the pull request into a single-parent commit.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestMergeStrategy.Rebase">
            <summary>
            Rebase the source branch on top of the target branch HEAD commit, and fast-forward the target branch.
            The source branch is updated during the rebase operation.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestMergeStrategy.RebaseMerge">
            <summary>
            Rebase the source branch on top of the target branch HEAD commit, and create a two-parent, no-fast-forward merge.
            The source branch is updated during the rebase operation.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestTabExtensionConfig">
            <summary>
            Initial config contract sent to extensions creating tabs
            on the pull request page
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryType">
            <summary>
            Accepted types of pull request queries.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryType.NotSet">
            <summary>
            No query type set.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryType.LastMergeCommit">
            <summary>
            Search for pull requests that created the supplied merge commits.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryType.Commit">
            <summary>
            Search for pull requests that merged the supplied commits.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryInput">
            <summary>
            Pull request query input parameters.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryInput.Type">
            <summary>
            The type of query to perform.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQueryInput.Items">
            <summary>
            The list of commit IDs to search for.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery">
            <summary>
            A set of pull request queries and their results.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery.QueryInputs">
            <summary>
            The queries to perform.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestQuery.Results">
            <summary>
            The results of the queries.
            This matches the QueryInputs list so Results[n] are the results of QueryInputs[n].
            Each entry in the list is a dictionary of commit->pull requests.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria">
            <summary>
            Pull requests can be searched for matching this criteria.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.RepositoryId">
            <summary>
            If set, search for pull requests whose target branch is in this repository.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.CreatorId">
            <summary>
            If set, search for pull requests that were created by this identity.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.ReviewerId">
            <summary>
            If set, search for pull requests that have this identity as a reviewer.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.Status">
            <summary>
            If set, search for pull requests that are in this state. Defaults to Active if unset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.TargetRefName">
            <summary>
            If set, search for pull requests into this branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.SourceRepositoryId">
            <summary>
            If set, search for pull requests whose source branch is in this repository.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.SourceRefName">
            <summary>
            If set, search for pull requests from this branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration">
            <summary>
            Provides properties that describe a Git pull request iteration.
            Iterations are created as a result of creating and pushing updates to a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.Id">
            <summary>
            ID of the pull request iteration.
            Iterations are created as a result of creating and pushing updates to a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.Description">
            <summary>
            Description of the pull request iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.Author">
            <summary>
            Author of the pull request iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.ChangeList">
            <summary>
            Changes included with the pull request iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.CreatedDate">
            <summary>
            The creation date of the pull request iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.UpdatedDate">
            <summary>
            The updated date of the pull request iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.SourceRefCommit">
            <summary>
            The source Git commit of this iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.TargetRefCommit">
            <summary>
            The target Git commit of this iteration. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.CommonRefCommit">
            <summary>
            The first common Git commit of the source and target refs.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.Commits">
            <summary>
            The commits included with the pull request iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.hasMoreCommits">
            <summary>
            Indicates if the Commits property contains a truncated list of commits in this pull request iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.Reason">
            <summary>
            The reason for which the pull request iteration was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.Push">
            <summary>
            The Git push information associated with this pull request iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.Links">
            <summary>
            A collection of related REST reference links.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.NewTargetRefName">
            <summary>
            If the iteration reason is Retarget, this is the refName of the new target
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIteration.OldTargetRefName">
            <summary>
            If the iteration reason is Retarget, this is the original target refName
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.IterationReason">
            <summary>
            The reason for which the pull request iteration was created.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIterationChanges">
            <summary>
            Collection of changes made in a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIterationChanges.NextTop">
            <summary>
            Value to specify as top to get the next page of changes.  This will be zero if there are no more changes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIterationChanges.NextSkip">
            <summary>
            Value to specify as skip to get the next page of changes.  This will be zero if there are no more changes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestIterationChanges.ChangeEntries">
            <summary>
            Changes made in the iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestReviewFileContentInfo.Path">
            <summary>
            The file change path.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestReviewFileContentInfo.SHA1Hash">
            <summary>
            Content hash of on-disk representation of file content. Its calculated by the client by using SHA1 hash function.
            Ensure that uploaded file has same encoding as in source control.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus">
            <summary>
            This class contains the metadata of a service/extension posting pull request status.
            Status can be associated with a pull request or an iteration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus.IterationId">
            <summary>
            ID of the iteration to associate status with. Minimum value is 1.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestStatus.Properties">
            <summary>
            Custom properties of the status.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.AutoCompleteUpdatedEvent">
            <summary>
            Real time event (SignalR) for an auto-complete update on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.BranchUpdatedEvent">
            <summary>
            Real time event (SignalR) for a source/target branch update on a pull request
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.BranchUpdatedEvent.IsSourceUpdate">
            <summary>
            If true, the source branch of the pull request was updated
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.CompletionErrorsEvent">
            <summary>
            Real time event (SignalR) for a completion errors on a pull request
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.CompletionErrorsEvent.ErrorMessage">
            <summary>
            The error message associated with the completion error
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.DiscussionsUpdatedEvent">
            <summary>
            Real time event (SignalR) for a discussions update on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.IsDraftUpdatedEvent">
            <summary>
            Real time event (SignalR) for IsDraft update on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.LabelsUpdatedEvent">
            <summary>
            Real time event (SignalR) for updated labels on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.MergeCompletedEvent">
            <summary>
            Real time event (SignalR) for a merge completed on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.PolicyEvaluationUpdatedEvent">
            <summary>
            Real time event (SignalR) for a policy evaluation update on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.PullRequestCreatedEvent">
            <summary>
            Real time event (SignalR) for pull request creation
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.RealTimePullRequestEvent">
            <summary>
            Base contract for a real time pull request event (SignalR)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.RealTimePullRequestEvent.PullRequestId">
            <summary>
            The id of the pull request this event was generated for.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.RealTimePullRequestEvent.EventId">
            <summary>
            The id of this event. Can be used to track send/receive state between client and server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.RetargetEvent">
            <summary>
            Real time event (SignalR) for when the target branch of a pull request is changed
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ReviewersUpdatedEvent">
            <summary>
            Real time event (SignalR) for an update to reviewers on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ReviewersVotesResetEvent">
            <summary>
            Real time event (SignalR) for reviewer votes being reset on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ReviewerVoteUpdatedEvent">
            <summary>
            Real time event (SignalR) for a reviewer vote update on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.StatusAddedEvent">
            <summary>
            Real time event (SignalR) for an added status on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.StatusesDeletedEvent">
            <summary>
            Real time event (SignalR) for deleted statuses on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.StatusUpdatedEvent">
            <summary>
            Real time event (SignalR) for a status update on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TitleDescriptionUpdatedEvent">
            <summary>
            Real time event (SignalR) for a title/description update on a pull request
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictDirectoryFile">
            <summary>
            Data object for FileDirectory conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictFileDirectory">
            <summary>
            Data object for DirectoryFile conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolution.Author">
            <summary>
            User who created the resolution.
            </summary>
            <remarks>
            GitConflict.Resolution.Author is different from GitConflict.ResolvedBy
            in the same way that author and committer are different for git commits.
            
            The author is included on the resolution object instead of the conflict object
            so that services can copy a resolution from one conflict instance to another 
            and preserve the original author without needing to know about it.
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictDeleteEdit">
            <summary>
            Data object for EditDelete conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPickOneAction
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictEditDelete">
            <summary>
            Data object for DeleteEdit conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPickOneAction
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictEditEdit">
            <summary>
            Data object for EditEdit conflict
            </summary>
            <remarks>
            Resolve with GitResolutionContentMerge
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRenameRename">
            <summary>
            Data object for RenameRename conflict
            </summary>
            <remarks>
            Resolve with GitResolutionContentMerge
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictAddRename">
            <summary>
            Data object for RenameAdd conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictDeleteRename">
            <summary>
            Data object for RenameDelete conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPickOneAction
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRename2to1">
            <summary>
            Data object for Rename2to1 conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRename1to2">
            <summary>
            Data object for Rename1to2 conflict
            </summary>
            <remarks>
            Resolve with GitResolutionRename1to2
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRenameDelete">
            <summary>
            Data object for DeleteRename conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPickOneAction
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictRenameAdd">
            <summary>
            Data object for AddRename conflict
            </summary>
            <remarks>
            Resolve with GitResolutionPathConflict
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictAddAdd">
            <summary>
            Data object for AddAdd conflict
            </summary>
            <remarks>
            Resolve with GitResolutionContentMerge
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateResult.UpdatedConflict">
            <summary>
            New state of the conflict after updating
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateResult.ConflictId">
            <summary>
            Conflict ID that was provided by input
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateResult.UpdateStatus">
            <summary>
            Status of the update on the server
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateResult.CustomMessage">
            <summary>
            Reason for failing
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateStatus">
            <summary>
            Represents the possible outcomes from a request to update a pull request conflict
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateStatus.Succeeded">
            <summary>
            Indicates that pull request conflict update request was completed successfully
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateStatus.BadRequest">
            <summary>
            Indicates that the update request did not fit the expected data contract
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateStatus.InvalidResolution">
            <summary>
            Indicates that the requested resolution was not valid
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateStatus.UnsupportedConflictType">
            <summary>
            Indicates that the conflict in the update request was not a supported conflict type
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictUpdateStatus.NotFound">
            <summary>
            Indicates that the conflict could not be found
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionStatus">
            <summary>
            Resolution status of a conflict.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType">
            <summary>
            The type of a merge conflict.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.None">
            <summary>
            No conflict
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.AddAdd">
            <summary>
            Added on source and target; content differs
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.AddRename">
            <summary>
            Added on source and rename destination on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.DeleteEdit">
            <summary>
            Deleted on source and edited on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.DeleteRename">
            <summary>
            Deleted on source and renamed on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.DirectoryFile">
            <summary>
            Path is a directory on source and a file on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.DirectoryChild">
            <summary>
            Children of directory which has DirectoryFile or FileDirectory conflict
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.EditDelete">
            <summary>
            Edited on source and deleted on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.EditEdit">
            <summary>
            Edited on source and target; content differs
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.FileDirectory">
            <summary>
            Path is a file on source and a directory on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.Rename1to2">
            <summary>
            Same file renamed on both source and target; destination paths differ
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.Rename2to1">
            <summary>
            Different files renamed to same destination path on both source and target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.RenameAdd">
            <summary>
            Rename destination on source and new file on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.RenameDelete">
            <summary>
            Renamed on source and deleted on target
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitConflictType.RenameRename">
            <summary>
            Rename destination on both source and target; content differs
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError">
            <summary>
            The type of a merge conflict.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.None">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.MergeContentNotFound">
            <summary>
            User set a blob id for resolving a content merge, but blob was not found in repo during application
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.PathInUse">
            <summary>
            Attempted to resolve a conflict by moving a file to another path, but path was already in use
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.InvalidPath">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.UnknownAction">
            <summary>
            GitResolutionAction was set to an unrecognized value
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.UnknownMergeType">
            <summary>
            GitResolutionMergeType was set to an unrecognized value
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.GitResolutionError.OtherError">
            <summary>
            Any error for which a more specific code doesn't apply
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ChangeList">
            <summary>
            The Change list (changeset/commit/shelveset) for this point in history
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ItemChangeType">
            <summary>
            The change made to the item from this change list (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryEntry`1.ServerItem">
            <summary>
            The path of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryQueryResults`1.Results">
            <summary>
            The history entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.HistoryQueryResults`1.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            A more RESTy solution would be to include a Link header
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions">
            <summary>
            Optional details to include when returning an item model
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full) or None for folder items
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ItemDetailsOptions.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.Results">
            <summary>
            The change entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ChangeQueryResults.ChangeCounts">
            <summary>
            Total counts for each type of change
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType">
            <summary>
            Type of change for a diff block
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.None">
            <summary>
            No change - left and right sides are identical
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Add">
            <summary>
            Content was added to the right side
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Delete">
            <summary>
            Content was deleted from the left side
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlockChangeType.Edit">
            <summary>
            Lines were modified
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlock.TruncatedBefore">
            <summary>
            True for "ChangeType=None" blocks in a partial diff
            that have been truncated before the included text.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffBlock.TruncatedAfter">
            <summary>
            True for "ChangeType=None" blocks in a partial diff
            that have been truncated after the included text.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters">
            <summary>
            Parameters used when diffing 2 files
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.OriginalPath">
            <summary>
            Server path of the left/original item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.OriginalVersion">
            <summary>
            Version description of the original item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.ModifiedPath">
            <summary>
            Server path of the right/modified item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.ModifiedVersion">
            <summary>
            Version description of the right/modified item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.PartialDiff">
            <summary>
            If true, only return the changed diff blocks plus a few unchanged lines before and after each change block.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.IgnoreTrimmedWhitespace">
            <summary>
            Unless false, ignore whitespace at the beginning and end of each line
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.LineNumbersOnly">
            <summary>
            If true, don't include the content in the returned diff blocks. Only include the line numbers.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters.IncludeCharDiffs">
            <summary>
            If true, include char diffs with each diff block
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitHistoryQueryResults.StartingCommitId">
            <summary>
            Seed commit used for querying history.  Used for skip feature.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitItem.ObjectId">
            <summary>
            Git object id
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitItem.CommitId">
            <summary>
            This is not used on the serverside, but is used by TypeScript.  Its added here for code generation.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.GitObjectReference">
            <summary>
            Represents a shallow reference to a Git object for serialization
            </summary>
            <example>
            A GitCommit may have several parents, represented by a list of GitObjectReference instances.
            This list would be serialized to JSON as something like
            "parents": [
                { 
                    "objectId": "25c12518372b4a18f1b9d85f83ae01097604dc88",
                    "url": "http://my-tfs-server/_apis/git/commits/25c12518372b4a18f1b9d85f83ae01097604dc88"
                }
            ]
            </example>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ChangeList">
            <summary>
            The Change list (changeset/commit/shelveset) for this point in history
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ItemChangeType">
            <summary>
            The change made to the item from this change list (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryEntry.ServerItem">
            <summary>
            The path of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryQueryResults.Results">
            <summary>
            The history entries (results) from this query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.HistoryQueryResults.MoreResultsAvailable">
            <summary>
            True if there are more results available to fetch (we're returning the max # of items requested)
            A more RESTy solution would be to include a Link header
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions">
            <summary>
            Optional details to include when returning an item model
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.RecursionLevel">
            <summary>
            Specifies whether to include children (OneLevel), all descendants (Full) or None for folder items
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.IncludeVersionDescription">
            <summary>
            If true, include a detailed version description
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.ItemDetailsOptions.ScanBytesForEncoding">
            <summary>
            The maximum number of bytes to scan when attempting to detect file encoding.
            This is an optional implementation detail for IncludeContentMetadata, and not part of the Data Contract.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsChange.PendingVersion">
            <summary>
            Version at which a (shelved) change was pended against
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsHistoryEntry.FileId">
            <summary>
            The file id of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.TfsHistoryEntry.Encoding">
            <summary>
            The encoding of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.VersionControlRecursionType.None">
            <summary>
            Only return the specified item.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.VersionControlRecursionType.OneLevel">
            <summary>
            Return the specified item and its direct children.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.VersionControlRecursionType.OneLevelPlusNestedEmptyFolders">
            <summary>
            Return the specified item and its direct children,
            as well as recursive chains of nested child folders that only contain a single folder.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.VersionControlRecursionType.Full">
            <summary>
            Return specified item and all descendants
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTemplate.Name">
            <summary>
            Name of the Template
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitTemplate.Type">
            <summary>
            Type of the Template
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch.Parent">
            <summary>
            Path of the branch's parent.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch.RelatedBranches">
            <summary>
            List of paths of the related branches.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch.Mappings">
            <summary>
            List of branch mappings.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranch.Children">
            <summary>
            List of children for the branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchMapping.ServerItem">
            <summary>
            Server item for the branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchMapping.Type">
            <summary>
            Type of the branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchMapping.Depth">
            <summary>
            Depth of the branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef.Description">
            <summary>
            Description of the branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef.Owner">
            <summary>
            Alias or display name of user
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef.CreatedDate">
            <summary>
            Creation date of the branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef.IsDeleted">
            <summary>
            Is the branch deleted?
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef.Url">
            <summary>
            URL to retrieve the item.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcBranchRef.Links">
            <summary>
            A collection of REST reference links.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShallowBranchRef.Path">
            <summary>
            Path for the branch.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange.PendingVersion">
            <summary>
            Version at which a (shelved) change was pended against
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChange.MergeSources">
            <summary>
            List of merge sources in case of rename or branch creation. 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset.Changes">
            <summary>
            List of associated changes.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset.HasMoreChanges">
            <summary>
            Are more changes available.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset.CheckinNotes">
            <summary>
            Checkin Notes for the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset.PolicyOverride">
            <summary>
            Policy Override for the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset.WorkItems">
            <summary>
            List of work items associated with the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset.CollectionId">
            <summary>
            Collection Id of the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset.AccountId">
            <summary>
            Account Id of the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangeset.TeamProjectIds">
            <summary>
            Team Project Ids for the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef.ChangesetId">
            <summary>
            Id of the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef.Url">
            <summary>
            URL to retrieve the item.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef.Author">
            <summary>
            Alias or display name of user
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef.CheckedInBy">
            <summary>
            Alias or display name of user
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef.CreatedDate">
            <summary>
            Creation date of the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef.Comment">
            <summary>
            Comment for the changeset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef.CommentTruncated">
            <summary>
            Was the Comment result truncated?
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetRef.Links">
            <summary>
            A collection of REST reference links.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria">
            <summary>
            Criteria used in a search for change lists
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ItemPath">
            <summary>
            Path of item to search under
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.Mappings">
            <summary>
            The items to search under. This is used when using a workspace as a query filter.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.versionDescriptor">
            <summary> 
            Version of the item to search
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.Author">
            <summary>
            Alias or display name of user who made the changes
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FromDate">
            <summary>
            If provided, only include changesets created after this date (string)
            Think of a better name for this. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ToDate">
            <summary>
            If provided, only include changesets created before this date (string)
            Think of a better name for this. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FromId">
            <summary>
            If provided, only include changesets after this changesetID
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.ToId">
            <summary>
            If provided, a version descriptor for the latest change list to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.FollowRenames">
            <summary>
            Whether or not to follow renames for the given item being queried
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetSearchCriteria.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData.changesetIds">
            <summary>
            List of changeset Ids.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData.commentLength">
            <summary>
            Length of the comment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcChangesetsRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHistoryEntry.FileId">
            <summary>
            The file id of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcHistoryEntry.Encoding">
            <summary>
            The encoding of the item at this point in history (only relevant for File history, not folders)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem.Size">
            <summary>
            The size of the file, if applicable. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem.HashValue">
            <summary>
            MD5 hash as a base 64 string, applies to files only. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItem.Encoding">
            <summary>
            File encoding from database, -1 represents binary.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemPreviousHash.PreviousHashValue">
            <summary>
            MD5 hash as a base 64 string, applies to files only. 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemDescriptor">
            <summary>
            Item path and Version descriptor properties 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData.IncludeContentMetadata">
            <summary>
            If true, include metadata about the file type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcItemRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcLabelRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.ServerItem">
            <summary>
            The server item of the merge source
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.VersionFrom">
            <summary>
            Start of the version range
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.VersionTo">
            <summary>
            End of the version range
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcMergeSource.IsRename">
            <summary>
            Indicates if this a rename source. If false, it is a merge source.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelveset">
            <summary>
            This is the deep shelveset class
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRef">
            <summary>
            This is the shallow shelveset class
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.Name">
            <summary>
            Shelveset's name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.Owner">
            <summary>
            Owner's ID. Could be a name or a guid.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.MaxCommentLength">
            <summary>
            Max length of comment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.MaxChangeCount">
            <summary>
            Max number of changes to include
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeDetails">
            <summary>
            Whether to include policyOverride and notes
            Only applies when requesting a single deep shelveset
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeWorkItems">
            <summary>
            Whether to include workItems
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcShelvesetRequestData.IncludeLinks">
            <summary>
            Whether to include the _links field on the shallow references.
            Does not apply when requesting a single deep shelveset object. Links will always be included in the deep shelveset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics.ChangesetId">
            <summary>
            Id of the last changeset the stats are based on.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.TfvcStatistics.FileCountTotal">
            <summary>
            Count of files at the requested scope.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIdeType">
            <summary>
            Enumeration that represents the types of IDEs supported.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde">
            <summary>
            Represents a Supported IDE entity.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.IdeType">
            <summary>
            The type of the IDE.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.Name">
            <summary>
            The name of the IDE.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.DownloadUrl">
            <summary>
            The download URL for the IDE.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.ProtocolHandlerUrl">
            <summary>
            The URL to open the protocol handler for the IDE.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SupportedIde.SupportedPlatforms">
            <summary>
            A list of SupportedPlatforms.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext">
            <summary>
            Context used while sharing a pull request.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext.Receivers">
            <summary>
            Identities of users who will receive a share notification.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.ShareNotificationContext.Message">
            <summary>
            Optional user note or message.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType.None">
            <summary>
            Only return the specified item.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType.OneLevel">
            <summary>
            Return the specified item and its direct children.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType.OneLevelPlusNestedEmptyFolders">
            <summary>
            Return the specified item and its direct children,
            as well as recursive chains of nested child folders that only contain a single folder.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.VersionControlRecursionType.Full">
            <summary>
            Return specified item and all descendants
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLfsLock.Id">
            <remarks>
            This must be a string type in order for the LFS client to parse the JSON
            correctly. (It requires quotation marks around the value.)
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLfsLockCollection.Locks">
            <summary>
            When returning all locks matching a criteria, we return an array of locks.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLfsLockCollection.Ours">
            <summary>
            When we verify locks, we split the locks into "ours" and "theirs"
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLfsLockCollection.Theirs">
            <summary>
            When we verify locks, we split the locks into "ours" and "theirs"
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitLfsLockCollection.NextCursor">
            <remarks>
            This must be a string type in order for the LFS client to parse the JSON
            correctly. (It requires quotation marks around the value.)
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequest">
            <summary>
            Request to sync data between two forks.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequest.OperationId">
            <summary>
            Unique identifier for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequest.Source">
            <summary>
            Fully-qualified identifier for the source repository.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequest.SourceToTargetRefs">
            <summary>
            If supplied, the set of ref mappings to use when performing a "sync" or create.
            If missing, all refs will be synchronized.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequest.Links">
            <summary>
            Collection of related links
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters">
            <summary>
            Parameters for creating a fork request
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters.Source">
            <summary>
            Fully-qualified identifier for the source repository.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkSyncRequestParameters.SourceToTargetRefs">
            <summary>
            If supplied, the set of ref mappings to use when performing a "sync" or create.
            If missing, all refs will be synchronized.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SourceToTargetRef.SourceRef">
            <summary>
            The source ref to copy. For example, refs/heads/master.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.SourceToTargetRef.TargetRef">
            <summary>
            The target ref to update. For example, refs/heads/master.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GlobalGitRepositoryKey">
            <summary>
            Globally unique key for a repository.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GlobalGitRepositoryKey.CollectionId">
            <summary>
            Team Project Collection ID of the collection for the repository.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GlobalGitRepositoryKey.ProjectId">
            <summary>
            Team Project ID of the project for the repository.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GlobalGitRepositoryKey.RepositoryId">
            <summary>
            ID of the repository.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkOperationStatusDetail">
            <summary>
            Status information about a requested fork operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkOperationStatusDetail.CurrentStep">
            <summary>
            Index into <see cref="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkOperationStatusDetail.AllSteps"/> for the current step
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkOperationStatusDetail.AllSteps">
            <summary>
            All valid steps for the forking process
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitForkOperationStatusDetail.ErrorMessage">
            <summary>
            Error message if the operation failed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiff">
            <summary>
            Provides properties that describe file differences
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiff.Path">
            <summary>
            Current path of item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiff.OriginalPath">
            <summary>
            Original path of item if different from current path.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiff.LineDiffBlocks">
            <summary>
            The collection of line diff blocks
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlock">
            <summary>
            The class to represent the line diff block
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlock.ChangeType">
            <summary>
            Type of change that was made to the block.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlock.OriginalLineNumberStart">
            <summary>
            Line number where this block starts in original file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlock.OriginalLinesCount">
            <summary>
            Count of lines in this block in original file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlock.ModifiedLineNumberStart">
            <summary>
            Line number where this block starts in modified file.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlock.ModifiedLinesCount">
            <summary>
            Count of lines in this block in modified file.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlockChangeType">
            <summary>
            Type of change for a line diff block
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlockChangeType.None">
            <summary>
            No change - both the blocks are identical
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlockChangeType.Add">
            <summary>
            Lines were added to the block in the modified file
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlockChangeType.Delete">
            <summary>
            Lines were deleted from the block in the original file
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SourceControl.WebApi.LineDiffBlockChangeType.Edit">
            <summary>
            Lines were modified
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffParams">
            <summary>
            Provides parameters that describe inputs for the file diff
            </summary>
            <remarks>
            Note that this type is used as input to the FileDiffs API (GitFileDiffsController)
            And it is different from the existing legacy type: 
            Microsoft.TeamFoundation.SourceControl.WebApi.Legacy.FileDiffParameters
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffParams.Path">
            <summary>
            Current path of the file
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffParams.OriginalPath">
            <summary>
            Original path of the file
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffsCriteria">
            <summary>
            Provides properties that describe inputs for the file diffs
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffsCriteria.BaseVersionCommit">
            <summary>
            Commit ID of the base version
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffsCriteria.TargetVersionCommit">
            <summary>
            Commit ID of the target version
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.FileDiffsCriteria.FileDiffParams">
            <summary>
            List of parameters for each of the files for which we need to get the file diff
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeOperationStatusDetail">
            <summary>
            Status information about a requested merge operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeOperationStatusDetail.MergeCommitId">
            <summary>
            The commitId of the resultant merge commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeOperationStatusDetail.FailureMessage">
            <summary>
            Error message if the operation failed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMerge.OperationId">
            <summary>
            Unique identifier for the merge operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMerge.Status">
            <summary>
            Status of the merge operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMerge.DetailedStatus">
            <summary>
            Detailed status of the merge operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMerge.Links">
            <summary>
            Reference links.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeParameters">
            <summary>
            Parameters required for performing git merge.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeParameters.Parents">
            <summary>
            An enumeration of the parent commit IDs for the merge  commit.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.SourceControl.WebApi.GitMergeParameters.Comment">
            <summary>
            Comment or message of the commit.
            </summary>
        </member>
    </members>
</doc>
