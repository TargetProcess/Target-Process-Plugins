<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.Services.WebApi</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.Services.Extension.ExtensionStateFlags">
            <summary>
            States of an extension
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Extension.ExtensionStateFlags.None">
            <summary>
            No flags set
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Extension.ExtensionStateFlags.Disabled">
            <summary>
            Extension is disabled
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Extension.ExtensionStateFlags.BuiltIn">
            <summary>
            Extension is a built in
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Extension.ExtensionStateFlags.MultiVersion">
            <summary>
            Extension has multiple versions
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Extension.ExtensionStateFlags.UnInstalled">
            <summary>
            Extension is not installed.  This is for builtin extensions only and can not otherwise be set.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Extension.ExtensionStateFlags.VersionCheckError">
            <summary>
            Error performing version check
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Extension.ExtensionStateFlags.Trusted">
            <summary>
            Trusted extensions are ones that are given special capabilities. These
            tend to come from Microsoft and can't be published by the general
            public. 
            
            Note: BuiltIn extensions are always trusted.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Extension.InstalledExtension">
            <summary>
            Represents a VSO extension along with its installation state
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Extension.InstalledExtension.#ctor">
            <summary>
            Create an installed extension
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Extension.InstalledExtension.#ctor(Microsoft.VisualStudio.Services.Contributions.Extension,Microsoft.VisualStudio.Services.Extension.InstalledExtensionState)">
            <summary>
            Create an installed extension given a particular extension and install state
            </summary>
            <param name="extension"></param>
            <param name="installState"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Extension.InstalledExtension.InstallState">
            <summary>
            Information about this particular installation of the extension
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Extension.InstalledExtensionState">
            <summary>
            The state of an installed extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Extension.InstalledExtensionState.Flags">
            <summary>
            States of an installed extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Extension.InstalledExtensionState.LastUpdated">
            <summary>
            The time at which this installation was last updated
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Extension.WebApi.ExtensionVersionHttpClient.GetSupportedVersionsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.AcsRetryHelper">
            <summary>
            A helper class that that implements a retry strategy for ACS requests.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AcsRetryHelper.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the AcsRetryHelper class.
            </summary>
            <param name="maxRetries"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AcsRetryHelper.CanRetryOnException(System.Exception)">
            <summary>
            This method determines if request to ACS should be retried. 
            See http://msdn.microsoft.com/en-us/library/jj878112.aspx for more details.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ResourceAreaAttribute">
            <summary>
            This attribute provides the location service area identifier in order to target the location service
            instance which has the service definitions for the HTTP resources in the specified service area.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ResourceAreaAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="areaId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ResourceAreaAttribute.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="areaId"></param>
            <param name="fallbackAreaId"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute">
            <summary>
            Use in conjunction with JsonCompatConverter.  This attribute describes a model property or field change at a particular API version.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            This attribute describes a model property or field change at a particular API version.
            </summary>
            <param name="oldName">Old name of the serialized property.</param>
            <param name="majorApiVersion">The major version component of the max version of the api to support the old property name.</param>
            <param name="minorApiVersion">The minor version component of the max version of the api to support the old property name.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute.OldName">
            <summary>
            Old name of the serialized property.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute.MaxApiVersion">
            <summary>
            The max version of the api to support the old property name.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ConnectOptions">
            <summary>
                Enumeration of the options that can be passed in on Connect.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ConnectOptions.None">
            <summary>
            Retrieve no optional data.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ConnectOptions.IncludeServices">
            <summary>
            Includes information about AccessMappings and ServiceDefinitions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.EntitlementCode">
            <summary>
            Entilement id assigned to Entitlement in Benefits Database.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.EntitlementName">
            <summary>
            Entitlement Name e.g. Downloads, Chat.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.EntitlementType">
            <summary>
            Type of Entitlement e.g. Downloads, Chat.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.IsEntitlementAvailable">
            <summary>
            Entitlement availability
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.IsActivated">
            <summary>
            Entitlement activation status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.SubscriptionExpirationDate">
            <summary>
            Subscription Expiration Date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.SubscriptionId">
            <summary>
            Subscription id which identifies the subscription itself. This is the Benefit Detail Guid from BMS.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.SubscriptionLevelCode">
            <summary>
            Identifier of the subscription or benefit level.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.SubscriptionLevelName">
            <summary>
            Name of subscription level.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.SubscriptionStatus">
            <summary>
            Subscription Status Code (ACT, PND, INA ...).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.MsdnEntitlement.SubscriptionChannel">
            <summary>
            Write MSDN Channel into CRCT (Retail,MPN,VL,BizSpark,DreamSpark,MCT,FTE,Technet,WebsiteSpark,Other)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.AddPatchOperation`1">
            <summary>
            Represents the JSON Patch Add operation.
            </summary>
            <typeparam name="TModel">The model the patch operation applies to.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.AddPatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation and validates the operation.
            </summary>
            <param name="operation">The simple json patch operation model.</param>
            <returns>A valid and strongly typed PatchOperation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.AddPatchOperation`1.Apply(`0)">
            <summary>
            Applies the Add patch operation to the target
            </summary>
            <param name="target">The object to apply the operation to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1">
            <summary>
            The interface for the Patch Operation.
            </summary>
            <typeparam name="TModel">The type this patch document applies to.</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.Operation">
            <summary>
            The operation to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.Path">
            <summary>
            The JSON path to apply on the model for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.From">
            <summary>
            The path to copy/move from, applies only to the Copy/Move operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.Value">
            <summary>
            The value to set with this patch operation.  Only applies to
            Add/Replace/Test.
            </summary>
            <returns>The strongly (best effort) typed representation of the value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1.Apply(`0)">
            <summary>
            Applies the operation to the target object.
            </summary>
            <param name="target">The object to have the operation applied to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperationApplied">
            <summary>
            Event for when a patch operation has been applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventHandler">
            <summary>
            Event handler for patch operation applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperationApplying">
            <summary>
            Event for when a patch operation is about to be applied
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventHandler">
            <summary>
            Event handler for patch operation applying.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument">
            <summary>
            The JSON model for JSON Patch Operations
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation">
            <summary>
            The JSON model for a JSON Patch operation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation.Operation">
            <summary>
            The patch operation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation.Path">
            <summary>
            The path for the operation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation.From">
            <summary>
            The path to copy from for the Move/Copy operation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation.Value">
            <summary>
            The value for the operation.  
            This is either a primitive or a JToken.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventArgs">
            <summary>
            Event args for the applied patch operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventArgs.Path">
            <summary>
            The current path.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventArgs.Operation">
            <summary>
            The operation being applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventArgs">
            <summary>
            Event args for the applying patch operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventArgs.Path">
            <summary>
            The current path.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventArgs.Operation">
            <summary>
            The operation about to be applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.RemovePatchOperation`1">
            <summary>
            Represents the JSON Patch Remove operation.
            </summary>
            <typeparam name="TModel">The model the patch operation applies to.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.RemovePatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation and validates the operation.
            </summary>
            <param name="operation">The simple json patch operation model.</param>
            <returns>A valid and strongly typed PatchOperation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.RemovePatchOperation`1.Apply(`0)">
            <summary>
            Applies the Remove patch operation to the target
            </summary>
            <param name="target">The object to apply the operation to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.ReplacePatchOperation`1">
            <summary>
            Represents the JSON Patch Replace operation.
            </summary>
            <typeparam name="TModel">The model the patch operation applies to.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.ReplacePatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation and validates the operation.
            </summary>
            <param name="operation">The simple json patch operation model.</param>
            <returns>A valid and strongly typed PatchOperation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.ReplacePatchOperation`1.Apply(`0)">
            <summary>
            Applies the Replace patch operation to the target
            </summary>
            <param name="target">The object to apply the operation to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperation`1">
            <summary>
            Represents the JSON Patch Test operation.
            </summary>
            <typeparam name="TModel">The model the patch operation applies to.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation and validates the operation.
            </summary>
            <param name="operation">The simple json patch operation model.</param>
            <returns>A valid and strongly typed PatchOperation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperation`1.Apply(`0)">
            <summary>
            Applies the Test patch operation to the target
            </summary>
            <param name="target">The object to apply the operation to.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchDocument`1">
            <summary>
            The interface for the Patch Document
            </summary>
            <typeparam name="TModel">The type this patch document applies to.</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchDocument`1.Operations">
            <summary>
            The patch operations.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.IPatchDocument`1.Apply(`0)">
            <summary>
            Applies the operations to the target object.
            </summary>
            <param name="target">The object to apply the operations to.</param>
        </member>
        <member name="E:Microsoft.VisualStudio.Services.WebApi.Patch.PatchDocument`1.PatchOperationApplying">
            <summary>
            Event fired before applying a patch operation.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Services.WebApi.Patch.PatchDocument`1.PatchOperationApplied">
            <summary>
            Event fired after a patch operation has been applied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1">
            <summary>
            PatchOperation represents a single JSON Patch operation.
            </summary>
            <typeparam name="TModel">The model to validate and apply the patch operation against.</typeparam>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.EndOfIndex">
            <summary>
            The JSON Patch representation of insertion at the end of a list.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.PathSeparator">
            <summary>
            The JSON Patch path separator.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.serializer">
            <summary>
            The serializer that handles the object dictionary case.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.evaluatedPath">
            <summary>
            The path split into a string IEnumerable.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.#cctor">
            <summary>
            Static constructor to create the serializer once with the 
            ObjectDictionaryConverter which converts JObject to dictionary
            when the underlying type of the target is an object.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.PatchOperationApplying">
            <summary>
            Event fired before applying a patch operation.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.PatchOperationApplied">
            <summary>
            Event fired after a patch operation has been applied.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Operation">
            <summary>
            The operation to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Path">
            <summary>
            The JSON path to apply on the model for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.EvaluatedPath">
            <summary>
            The path to apply that has been converted to an IEnumerable.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.From">
            <summary>
            The path to copy/move from, applies only to the Copy/Move operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Value">
            <summary>
            The value to set with this patch operation.  Only applies to
            Add/Replace/Test.
            </summary>
            <returns>The strongly (best effort) typed representation of the value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Apply(`0)">
            <summary>
            Applies the operation to the target object.
            </summary>
            <param name="target">The object to have the operation applied to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.CreateFromJson(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Creates the strongly typed PatchOperation from the json patch operation provided.
            </summary>
            <param name="operation">The json patch operation.</param>
            <returns>The strongly typed patch operation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Evaluate(System.Object,System.Action{System.Type,System.Object,System.String})">
            <summary>
            Evaluates the path on the target and applies an action to the result.
            </summary>
            <param name="target">The target object to apply the operation to.</param>
            <param name="actionToApply">The action to apply to the result of the evaluation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.ValidatePath(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Validates the path for the operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.ValidateType(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Validates the type for the operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.ValidateAndGetType(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Validates and returns the type for the operation.
            </summary>
            <param name="operation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.ValidateAndGetValue(Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation)">
            <summary>
            Validates the path evaluates to a property on the model, and
            returns the strongly typed value for the model.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.GetType(System.Type,System.String)">
            <summary>
            Gets The type of the field the path maps to.
            </summary>
            <param name="type">The type of the parent object.</param>
            <param name="path">The path to evaluate.</param>
            <returns>The type of the field that path maps to.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.GetType(System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets The type of the field the path maps to.
            </summary>
            <param name="type">The type of the parent object.</param>
            <param name="path">The path enumeration to evaluate.</param>
            <returns>The type of the field that path maps to.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.DeserializeValue(System.Type,System.Object)">
            <summary>
            Deserializes the json value.  
            </summary>
            <param name="jsonValue">The json formatted value.</param>
            <returns>The strongly typed (best effort) value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.SplitPath(System.String)">
            <summary>
            Converts the string path into the evaluatable path.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1.Evaluate(System.Object,System.Collections.Generic.IEnumerable{System.String},System.Action{System.Type,System.Object,System.String})">
            <summary>
            Evaluates the path on the target and applies an action to the result.
            </summary>
            <param name="target">The target object to apply the operation to.</param>
            <param name="path">The path to evaluate.</param>
            <param name="actionToApply">The action to apply to the result of the evaluation.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Count" -->
        <!-- Badly formed XML comment ignored for member "P:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Item(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Add(System.String,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Clear" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.ContainsKey(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.ContainsValue(System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.Remove(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.TryGetValue(System.String,System.Object@)" -->
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.PropertiesCollectionItemConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.PropertiesCollectionItemConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PropertiesCollection.PropertiesCollectionItemConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ReferenceLink">
            <summary>
            The class to represent a REST reference link.
            
            Example:
            {
              self: {
                href: "http://localhost:8080/tfs/DefaultCollection/_apis/wit/workItems/1"
              }
            }
            
            RFC: http://tools.ietf.org/html/draft-kelly-json-hal-06
            
            The RFC is not fully implemented, additional properties are allowed on the
            reference link but as of yet we don't have a need for them.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks">
            <summary>
            The class to represent a collection of REST reference links.
            
            Example:
            {
              self: {
                href: "http://localhost:8080/tfs/DefaultCollection/_apis/wit/workItems/1"
              }
            }
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.referenceLinks">
            <summary>
            The internal representation of the reference links.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.AddLink(System.String,System.String)">
            <summary>
            Helper method to easily add a reference link to the dictionary.
            If the specified name has already been added, the subsequent calls
            to AddLink will create a list of reference links for the name.
            </summary>
            <param name="name">The name of the reference link.</param>
            <param name="href">The href the reference link refers to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.Clone">
            <summary>
            Creates a deep copy of the ReferenceLinks.
            </summary>
            <returns>A deep copy of the ReferenceLinks</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.Links">
            <summary>
            The readonly view of the links.  Because Reference links are readonly,
            we only want to expose them as read only.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.ReferenceLinksConverter">
            <summary>
            The json converter to represent the reference links as a dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ReferenceLinks.ReferenceLinksConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Because ReferenceLinks is a dictionary of either a single 
            ReferenceLink or an array of ReferenceLinks, we need custom
            deserialization to correctly rebuild the dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.PropertyCacheServiceNotAvailableException">
            <summary>
            Thrown when cache service is not available
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ServiceOperationNotAvailableException">
            <summary>
            Thrown when service operation is not available
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssResourceNotFoundException">
            <summary>
            Exception thrown when the requested API resource location was not found on the server
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssResourceVersionException">
            <summary>
            Base exception class for api resource version exceptions
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssVersionNotSupportedException">
            <summary>
            Exception thrown when the requested version of a resource is not supported on the server
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssVersionNotSpecifiedException">
            <summary>
            Exception thrown when the api-version is not supplied for a particular type of request
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssInvalidPreviewVersionException">
            <summary>
            Exception thrown when the requested version of a resource is a "preview" api, but -preview is not supplied in the request's api-version
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssRequestContentTypeNotSupportedException">
            <summary>
            Exception thrown when a request body's contentType is not supported by a given controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.PatchAsync(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent)">
            <summary>
            Performs a PATCH request to uri passing in the content.
            </summary>
            <param name="client">HttpClient being extended</param>
            <param name="uri">The target uri for the PATCH call</param>
            <param name="content">The message content</param>
            <returns>A Task which executes the PATCH call with a HttpResponseMessage result</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.PatchAsync(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Performs a PATCH request to uri passing in the content.
            </summary>
            <param name="client">HttpClient being extended</param>
            <param name="uri">The target uri for the PATCH call</param>
            <param name="content">The message content</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
            <returns>A Task which executes the PATCH call with a HttpResponseMessage result</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Performs a DELETE request to uri passing in the content.
            </summary>
            <param name="client"></param>
            <param name="uri"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.DownloadFileFromTfsAsync(System.Net.Http.HttpClient,System.Uri,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Downloads the content of a file and copies it to the specified stream if the request succeeds. 
            </summary>
            <param name="client">Http client.</param>
            <param name="stream">Stream to write file content to.</param>
            <param name="requestUri">Download uri.</param>
            <returns>Http response message.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions.DownloadStream">
            <summary>
            Wraps the download stream to provide hash calculation and content decompression.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportHttpClient.CancelDataImportJobAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="importId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportHttpClient.GetDataImportAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="importId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportHttpClient.QueueDataImportJobAsync(Microsoft.VisualStudio.Services.DataImport.DataImportRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="import"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HttpRetryHelper.Invoke(System.Action,System.Int32@)">
            <summary>
            
            </summary>
            <param name="action"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.JsonCompatConverter`1">
            <summary>
            Json Converter that can handle backwards and forwards compat for property and field name changes.  Use converter in conjunction with CompatPropertyAttribute, which describes the changes.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.EventType">
            <summary>
            This is the id of the type. 
            Constants that will be used by subscribers to identify/filter events being published on a topic.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.Publisher">
            <summary>
            This is the service that published this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.Resource">
            <summary>
            The resource object that carries specific information about the event. The object must have
            the ServiceEventObject applied for serialization/deserialization to work.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.ResourceVersion">
            <summary>
            This is the version of the resource. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ServiceEvent.ResourceContainers">
            <summary>
            This dictionary carries the context descriptors along with their ids.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Publisher.Name">
            <summary>
            Name of the publishing service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.Publisher.ServiceOwnerId">
            <summary>
            Service Owner Guid
            Eg. Tfs : 00025394-6065-48CA-87D9-7F5672854EF7
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResult(System.Threading.Tasks.Task)">
            <summary>
            Blocks until the task has completed, throwing the remote exception if one was raised.
            </summary>
            <param name="task">The task to await</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResult``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Blocks until the task has completed, returning the result or throwing the remote exception if one was raised.
            </summary>
            <typeparam name="T">The type for the result</typeparam>
            <param name="task">The task to await</param>
            <returns>The result of the task</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResult(System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage})">
            <summary>
            Blocks until the task has completed, returning the result or throwing the remote exception if one was raised.
            </summary>
            <param name="task">The task to await</param>
            <returns>The result of the task</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheExpressionInvalidException">
            <summary>
            Exception thrown when parsing a mustache template that indicates it is an invalid expression
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelper">
            <summary>
            Delegate for methods called during evaluation for registered helpers
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext">
            <summary>
            Context object used during the evaulation of a mustache template expression
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.ReplacementObject">
            <summary>
            The replacement object used to evaluate expressions in this context
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.ParentContext">
            <summary>
            The context object for the parent expression
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.CurrentIndex">
            <summary>
            The current index of the parent expression's array (only applicable when the parent context is an array)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext.CurrentKey">
            <summary>
            The current key of the parent expression's object (only applicable when the parent context is an each/object expression)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheExpression">
            <summary>
            Base class for mustache template expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.IsContextBased">
            <summary>
            Does this type of expression accept a context/replacement object during evaluation
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Evaluate(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Method called during the evaluation of an expression
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Evaluate(System.Lazy{Newtonsoft.Json.Linq.JToken})">
            <summary>
            Evaluate the current expression using the given replacement object as context.
            </summary>
            <param name="replacementObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Evaluate(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Evaluate the current expression using the given replacement object as context.
            </summary>
            <param name="replacementObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheExpression.Parse(System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelper},System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelper})">
            <summary>
            Parses a mustache-template expression
            </summary>
            <param name="template">mustache-style template</param>
            <param name="helpers">mustache template helper functions</param>
            <param name="blockHelpers">mustache block template helper functions</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTextExpression">
            <summary>
            A text-only mustache expression (no {{ ... }} blocks)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTextExpression.Text">
            <summary>
            The raw text for this expression
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTextExpression.Evaluate(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Get the text defined in this expression
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression">
            <summary>
            A mustache expression which may contain child expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression.Helpers">
            <summary>
            Registered helper methods for single (non-block) expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression.BlockHelpers">
            <summary>
            Registered helper methods for Block expressions
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression">
            <summary>
            A mustache expression which may contain child expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.ParentExpression">
            <summary>
            The parent expression which contains this expression
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.ChildExpressions">
            <summary>
            Expressions contained within this expression
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.Evaluate(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Get the resolved value from this and all child expressions
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression.EvaluateChildExpressions(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Evaluate all child expressions with the given context
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression">
            <summary>
            A templated mustache expression ({{ ... }}). May be a block or simple expression.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.RootExpression">
            <summary>
            The root expression
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.Expression">
            <summary>
            The selector/expression context for this block
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.HelperName">
            <summary>
            The name of the helper method to invoke (if any)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.Encode">
            <summary>
            True to html encode the result
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsBlockExpression">
            <summary>
            Is the expression a block expression ({{#...}})
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsNegativeExpression">
            <summary>
            Is the expression a negative expression ({{^...}} or {{else}})
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsElseBlock">
            <summary>
            Is this an else block
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsComment">
            <summary>
            Is this a comment exception ({{!-- ... --}} or {{! ... }})
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsContextBased">
            <summary>
            Templated expressions accept replacement context
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.GetCurrentToken(System.String,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Get the current token/replacement object for the given selector and context
            </summary>
            <param name="selector"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.IsTokenTruthy(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determine whether or not the token evaluates to a "truthy" value (non-null, non-empty string, non-zero, etc.)
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression.Evaluate(Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            Evaluate the value of this expression using the given context
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers">
            <summary>
            Static helper class for handlebar default/builtin template helpers
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockWithHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#with ...}} block helper sets context for the child expressions
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockIfHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#if ...}} block helper evaluates child expressions ONLY if the selected value is true
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockUnlessHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#unless ...}} block helper evaluates child expressions ONLY if the selected value is false
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockEachHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#each ...}} block helper evaluates child expressions once for every item in an array or object
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers.HandlebarBlockLookupHelper(Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression,Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext)">
            <summary>
            {{#lookup ../foo @index}} block helper allows for indexing into an object by @index or @key
            </summary>
            <param name="expression"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser">
            <summary>
            Utility class for working with mustache-style templates
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.Helpers">
            <summary>
            Template helpers to use when evaluating expressions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.BlockHelpers">
            <summary>
            Template block helpers to use when evaluating expressions
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.#ctor(System.Boolean)">
            <summary>
            Create a helper for parsing mustache templates
            </summary>
            <param name="useDefaultHandlebarHelpers"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.ReplaceValues(System.String,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Repace values in a mustache-style template with values from the given property bag.
            </summary>
            <param name="template">mustache-style template</param>
            <param name="properties">properties to use as replacements</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser.ReplaceValues(System.String,System.Lazy{Newtonsoft.Json.Linq.JToken})">
            <summary>
            Repace values in a mustache-style template with values from the given property bag.
            </summary>
            <param name="template">mustache-style template</param>
            <param name="replacementContext">properties to use as replacements</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation">
            <summary>
            Information about the location of a REST API resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.Id">
            <summary>
            Unique Identifier for this location
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.Area">
            <summary>
            Area name for this resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ResourceName">
            <summary>
            Resource name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.RouteTemplate">
            <summary>
            This location's route template (templated relative path)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.RouteName">
            <summary>
            The name of the route (not serialized to the client)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ResourceVersion">
            <summary>
            The current resource version supported by this resource location
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.MinVersion">
            <summary>
            Minimum api version that this resource supports
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.MinVersionString">
            <summary>
            Minimum api version that this resource supports
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.MaxVersion">
            <summary>
            Maximum api version that this resource supports (current server version for this resource)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.MaxVersionString">
            <summary>
            Maximum api version that this resource supports (current server version for this resource)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ReleasedVersion">
            <summary>
            The latest version of this resource location that is in "Release" (non-preview) mode
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ReleasedVersionString">
            <summary>
            The latest version of this resource location that is in "Release" (non-preview) mode
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.ToServiceDefinition">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation.FromServiceDefinition(Microsoft.VisualStudio.Services.Location.ServiceDefinition)">
            <summary>
            
            </summary>
            <param name="definition"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection">
            <summary>
            Container for API resource locations
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.AddResourceLocation(Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation)">
            <summary>
            Add a new API resource location
            </summary>
            <param name="location">API resource location to add</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.AddResourceLocations(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation})">
            <summary>
            Add new API resource locations
            </summary>
            <param name="locations">API resource locations to add</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.TryGetLocationById(System.Guid)">
            <summary>
            Get an API resource location by location id. Returns null if not found.
            </summary>
            <param name="locationId">Id of the registered resource location</param>
            <returns>ApiResourceLocation or null if not found</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.GetLocationById(System.Guid)">
            <summary>
            Get an API resource location by location id. Throws if not found.
            </summary>
            <param name="locationId">Id of the registered resource location</param>
            <returns>ApiResourceLocation or null if not found</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.GetAllLocations">
            <summary>
            Get all API resource locations
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.GetAreaLocations(System.String)">
            <summary>
            Get all API resource locations under a given area
            </summary>
            <param name="area">Resource area name</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection.GetResourceLocations(System.String,System.String)">
            <summary>
            Get all API resource locations for a given resource.
            </summary>
            <remarks>Note: There are multiple locations for a given resource when multiple routes are registered for that resource</remarks>
            <param name="area">Resource area name</param>
            <param name="resourceName">Resource name</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion">
            <summary>
            Represents version information for a REST Api resource
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.#ctor(System.Double,System.Int32)">
            <summary>
            Construct a new API Version info
            </summary>
            <param name="apiVersion">Public API version</param>
            <param name="isPreview">Is the API version in preview</param>
            <param name="resourceVersion">Resource version</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.#ctor">
            <summary>
            Construct a new API resource Version
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.#ctor(System.Version,System.Int32)">
            <summary>
            Construct a new API Version info
            </summary>
            <param name="apiVersion">Public API version</param>
            <param name="isPreview">Is the API version in preview</param>
            <param name="resourceVersion">Resource version</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.#ctor(System.String)">
            <summary>
            Construct a new API Version info from the given version string
            </summary>
            <param name="apiResourceVersionString">Version string in the form: 
            {ApiMajor}.{ApiMinor}[-{stage}[.{resourceVersion}]]
            
            For example: 1.0 or 2.0-preview or 2.0-preview.3</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.ApiVersion">
            <summary>
            Public API version. This is the version that the public sees and is used for a large
            group of services (e.g. the TFS 1.0 API)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.ApiVersionString">
            <summary>
            String representation of the Public API version. This is the version that the public sees and is used 
            for a large group of services (e.g. the TFS 1.0 API)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.ResourceVersion">
            <summary>
            Internal resource version. This is defined per-resource and is used to support
            build-to-build compatibility of API changes within a given (in-preview) public api version.
            For example, within the TFS 1.0 API release cycle, while it is still in preview, a resource's
            data structure may be changed. This resource can be versioned such that older clients will
            still work (requests will be sent to the older version) and new/upgraded clients will
            talk to the new version of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.IsPreview">
            <summary>
            Is the public API version in preview
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion.ToString">
            <summary>
            Returns the version string in the form:
            {ApiMajor}.{ApiMinor}[-{stage}[.{resourceVersion}]]
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions">
            <summary>
            Extension methods for getting/setting API resource version information from requests and to responses
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions.AddApiResourceVersionValues(System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue},Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion)">
            <summary>
            Generate version key/value pairs to use in the header, replacing any existing api-version value.
            </summary>
            <param name="headerValues">Header values to populate</param>
            <param name="version">Version to supply in the header</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions.AddApiResourceVersionValues(System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue},Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Boolean)">
            <summary>
            Generate version key/value pairs to use in the header
            </summary>
            <param name="headerValues">Header values to populate</param>
            <param name="version">Version to supply in the header</param>
            <param name="replaceExisting">If true, replace an existing header with the specified version. Otherwise no-op in that case</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions.AddApiResourceVersionValues(System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue},Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Boolean,System.Boolean)">
            <summary>
            Generate version key/value pairs to use in the header
            </summary>
            <param name="headerValues">Header values to populate</param>
            <param name="version">Version to supply in the header</param>
            <param name="replaceExisting">If true, replace an existing header with the specified version. Otherwise no-op in that case</param>
            <param name="useLegacyFormat">If true, use the legacy format of api-version combined with res-version</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssEventId">
            <summary>Define event log id ranges</summary>
            This corresponds with values in Framework\Server\Common\EventLog.cs
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase">
            <summary>
            This class is used as the base class for all the REST client classes.
            It wraps a <c>System.Net.Http.HttpClient</c> and sets up standard defaults.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.BaseAddress">
            <summary>
            The base address.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.LastResponseContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.Client">
            <summary>
            The inner client.
            </summary>
            <remarks>
            Note to implementers: You should not update or expose the inner client
            unless you instantiate your own instance of this class. Getting
            an instance of this class from method such as GetClient&lt;T&gt;
            a cached and shared instance.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.Formatter">
            <summary>
            The media type formatter.
            </summary>
            <remarks>
            Note to implementers: You should not update or expose the media type formatter
            unless you instantiate your own instance of this class. Getting
            an instance of this class from method such as GetClient&lt;T&gt;
            a cached and shared instance.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.TranslatedExceptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken,System.String)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route template</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <param name="mediaType">The mediatype to set in request header.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Collections.Specialized.NameValueCollection,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken,System.String)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route template</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <param name="mediaType">The mediatype to set in request header.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.CreateRequestMessage(System.Net.Http.HttpMethod,Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="location">API resource location</param>
            <param name="routeValues">Values to use to replace parameters in the location's route template</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <param name="mediaType">The mediatype to set in request header.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.CreateRequestMessage(System.Net.Http.HttpMethod,System.Collections.Specialized.NameValueCollection,Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="location">API resource location</param>
            <param name="routeValues">Values to use to replace parameters in the location's route template</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <param name="mediaType">The mediatype to set in request header.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.NegotiateRequestVersionAsync(System.Guid,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Object,System.Threading.CancellationToken)">
            <summary>
            Negotiate the appropriate request version to use for the given api resource location, based on
            the client and server capabilities
            </summary>
            <param name="locationId">Id of the API resource location</param>
            <param name="version">Client version to attempt to use (use the latest VSS API version if unspecified)</param>
            <returns>Max API version supported on the server that is less than or equal to the client version. Returns null if the server does not support this location or this version of the client.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.NegotiateRequestVersion(Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion)">
            <summary>
            Negotiate the appropriate request version to use for the given api resource location, based on
            the client and server capabilities
            </summary>
            <param name="location">Location of the API resource</param>
            <param name="version">Client version to attempt to use (use the latest VSS API version if unspecified)</param>
            <returns>Max API version supported on the server that is less than or equal to the client version. Returns null if the server does not support this location or this version of the client.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.GetResourceLocationAsync(System.Guid,System.Object)">
            <summary>
            Get information about an API resource location by its location id
            </summary>
            <param name="locationId">Id of the API resource location</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.SetResourceLocations(Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection)">
            <summary>
            Sets the ApiResourceLocationCollection for this VssHttpClientBase.
            If unset and needed, the data will be fetched through an OPTIONS request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.GetResourceLocationAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get information about an API resource location by its location id
            </summary>
            <param name="locationId">Id of the API resource location</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.AddDateTimeToQueryParams(System.Collections.Specialized.NameValueCollection,System.String,System.DateTime)">
            <summary>
            Ensures we are using a standard format for sending DateTime value as a query parameter (o: 2015-02-16T16:11:31.1398684Z)
            </summary>
            <param name="queryParams"></param>
            <param name="name"></param>
            <param name="localDateTime">local DateTime value</param>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.c_optionsRelativePath">
            <summary>
            This is only needed for the Options request that we are making right now. Eventually
            we will use the Location Service and the Options request will not be needed and we can remove this.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpUriUtility.ReplaceRouteValues(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Repace values in a templated route with the given route values dictionary.
            </summary>
            <param name="routeTemplate"></param>
            <param name="routeValues"></param>
            <param name="escapeUri">Set true to escape the replaced route Uri string prior to returning it</param>
            <param name="appendUnusedAsQueryParams">Set true to append any unused routeValues as query parameters to the returned route</param>
            <param name="requireExplicitRouteParams">If set to true requires all the route parameters to be explicitly passed in routeParams</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssHttpUriUtility.ToRouteDictionary(System.Object,System.String,System.String)">
            <summary>
            Create a route values dictionary, and add the specified area and resource if they aren't present.
            </summary>
            <param name="routeValues"></param>
            <param name="area">Area name</param>
            <param name="resourceName">Resource name</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssJsonCollectionWrapper`1">
            <summary>
            This class is used to serialized collections as a single
             JSON object on the wire, to avoid serializing JSON arrays
             directly to the client, which can be a security hole
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="bypassSafeArrayWrapping">This should typically be false.  A true value will cause the wrapping to be skipped which is neccesary when creating ObjectContent from arrays on client to prepare a request</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            Because JSON PATCH and JSON both use the JSON format, we explicitly are 
            blocking the default JSON formatter from being able to read the PATCH 
            format.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssJsonPatchMediaTypeFormatter">
            <summary>
            The media type formatter for json-patch.  It deserializes the incoming json
            into a JsonPatchDocument, and then calls PatchDocument.CreateFromJson
            which creates the strongly typed PatchDocument expected by the controller.
            
            This is done to ensure all semantic validation can occur before the controller
            gets the object model. 
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter">
            <summary>
            Legacy (not to mention rudimentary) support for SOAP XML to boostrap
            against older servers that don't speak REST.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.BodyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.ResultName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.SoapAction">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.SoapNamespace">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="readStream"></param>
            <param name="content"></param>
            <param name="formatterLogger"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <param name="writeStream"></param>
            <param name="content"></param>
            <param name="transportContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountExists(System.Object)">
            <summary>
            The following account already exists: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountMarkedForDeletionError(System.Object)">
            <summary>
            Operation not permitted. Account with id {0} has been marked for deletion.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNotFound">
            <summary>
            Account not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNotFoundByIdError(System.Object)">
            <summary>
            No account found for accountId {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNotMarkedForDeletion">
            <summary>
            Hosting account cannot be deleted. Account is not marked EligibleForDeletion.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.MaxNumberOfAccountsExceptions">
            <summary>
            Maximum number of accounts reached.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.MaxNumberOfAccountsPerUserException">
            <summary>
            Maximum number of accounts for user reached.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNotMarkedForDeletionError(System.Object)">
            <summary>
            Operation not permitted. Account with id {0} has not been marked for deletion.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountHostmappingNotFoundById(System.Object)">
            <summary>
            No account host mapping found for hostId {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountServiceLockDownModeException">
            <summary>
            Account Service is currently in lock down mode.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountUserNotFoundException(System.Object,System.Object)">
            <summary>
            User with userId={0} is not a member of accountId={1}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.RegionExists(System.Object)">
            <summary>
            TF1510000 :The following region already exists: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNameReserved(System.Object)">
            <summary>
            The specified account name is reserved: &apos;{0}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountServiceUnavailableException">
            <summary>
            Account Service is temporarily not available.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountNameTemporarilyUnavailable">
            <summary>
            The account URL is not available. Please try again later.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AccountResources.AccountMustBeUnlinkedBeforeDeletion">
            <summary>
            An Account linked to an Azure subscription must be unlinked from the Azure subscription before deletion
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.AppInstallAccessException(System.Object)">
            <summary>
            TF1590000: User {0} does not have permission to install extensions into account.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.AppManifestValidationException(System.Object)">
            <summary>
            TF1590005: Extension Manifest is invalid. Error(s): {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.AppNamespaceExistsException(System.Object)">
            <summary>
            TF1590004: An extension with namespace {0} already exists.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.AppNotFoundForAppIdException(System.Object,System.Object)">
            <summary>
            TF1590002: Extension for id {0} and version {1} not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.AppNotFoundForNamespaceException(System.Object,System.Object)">
            <summary>
            TF1590002: Extension for namespace {0} and version {1} not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.AppNotFoundForStoreException(System.Object,System.Object,System.Object)">
            <summary>
            TF1590002: Extension for store {0} and target {1} with id {2} not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.AppPublishAccessException(System.Object)">
            <summary>
            TF1590001: User {0} does not have permission to publish extensions in this store
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.ContributionPointNotFoundError(System.Object,System.Object)">
            <summary>
            The contribution point {0} was not found on extension {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.ContributionPointOwnerNotFoundError(System.Object,System.Object)">
            <summary>
            The extension {0} for the contribution point {1} was not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.ContributionTypeNotFoundError(System.Object,System.Object)">
            <summary>
            The contribution type {0} was not found on extension {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.ContributionTypeOwnerNotFoundError(System.Object,System.Object)">
            <summary>
            The extension {0} for the contribution type {1} was not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.ContributionTypeSchemaValidationError(System.Object,System.Object)">
            <summary>
            Contribution Type schema for {0} is invalid. Error: {1}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.ContributionTypeUndefinedError(System.Object,System.Object)">
            <summary>
            The contribution type {0} referenced by contribution point {1} is not defined.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.ContributionValidationError(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The contribution with index {0} to the contribution point {1} is not in a valid format. It should validate against the schema for the contribution type {2}. Validation errors: {3}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ContributionResources.InstalledAppNotFoundForAppIdException(System.Object)">
            <summary>
            TF1590003: No extension with id {0} is installed in this account.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ArtifactUriNotSupportedException(System.Object)">
            <summary>
            The artifact Uri {0} is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerNotFoundException(System.Object)">
            <summary>
            The container {0} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemNotFoundException(System.Object,System.Object)">
            <summary>
            The item {0} in container {1} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemWithDifferentTypeExists(System.Object,System.Object)">
            <summary>
            The items could not be created because an item with type {0} already exists at {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.PendingUploadNotFoundException(System.Object)">
            <summary>
            The pending upload {0} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemDoesNotExist(System.Object,System.Object)">
            <summary>
            The item {0} of type {1} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemCopySourcePendingUpload(System.Object)">
            <summary>
            The source item {0} is in the pending upload state.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemCopyTargetChildOfSource(System.Object,System.Object)">
            <summary>
            The target folder {0} of the copy operation is a child of the source folder {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerItemCopyDuplicateTargets(System.Object)">
            <summary>
            The target location {0} is specified for two or more sources.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContainerAlreadyExists(System.Object)">
            <summary>
            Container with artifact {0} already exists.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.UnexpectedContentType(System.Object,System.Object)">
            <summary>
            Requested content type {0} but got back content type {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.NoContentReturned">
            <summary>
            The request returned no content.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.GzipNotSupportedOnServer">
            <summary>
            The server does not support gzipped content.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.BadCompression">
            <summary>
            The file length passed in is less than or equal to the compressed stream length.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ChunksizeWrongWithContentId(System.Object)">
            <summary>
            The chunk size must be a multiple of {0} bytes when specifying a contentId.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.FileContainerResources.ContentIdCollision(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            There was a contentId collision for file {0} with length {1} and file {2} with length {3}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.FieldReadOnly(System.Object)">
            <summary>
            {0} is read-only.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GROUPCREATIONERROR(System.Object,System.Object)">
            <summary>
            TF50624: A group named {0} already exists in scope {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDMEMBERCYCLICMEMBERSHIPERROR(System.Object,System.Object)">
            <summary>
            TF50233: A cyclic group containment error occurred when adding a group member. The group {1} already has the group {0} as a contained member.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GROUPSCOPECREATIONERROR(System.Object)">
            <summary>
            TF50620: The Team Foundation group scope {0} already exists
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDMEMBERIDENTITYALREADYMEMBERERROR(System.Object,System.Object)">
            <summary>
            TF50235: The group {0} already has a member {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVEGROUPMEMBERNOTMEMBERERROR(System.Object)">
            <summary>
            TF50632: An error occurred removing the group member. There is no group member with the security identifier (SID) {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVEADMINGROUPERROR">
            <summary>
            TF50633: This group cannot be removed. Team Foundation requires the existence of this Administrators group for its operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVEEVERYONEGROUPERROR">
            <summary>
            TF50634: This group cannot be removed. Team Foundation requires the existence of this Valid Users group for its operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVESERVICEGROUPERROR">
            <summary>
            TF50635: This group cannot be removed. Team Foundation requires the existence of this Service Accounts group for its operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVESPECIALGROUPERROR">
            <summary>
            TF50636: This group cannot be removed. Team Foundation requires the existence of this group for its operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.FINDGROUPSIDDOESNOTEXISTERROR(System.Object)">
            <summary>
            TF50258: An error occurred finding the group. There is no group with the security identifier (SID) {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GROUPRENAMEERROR(System.Object)">
            <summary>
            TF50616: Error renaming group, a group named {0} already exists.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.GROUPSCOPEDOESNOTEXISTERROR(System.Object)">
            <summary>
            TF50620: The Team Foundation identity scope {0} does not exist
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundMessage(System.Object,System.Object)">
            <summary>
            TF14045: The identity with type &apos;{0}&apos; and identifier &apos;{1}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundSimpleMessage">
            <summary>
            TF14045: The identity could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityNotFoundWithTfid(System.Object)">
            <summary>
            TF14045: The identity with TeamFoundationId {0} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAccountNameAlreadyInUseError(System.Object)">
            <summary>
            TF400815: The identity account name &apos;{0}&apos; is already in use.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAccountNameCollisionRepairFailedError(System.Object)">
            <summary>
            TF402001: Support will be required to repair this account. An attempt to repair an account name collision for identity &apos;{0}&apos; failed and cannot be completed automatically.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAccountNameCollisionRepairUnsafeError(System.Object)">
            <summary>
            TF402002: Support will be required to repair this account. An attempt to repair an account name collision for identity &apos;{0}&apos; is unsafe and cannot be completed automatically.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAliasAlreadyInUseError(System.Object)">
            <summary>
            The identity alias &apos;{0}&apos; is already in use.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidNameNotRecognized(System.Object)">
            <summary>
            TF200041: You have specified a name, {0}, that contains character(s) that are not recognized. Specify a name that only contains characters that are supported by the database collation setting and try again.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityMapReadOnlyException">
            <summary>
            TF401012: The identity map cannot be accessed while the collection is detached.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityAccountNamesAlreadyInUseError(System.Object,System.Object)">
            <summary>
            TF400816: {0} identity account names including &apos;{1}&apos; are already in use.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.InvalidServiceIdentityName(System.Object)">
            <summary>
            TF400325: Service identities are limited to a maximum of 200 characters, and may only contain alpha numeric, dash, and space characters. The name &apos;{0}&apos; is not a valid service identity name.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.AccountPreferencesAlreadyExist">
            <summary>
            TF400843: Account preferences have already been set. You can only set the preferences for language, culture, and time zone when the account is created, and these preferences cannot be changed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDGROUPMEMBERILLEGALINTERNETIDENTITY(System.Object)">
            <summary>
            TF400448: Internet identities cannot be added to this server. Unable to add {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDGROUPMEMBERILLEGALMEMBER(System.Object)">
            <summary>
            TF50637: Only Windows users can be added to the License group. Unable to add {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDGROUPMEMBERILLEGALWINDOWSIDENTITY(System.Object)">
            <summary>
            TF400447: Windows users cannot be added to this server. Unable to add {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDPROJECTGROUPTPROJECTMISMATCHERROR(System.Object,System.Object)">
            <summary>
            TF50375: Project group &apos;{1}&apos; cannot be added to group &apos;{0}&apos;, it is from a different project.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.CANNOT_REMOVE_SERVICE_ACCOUNT">
            <summary>
            TF50248: You cannot remove the service account from the Service Accounts group.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IDENTITYDOMAINDOESNOTEXISTERROR(System.Object)">
            <summary>
            TF246076: No Team Foundation identity domain exists with the following security identifier (SID): {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IDENTITYDOMAINMISMATCHERROR(System.Object,System.Object)">
            <summary>
            TF50621: The Team Foundation group that you wish to manage is not owned by service host {0}, it is owned by {1}. Please target your request at the correct host.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IdentityProviderUnavailable(System.Object,System.Object)">
            <summary>
            TF246104: The identity provider for type {0}, identifier {1} is unavailable.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IDENTITY_SYNC_ERROR(System.Object)">
            <summary>
            Sync error for identity: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.IllegalIdentityException(System.Object)">
            <summary>
            TF10158: The user or group name {0} contains unsupported characters, is empty, or too long.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.MODIFYEVERYONEGROUPEXCEPTION">
            <summary>
            TF50618: The Team Foundation Valid Users group cannot be modified directly.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.NOT_APPLICATION_GROUP">
            <summary>
            TF56044: The identity you are attempting to edit is not an application group.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.NOT_A_SECURITY_GROUP(System.Object)">
            <summary>
            TF50619: The group {0} is not a security group and cannot be added to Team Foundation Server.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.REMOVENONEXISTENTGROUPERROR(System.Object)">
            <summary>
            TF50265: An error occurred removing the group. There is no group with the security identifier (SID) {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.RemoveSelfFromAdminGroupError(System.Object)">
            <summary>
            TF400571: You cannot remove yourself from the Administrators group. This is a safeguard to prevent an organization locking themselves out of a deployment or project collection. Please have another administrator remove your membership. Alternatively you can disable the safeguard by setting {0} to false in the TF registry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.ADDPROJECTGROUPTOGLOBALGROUPERROR(System.Object,System.Object)">
            <summary>
            TF400031: You cannot add the project group {0} to the global group {1}. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.DynamicIdentityTypeCreationNotSupported">
            <summary>
            TF50645: Dynamic creation of identity types is no longer supported. Please check that the type of the identity you are trying to create is supported. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.IdentityResources.TooManyResultsError">
            <summary>
            TF400048: The query was aborted because it returned too many results. Please apply additional filters to reduce the size of the resultset returned.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.ActorValidationException">
            <summary>
            The ActorToken within the JsonWebToken is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.DeserializationException">
            <summary>
            Failed to deserialize the JsonWebToken object.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.DigestUnsupportedException(System.Object,System.Object)">
            <summary>
            JsonWebTokens support only the {0} Digest, but the signing credentials specify {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.EncodedTokenDataMalformed">
            <summary>
            The encoded data in the JsonWebToken is malformed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidAudienceException">
            <summary>
            The audience of the token is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidClockSkewException">
            <summary>
            The value supplied for ClockSkewInSeconds is invalid. It must be a positive integer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidIssuerException">
            <summary>
            The issuer of the JsonWebToken is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidSignatureAlgorithm">
            <summary>
            The signature algorithm in the JsonWebToken header is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidValidFromValueException">
            <summary>
            The ValidFrom value in not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.InvalidValidToValueException">
            <summary>
            The ValidTo value is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.ProviderTypeUnsupported(System.Object)">
            <summary>
            JsonWebTokens do not support crypto provider of type {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SerializationException">
            <summary>
            Failed to serialize the JsonWebToken object.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SignatureAlgorithmUnsupportedException(System.Object)">
            <summary>
            JsonWebTokens do not support the supplied signature algorithm: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SignatureNotFound">
            <summary>
            The JsonWebToken is not signed, or the signature has not been found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SignatureValidationException">
            <summary>
            The signature is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.SymmetricSecurityKeyNotFound">
            <summary>
            The supplied Signing Credential is not a SymmetricSigningCredential and does not match the Signature Algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.TokenExpiredException">
            <summary>
            The token is expired.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.TokenNotYetValidException">
            <summary>
            The token is not yet valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.ValidFromAfterValidToException">
            <summary>
            The time represented by the ValidFrom value come after the time represented by the ValidTo value.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.X509CertificateNotFound">
            <summary>
            The supplied X509SigningCredential does not contain an X509Certificate.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.X509SigningCredentialsNotFound">
            <summary>
            The supplied Signing Credential is not an X509SigningCredential and does not match the Signature Algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.X509CertificateExpired">
            <summary>
            The supplied Signing Credential certificate has expired.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.X509CertificateNoPrivateKey">
            <summary>
            The Signing Credential certificate has no private key and cannot be used for signing.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.X509CertificateKeyTooSmall">
            <summary>
            The key size of the supplied Signing Credential certificate is too small. It must be at least 2048 bits.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.JwtResources.TokenScopeNotAuthorizedException">
            <summary>
            The token scope is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.AppNotFoundForAppIdException(System.Object,System.Object)">
            <summary>
            TF1590002: App for id {0} and version {1} not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.CollectionDoesNotExistException(System.Object,System.Object,System.Object)">
            <summary>
            TF1590006: Collection with name {0} does not exist for scope {1} = {2}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.DocumentAlreadyExistsException(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            TF1590004: Document with id {0} already exists in collection {1} for {2} = {3}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.DocumentDoesNotExistException(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            TF1590005: Document with id {0} does not exist in collection {1} for {2} = {3}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.InstalledAppNotFoundForAppIdException(System.Object)">
            <summary>
            TF1590003: No app with id {0} is installed in this account.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.AppsResources.InvalidDocumentVersionException(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            TF1590007: Document version with id {0} in collection {1} for {2} = {3} does not match current value
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.CannotChangeParentDefinition(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            TF401225: Cannot change parent definition. Service type {0}, identifier {1}, parent service type {2}, identifier {3}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.LocationResources.ParentDefinitionNotFound(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            TF401226: Cannot save service definition with type {0} identifier {1} because parent definition with type {2} identifier {3} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.CannotReplaceNonExistantValue(System.Object)">
            <summary>
            Attempted to replace a value that does not exist at path {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.IndexOutOfRange(System.Object)">
            <summary>
            Index out of range for path {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.InsertNotSupported(System.Object)">
            <summary>
            {0} does not support insert.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.InvalidOperation">
            <summary>
            Unrecognized operation type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.InvalidValue(System.Object,System.Object)">
            <summary>
            Value {0} does not match the expected type {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.MoveCopyNotImplemented">
            <summary>
            Move/Copy is not implemented.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.NullOrEmptyOperations">
            <summary>
            At least one operation is required for Apply.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.PathCannotBeNull">
            <summary>
            Path cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.PathInvalidEndValue">
            <summary>
            Path cannot end with /.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.PathInvalidStartValue">
            <summary>
            Path is required to start with a / or be &quot;&quot;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.TargetCannotBeNull">
            <summary>
            Evaluated target should not be null.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.TestFailed(System.Object,System.Object,System.Object)">
            <summary>
            Test Operation for path {0} failed, value {1} was not equal to test value {2}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.TestNotImplementedForDictionary">
            <summary>
            Test is not implemented for Dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.TestNotImplementedForList">
            <summary>
            Test is not implemented for List.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.UnableToEvaluatePath(System.Object)">
            <summary>
            Unable to evaluate path {0}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.ValueCannotBeNull">
            <summary>
            Value cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.ValueNotNull">
            <summary>
            Remove requires Value to be null.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.JsonPatchNull">
            <summary>
            You must pass a valid patch document in the body of the request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.PatchResources.InvalidFieldName(System.Object)">
            <summary>
            Replace requires {0} to have existing value. Try Add operation instead.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.SecurityResources.InvalidAclStoreException(System.Object,System.Object)">
            <summary>
            The ACL store with identifier &apos;{1}&apos; was not found in the security namespace &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.UnsupportedContentType(System.Object)">
            <summary>
            The server returns content type {0}, which is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.DownloadCorrupted">
            <summary>
            The download file is corrupted. Get the file again.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.SerializingPhrase">
            <summary>
            being serialized
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.DeserializationCorrupt">
            <summary>
            The data presented for deserialization to the PropertiesCollection is corrupt.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ClientResourceVersionNotSupported(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The server does not support resource {0} at API version {1}. The minimum supported version on {2} is {3}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ResourceNotFoundOnServerMessage(System.Object,System.Object)">
            <summary>
            API resource location {0} is not registered on {1}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ResourceNotRegisteredMessage(System.Object)">
            <summary>
            API resource location {0} is not registered on this server.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ContainerIdMustBeGreaterThanZero">
            <summary>
            The container ID must be greater than zero.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.FullyQualifiedLocationParameter">
            <summary>
            The value of the location parameter cannot be null if the RelativeToSetting is &apos;FullyQualified&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.RelativeLocationMappingErrorMessage">
            <summary>
            TF205038: You cannot add location mappings to service definitions that are not part of the FullyQualified type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.InvalidAccessMappingLocationServiceUrl">
            <summary>
            TF205035: The access mapping is not valid and cannot be registered. The location service URL cannot be null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ServiceDefinitionDoesNotExist(System.Object,System.Object)">
            <summary>
            The service definition with service type &apos;{0}&apos; and identifier &apos;{1}&apos; does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ServiceDefinitionWithNoLocations(System.Object)">
            <summary>
            TF205046: The service with the following type does not have a location mapping: {0}. You must provide at least one location in order to configure locations for an external service.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.JsonParseError(System.Object)">
            <summary>
            Unable to parse JSON in: {0}
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MissingRequiredParameterMessage(System.Object)">
            <summary>
            A required parameter {0} was not specified for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.ProxyAuthenticationRequired">
            <summary>
            SP324097: Your network proxy requires authentication.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.InvalidApiVersionStringMessage(System.Object)">
            <summary>
            Invalid api version string: &quot;{0}&quot;. Api version string must be in the format: {{Major}}.{{Minor}}[-preview[.{{ResourceVersion}}]].
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.RequestContentTypeNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            The request indicated a Content-Type of &quot;{0}&quot; for method type &quot;{1}&quot; which is not supported. Valid content types for this method are: {2}.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.InvalidReferenceLinkFormat">
            <summary>
            ReferenceLinks is a dictionary that contains either a single ReferenceLink or an array of ReferenceLinks.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.PreviewVersionNotSuppliedMessage(System.Object)">
            <summary>
            The requested version &quot;{0}&quot; of the resource is under preview. The -preview flag must be supplied in the api-version for such requests. For example: &quot;{0}-preview&quot;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.VersionNotSuppliedMessage(System.Object)">
            <summary>
            No api-version was supplied for the &quot;{0}&quot; request. The version must be supplied either as part of the Accept header (e.g. &quot;application/json; api-version=1.0&quot;) or as a query parameter (e.g. &quot;?api-version=1.0&quot;).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidEndBlock(System.Object)">
            <summary>
            Unexpected end block &apos;{0}&apos; before any start block
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateMissingBlockHelper(System.Object,System.Object)">
            <summary>
            Block Helper &apos;{0}&apos; not found for expression &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateMissingHelper(System.Object,System.Object)">
            <summary>
            Helper &apos;{0}&apos; not found for expression &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateNonMatchingEndBlock(System.Object,System.Object)">
            <summary>
            End block &apos;{0}&apos; does not match start block &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateBraceCountMismatch(System.Object)">
            <summary>
            The expression &apos;{0}&apos; is invalid due to mismatching start and end brace count.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidEndBraces(System.Object,System.Object)">
            <summary>
            Invalid end braces before start braces at position &apos;{0}&apos; of template &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.MustacheTemplateInvalidStartBraces(System.Object,System.Object,System.Object)">
            <summary>
            Invalid start braces within template expression &apos;{0}&apos; at position {1} of template &apos;{2}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.OperationNotFoundException(System.Object)">
            <summary>
            Failed to find operation &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebApiResources.OperationUpdateException(System.Object)">
            <summary>
            Operation update for operation &apos;{0}&apos; did not complete successfully.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.AppSessionTokenException(System.Object)">
             <summary>
             {0} = Error type
            
             Error issuing app session token: {0}
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.WebPlatformResources.SessionTokenException(System.Object)">
             <summary>
             {0} = Error type
            
             Error issuing session token: {0}
             </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.BlobCopyRequestNotFoundException(System.Object)">
            <summary>
            The blob copy with id &apos;{0}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources.DatabaseMigrationNotFoundException(System.Object)">
            <summary>
            The migration with id &apos;{0}&apos; could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.DataImportAlreadyExistsException(System.Object)">
            <summary>
            A data import with Id &apos;{0}&apos; already exists.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.WebApi.DataImportResources.DataImportDoesNotExistException(System.Object)">
            <summary>
            A data import with Id &apos;{0}&apos; does not exist.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountId">
            <summary>
            Identifier for an Account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.NamespaceId">
            <summary>
            Namespace for an account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountUri">
            <summary>
            Uri for an account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountName">
            <summary>
            Name for an account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.OrganizationName">
            <summary>
            Organization that created the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountType">
            <summary>
            Type of account: Personal, Organization
            </summary>
            Emit default value because it is an enum...
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountOwner">
            <summary>
            Owner of account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.CreatedBy">
            <summary>
            Who created the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.CreatedDate">
            <summary>
            Date account was created
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.AccountStatus">
            <summary>
            Current account status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.StatusReason">
            <summary>
            Reason for current status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.LastUpdatedBy">
            <summary>
            Identity of last person to update the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.Revision">
            <summary>
            Current revision of the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.Properties">
            <summary>
            Extended properties
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Account.LastUpdatedDate">
            <summary>
            Date account was last updated
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Account.Account.GetProperty(System.String)">
            <summary>
            Property accessor. Will throw if not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Account.Account.TryGetProperty(System.String,System.Object@)">
            <summary>
            Property accessor. value will be null if not found.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountEqualityComparer">
            <summary>
            IEqualityComparer for Account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.AccountId">
            <summary>
            Identifier for an Account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.UserId">
            <summary>
            The user identity to be associated with the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.CreationDate">
            <summary>
            Date account was created
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.UserStatus">
            <summary>
            Current account status
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.LicenseSource">
            <summary>
            What is the license for this user MSDN, VSPro, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.LastUpdated">
            <summary>
            Date account was last updated
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.AccountUser.ServiceRights">
            <summary>
            What are the users service rights
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountStatus.Enabled">
            <summary>
            This hosting account is active and assigned to a customer.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountStatus.Disabled">
            <summary>
            This hosting account is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountStatus.Deleted">
            <summary>
            This account is part of deletion batch and scheduled for deletion.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Active">
            <summary>
            User has signed in at least once to the VSO account 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Disabled">
            <summary>
            User cannot sign in; primarily used by admin to temporarily remove a user due to absence or license reallocation
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Deleted">
            <summary>
            User is removed from the VSO account by the VSO account admin 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Pending">
            <summary>
            User is invited to join the VSO account by the VSO account admin, but has not signed up/signed in yet 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.Expired">
            <summary>
            User can sign in; primarily used when license is in expired state and we give a grace period
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountUserStatus.PendingDisabled">
            <summary>
            User is disabled; if reenabled, they will still be in the Pending state
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountLicenseSource.None">
            <summary>
            The following correspond to various license sources
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Account.AccountLicenseSource.VsEarlyAdopter">
            <summary>
            Early adopters may get a special license
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountServiceRights">
            <summary>
            the defined service rights that can be granted to a user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Region.RegionId">
            <summary>
            RegionId property for multiinstance account routing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Region.RegionName">
            <summary>
            RegionName property for multiinstance account routing.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Account.Region.Clone">
            <summary>
            Supports caching and serialization
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountNotFoundException">
            <summary>
            An exception thrown when an account could not be found.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountMarkedForDeletionException">
            <summary>
            An exception thrown when an account has been marked for deletion
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountNotMarkedForDeletionException">
            <summary>
            An exception thrown when an account has not been marked for deletion
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountHostMappingNotFoundException">
            <summary>
            An exception thrown when an account could not be found.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountUserNotFoundException">
            <summary>
            thrown when trying to remove a user license that does not exist from an account
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.RegionExistsException">
            <summary>
            thrown when trying to add a region that already exists
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountAlreadyLinkedException">
            <summary>
            Thrown when attempting to link an account to an AAD tenant when the account is already linked.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountNotLinkedException">
            <summary>
            Thrown when attempting to unlink an account that is not linked to any tenant.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.AccountStateNotValidException">
            <summary>
            Thrown when attempting to link/unlink an account that is not in a valid state as per IMS.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Account.UnableToDeleteAzureLinkedAccountException">
            <summary>
            Thrown when an account a users attempts to softdelete an account that is linked to an azure subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Account.Client.AccountHttpClient.TranslatedExceptions">
            <summary>
            Exceptions for account errors
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationHttpContext.ClientId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationHttpContext.NotificationType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.IdentityId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ServiceUri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.MessageReceiver">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.PrefetchCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.MaxRetriesCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.UseAmqpTransportType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ReceiveOperationTimeoutInMinutes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ServiceBusRetryDelayMilliSecounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ServiceBusLongRetryDelayMilliSecounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ClientSignatureToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ClientSignatureTokenName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription.ClientSignatureTokenExpiration">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage.NotificationType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ClientNotification.NotificationType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ClientNotification.NotificationType.ProfileUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ClientNotification.NotificationType.ProfileAttributeUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ClientNotification.NotificationType.ProfileCoreAttributeUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.ClientNotification.PostNotificationHttpContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.PostNotificationHttpContext.IdentityId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.PostNotificationHttpContext.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationException.IsRetryable">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AzureRegion">
            <summary>
            Represents an azure region, used by ibiza for linking accounts
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureRegion.Id">
            <summary>
            Unique Identifier
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureRegion.DisplayName">
            <summary>
            Display Name of the azure region. Ex: North Central US.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.AzureRegion.RegionCode">
            <summary>
            Region code of the azure region. Ex: NCUS.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourceStatusReason">
            <summary>
            Reason for disabled resource.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourceName">
            <summary>
            Various metered resources in VSO
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.SubscriptionStatus">
            <summary>
            Azure subscription status
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace">
            <summary>
            The subscription account namespace.
            Denotes the 'category' of the account.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterGroupType">
            <summary>
            Atrribute to group meters under buckets. 
            This is attribute in MeteredResource and ISubscriptionResource
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourceBillingMode">
            <summary>
            The resource billing mode.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterRenewalFrequecy">
            <summary>
            Describes the Renewal frequncy of a Meter.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterCategory">
            <summary>
            Defines meter categories.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.OfferScope">
            <summary>
            The offer scope.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterBillingState">
            <summary>
            The meter billing state.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.MeterState">
            <summary>
            The meter state.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup">
            <summary>
            The resource renewal group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.MeterId">
            <summary>
            Gets or sets the meter identifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.BillingMode">
            <summary>
            Gets or sets the billing mode.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.BillingState">
            <summary>
            Gets or sets the state of the billing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.Category">
            <summary>
            Gets or sets the category.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.CommittedQuantity">
            <summary>
            Gets or sets the committed quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.CurrentQuantity">
            <summary>
            Gets or sets the current quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.GalleryId">
            <summary>
            Gets or sets the gallery identifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.IncludedQuantity">
            <summary>
            Gets or sets the included quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.MaximumQuantity">
            <summary>
            Gets or sets the maximum quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.AbsoluteMaximumQuantity">
            <summary>
            Gets or sets the absolute maximum quantity.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.OfferScope">
            <summary>
            Gets or sets the offer scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.PlatformMeterId">
            <summary>
            Gets or sets the platform meter identifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.RenewalFrequency">
            <summary>
            Gets or sets the renewal frequency.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.TrialCycles">
            <summary>
            Gets or sets the trial cycles.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.Unit">
            <summary>
            Gets or sets the unit.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferMeter.MeterPricing">
            <summary>
            Gets or sets the meter pricing (GraduatedPrice)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource">
            <summary>
            Information about a resource associated with a subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.Name">
            <summary>
            Gets the name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.CommittedQuantity">
            <summary>
            Quantity commited by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.DisabledResourceActionLink">
            <summary>
            Uri pointing to user action on a disabled resource. 
            It is based on <see cref="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.DisabledReason" /> value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.DisabledReason">
            <summary>
            A enumeration value indicating why the resource was disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.IsUseable">
            <summary>
            Returns true if resource is can be used otherwise returns false. 
            <see cref="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.DisabledReason" /> can be used to identify why resource is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.IsPaidBillingEnabled">
            <summary>
            Returns true if paid billing is enabled on the resource.
            Returns false for non-azure subscriptions, disabled azure subscriptions or explicitly disabled by user
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.MaximumQuantity">
            <summary>
            Returns an integer representing the maximum quantity that can be billed for this resource.
            Any usage submitted over this number is automatically excluded from being sent to azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource.ResetDate">
            <summary>
            Returns a Date of UTC kind indicating when the next reset of quantities is going to happen.
            On this day at UTC 2:00 AM is when the reset will occur.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate">
            <summary>
            Represents the aggregated usage of a resource over a time span
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate.StartTime">
            <summary>
            Gets or sets start time of the aggregated value, inclusive
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate.EndTime">
            <summary>
            Gets or sets end time of the aggregated value, exclusive
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate.Resource">
            <summary>
            Gets or sets resource that the aggregated value represents
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate.Value">
            <summary>
            Gets or sets quantity of the resource used from start time to end time
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.MeterId">
            <summary>
            Meter Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.PlatformMeterId">
            <summary>
            Gets or sets the identifier representing this meter in commerce platform
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.GalleryId">
            <summary>
            Gets or sets Gallery Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.Name">
            <summary>
            Name of the resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.RenewalFrequency">
            <summary>
            Gets or sets the Renewak Frequency.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.BillingMode">
            <summary>
            Gets or sets the billing mode of the resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.Category">
            <summary>
            Category.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.OfferScope">
            <summary>
            Gets or sets the offer scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.BillingState">
            <summary>
            Gets or sets the state of the billing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.Unit">
            <summary>
            Measuring unit for this meter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.CurrentQuantity">
            <summary>
            Quantity used by the user, when resources is pay as you go or commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.CommittedQuantity">
            <summary>
            Quantity commited by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.MaximumQuantity">
            <summary>
            Gets or sets the value of maximum quantity for the resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.AbsoluteMaximumQuantity">
            <summary>
            Gets or sets the value of absolute maximum quantity for the resource
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.TrialCycles">
            <summary>
            Gets or sets the trial cycles.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferMeter.MeterPricing">
            <summary>
            Gets or sets the meter pricing (GraduatedPrice)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount">
            <summary>
            The subscription account.
            Add Sub Type and Owner email later.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.AccountId">
            <summary>
            Gets or sets the account identifier. Usually a guid.
            </summary>
            <value>
            The account identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.AccountName">
            <summary>
            Gets or sets the name of the account.
            </summary>
            <value>
            The name of the account.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionId">
            <summary>
            Gets or sets the subscription identifier.
            </summary>
            <value>
            The subscription identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionStatus">
            <summary>
            Gets or sets the subscription status.
            </summary>
            <value>
            The subscription status.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.ResourceGroupName">
            <summary>
            Gets or sets the resource group.
            </summary>
            <value>
            The resource group.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.GeoLocation">
            <summary>
            Gets or sets the geo location.
            </summary>
            <value>
            The geo location.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.ServiceUrls">
            <summary>
            A dictionary of service urls, mapping the service owner to the service owner url
            </summary>
            <value>
            Urls which can be used to access account apis
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.AccountTenantId">
            <summary>
            Gets or sets the account tenantId.
            </summary>
            <value>
            If the account is not linked to a tenant this willl be Guid.Empty
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.IsAccountOwner">
            <summary>
            Gets or sets a value indicating whether the calling user identity owns the account.
            </summary>
            <value>
              <c>true</c> if user owns the account otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.ResourceName">
            <summary>
            Gets or sets the azure resource name.
            </summary>
            <value>
            The resource name representing the link between an account and subscription.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.SubscriptionName">
            <summary>
            Gets or sets the azure subscription name
            </summary>
            <value>
            This represent display name of azure subscription
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount.IsEligibleForPurchase">
            <summary>
            Gets or set the flag to enable purchase via subscription. 
            </summary>
            <value>
            Flag indicate if purchase can be happen against billing entity for given (gallery) item
            This is run time property 
            </value>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount">
            <summary>
            The subscription account.
            Add Sub Type and Owner email later.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.AccountId">
            <summary>
            Gets or sets the account identifier. Usually a guid.
            </summary>
            <value>
            The account identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.AccountName">
            <summary>
            Gets or sets the name of the account.
            </summary>
            <value>
            The name of the account.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionId">
            <summary>
            Gets or sets the subscription identifier.
            </summary>
            <value>
            The subscription identifier.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionStatus">
            <summary>
            Gets or sets the subscription status.
            </summary>
            <value>
            The subscription status.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.ResourceGroupName">
            <summary>
            Gets or sets the resource group.
            </summary>
            <value>
            The resource group.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.GeoLocation">
            <summary>
            Gets or sets the geo location.
            </summary>
            <value>
            The geo location.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.ServiceUrls">
            <summary>
            A dictionary of service urls, mapping the service owner to the service owner url
            </summary>
            <value>
            Urls which can be used to access account apis
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.AccountTenantId">
            <summary>
            Gets or sets the account tenantId.
            </summary>
            <value>
            If the account is not linked to a tenant this willl be Guid.Empty
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.IsAccountOwner">
            <summary>
            Gets or sets a value indicating whether the calling user identity owns the account.
            </summary>
            <value>
              <c>true</c> if user owns the account otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.ResourceName">
            <summary>
            Gets or sets the azure resource name.
            </summary>
            <value>
            The resource name representing the link between an account and subscription.
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.SubscriptionName">
            <summary>
            Gets or sets the azure subscription name
            </summary>
            <value>
            This represent display name of azure subscription
            </value>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount.IsEligibleForPurchase">
            <summary>
            Gets or set the flag to enable purchase via subscription. 
            </summary>
            <value>
            Flag indicate if purchase can be happen against billing entity for given (gallery) item
            This is run time property 
            </value>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription">
            <summary>
            Information about a resource associated with a subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.OfferMeter">
            <summary>
            Gets the name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.RenewalGroup">
            <summary>
            Gets the renewal group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.CommittedQuantity">
            <summary>
            Quantity commited by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.DisabledResourceActionLink">
            <summary>
            Uri pointing to user action on a disabled resource. 
            It is based on <see cref="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.DisabledReason" /> value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.DisabledReason">
            <summary>
            A enumeration value indicating why the resource was disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IsUseable">
            <summary>
            Returns true if resource is can be used otherwise returns false. 
            <see cref="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.DisabledReason" /> can be used to identify why resource is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.IsPaidBillingEnabled">
            <summary>
            Returns true if paid billing is enabled on the resource.
            Returns false for non-azure subscriptions, disabled azure subscriptions or explicitly disabled by user
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.MaximumQuantity">
            <summary>
            Returns an integer representing the maximum quantity that can be billed for this resource.
            Any usage submitted over this number is automatically excluded from being sent to azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.ResetDate">
            <summary>
            Returns a Date of UTC kind indicating when the next reset of quantities is going to happen.
            On this day at UTC 2:00 AM is when the reset will occur.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.AzureSubscriptionId">
            <summary>
            The azure subscription id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.AzureSubscriptionName">
            <summary>
            The azure subscription name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.IOfferSubscription.AzureSubscriptionState">
            <summary>
            The azure subscription state
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource">
            <summary>
            Information about a resource associated with a subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.Name">
            <summary>
            Gets or sets the name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.CommittedQuantity">
            <summary>
            Quantity commited by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.DisabledResourceActionLink">
            <summary>
            Uri pointing to user action on a disabled resource. 
            It is based on <see cref="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.DisabledReason" /> value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.DisabledReason">
            <summary>
            A enumeration value indicating why the resource was disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.IsUseable">
            <summary>
            Returns true if resource is can be used otherwise returns false. 
            <see cref="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.DisabledReason" /> can be used to identify why resource is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.IsPaidBillingEnabled">
            <summary>
            Returns true if paid billing is enabled on the resource.
            Returns false for non-azure subscriptions, disabled azure subscriptions or explicitly disabled by user
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.MaximumQuantity">
            <summary>
            Returns an integer representing the maximum quantity that can be billed for this resource.
            Any usage submitted over this number is automatically excluded from being sent to azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.SubscriptionResource.ResetDate">
            <summary>
            Returns a Date of UTC kind indicating when the next reset of quantities is going to happen.
            On this day at UTC 2:00 AM is when the reset will occur.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.OfferSubscription">
            <summary>
            Information about a resource associated with a subscription.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.OfferMeter">
            <summary>
            Gets or sets the name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.RenewalGroup">
            <summary>
            Gets the renewal group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.CommittedQuantity">
            <summary>
            Quantity commited by the user, when resources is commitment based.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.DisabledResourceActionLink">
            <summary>
            Uri pointing to user action on a disabled resource. 
            It is based on <see cref="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.DisabledReason" /> value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.DisabledReason">
            <summary>
            A enumeration value indicating why the resource was disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IncludedQuantity">
            <summary>
            Quantity included for free.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IsUseable">
            <summary>
            Returns true if resource is can be used otherwise returns false. 
            <see cref="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.DisabledReason" /> can be used to identify why resource is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.IsPaidBillingEnabled">
            <summary>
            Returns true if paid billing is enabled on the resource.
            Returns false for non-azure subscriptions, disabled azure subscriptions or explicitly disabled by user
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.MaximumQuantity">
            <summary>
            Returns an integer representing the maximum quantity that can be billed for this resource.
            Any usage submitted over this number is automatically excluded from being sent to azure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.ResetDate">
            <summary>
            Returns a Date of UTC kind indicating when the next reset of quantities is going to happen.
            On this day at UTC 2:00 AM is when the reset will occur.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.AzureSubscriptionId">
            <summary>
            The azure subscription id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.OfferSubscriptionId">
            <summary>
            The unique identifier of this offer subscription
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.AzureSubscriptionName">
            <summary>
            The azure subscription name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.OfferSubscription.AzureSubscriptionState">
            <summary>
            The azure subscription state
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.UsageEvent">
            <summary>
            Class that represents common set of properties for a raw usage event reported by TFS services.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.MeterName">
            <summary>
            Meter Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.EventId">
            <summary>
            Unique event identifier
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.AccountName">
            <summary>
            Account name associated with the usage event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.AssociatedUser">
            <summary>
            User GUID associated with the usage event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.Quantity">
            <summary>
            Quantity of the usage event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.BillableDate">
            <summary>
            Timestamp when this billing event is billable
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.EventTimestamp">
            <summary>
            Recieving Timestamp of the billing event by metering service
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.ServiceIdentity">
            <summary>
            Service context GUID associated with the usage event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.ResourceBillingMode">
            <summary>
            Gets or sets the billing mode for the resource involved in the usage
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.SubscriptionId">
            <summary>
            Gets or sets subscription guid of the associated account of the event
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.SubscriptionAnniversaryDay">
            <summary>
            Gets or sets subscription anniversary day of the subscription
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.PartitionId">
            <summary>
            Partition id of the account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEvent.AccountId">
            <summary>
            Gets or sets account id of the event. Note: This is for backward compat with BI.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate.StartTime">
            <summary>
            Gets or sets start time of the aggregated value, inclusive
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate.EndTime">
            <summary>
            Gets or sets end time of the aggregated value, exclusive
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate.Resource">
            <summary>
            Gets or sets resource that the aggregated value represents
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate.Value">
            <summary>
            Gets or sets quantity of the resource used from start time to end time
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.GetMeterFromGalleryId(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="offerMeterName">Unique name of the resource</param>
            <param name="accountId">Account id associated with the resource</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetResourceUsage(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="offerMeterName">Unique name of the resource</param>
            <param name="nextBillingPeriod">Flag to indicate if offer quantity is for current or next month</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetResourceUsage(System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="nextBillingPeriod">Flag to indicate if offer quantity is for current or next month</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetAllOfferSubscriptionsForUser(Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Boolean,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="accountProviderNameSpace">Account provider namespace</param>
            <param name="validateAzuresubscription">Flag to validate associated azure subscriptions for usage</param>
            <param name="nextBillingPeriod">Flag to indicate if offer quantity is for current or next month</param>
            <returns>Resource Information</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.GetOfferSubscriptionsForGalleryItem(Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.String,System.Boolean,System.Object,System.Threading.CancellationToken)" -->
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.SetAccountQuantity(System.String,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sets the maximum and included quantities for a resource
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="includedQuantity">Included resource quantity</param>
            <param name="maximumQuantity">Maximum resource quantity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.TogglePaidBilling(System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sets the maximum and included quantities for a resource
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="includedQuantity">Included resource quantity</param>
            <param name="maximumQuantity">Maximum resource quantity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.ReportUsage(System.Guid,System.String,System.Int32,System.String,System.DateTime,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends usage information to billing pipeline. 
            Note that this method requires the request context to
            be at the application level with user identity.
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <param name="accountId">Account id associated with the resource</param>
            <param name="eventUserId">User id who initiated the billing event</param>
            <param name="quantity">Quantity used in the billing event</param>
            <param name="eventId">Unique human readable identifier for the billing event</param>
            <param name="billingEventDateTime">Timestamp at which the event started</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.CreateOfferSubscription(System.String,System.Guid,Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends usage information to billing pipeline. 
            Note that this method requires the request context to
            be at the application level with user identity.
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <param name="accountId">Account id associated with the resource</param>
            <param name="eventUserId">User id who initiated the billing event</param>
            <param name="quantity">Quantity used in the billing event</param>
            <param name="eventId">Unique human readable identifier for the billing event</param>
            <param name="billingEventDateTime">Timestamp at which the event started</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetAccounts(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Threading.CancellationToken)">
            <summary>
            Gets the accounts by subscription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetAccounts(Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the accounts owned by identity.
            </summary>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="memberId">The member identifier.</param>
            <param name="queryOnlyOwnerAccounts">if set to <c>true</c> [query for owners only].</param>
            <param name="inlcudeDisabledAccounts">if set to <c>true</c> [inlcude disabled accounts].</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.CreateSubscription(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Int32,Microsoft.VisualStudio.Services.Commerce.SubscriptionStatus,Microsoft.VisualStudio.Services.Commerce.SubscriptionSource,System.Threading.CancellationToken)">
            <summary>
            Creates the subscription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="anniversaryDay">The anniversary day.</param>
            <param name="status">The status.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.LinkAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Links the account.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.LinkAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Links the account.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <param name="hydrate">Specifies whether or not to trigger hydration of the account into CSM for Ibiza</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.UnlinkAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Unlinks an account from the subsription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.UnlinkAccount(System.Guid,Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Unlinks an account from the subsription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            /// <param name="hydrate">Specifies whether or not to trigger dehydration of the account into CSM for Ibiza</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.GetSubscriptionAccount(Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Unlinks an account from the subsription.
            </summary>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="providerNamespaceId">The provider namespace identifier.</param>
            <param name="accountId">The account identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient.s_translatedExceptions">
            <summary>
            The translated exceptions
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient">
            <summary>
            Class that represents methods communicating with the platform service via REST controller.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.GetResourceStatus(System.Nullable{Microsoft.VisualStudio.Services.Commerce.ResourceName},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <param name="accountId">Account id associated with the resource</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.GetResourceStatus(System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns detailed facts about specified resource.
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <param name="accountId">Account id associated with the resource</param>
            <returns>Resource Information</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.SetAccountQuantity(Microsoft.VisualStudio.Services.Commerce.ResourceName,System.Int32,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sets the maximum and included quantities for a resource
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="includedQuantity">Included resource quantity</param>
            <param name="maximumQuantity">Maximum resource quantity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.TogglePaidBilling(Microsoft.VisualStudio.Services.Commerce.ResourceName,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sets the maximum and included quantities for a resource
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="includedQuantity">Included resource quantity</param>
            <param name="maximumQuantity">Maximum resource quantity</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.ReportUsage(System.Guid,Microsoft.VisualStudio.Services.Commerce.ResourceName,System.Int32,System.String,System.DateTime,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends usage information to billing pipeline. 
            Note that this method requires the request context to
            be at the application level with user identity.
            </summary>
            <param name="resourceName">Unique name of the resource</param>
            <param name="accountId">Account id associated with the resource</param>
            <param name="eventUserId">User id who initiated the billing event</param>
            <param name="quantity">Quantity used in the billing event</param>
            <param name="eventId">Unique human readable identifier for the billing event</param>
            <param name="billingEventDateTime">Timestamp at which the event started</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.GetUsage(System.DateTime,System.DateTime,System.TimeSpan,Microsoft.VisualStudio.Services.Commerce.ResourceName,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the aggregate resource usage over the specified time range
            </summary>
            <param name="startTime">Start of the the time range to retrieve, inclusive</param>
            <param name="endTime">End of the time range to retrieve, exclusive</param>
            <param name="timeSpan">Interval of the time to retrieve, should be in a multiple of hour or day</param>
            <param name="resource">Resource name</param>
            <returns>An enumerable of aggregated resource data, one for each timespan</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.SendAsync``1(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken)">
            <summary>
            Overridable for test purposes
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient.CreateRequestMessageAsync(System.Net.Http.HttpMethod,System.Guid,System.Object,Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion,System.Net.Http.HttpContent,System.Collections.Specialized.NameValueCollection,System.Object,System.Threading.CancellationToken)">
            <summary>
            Create an HTTP request message for the given location, replacing parameters in the location's route template
            with values in the supplied routeValues dictionary.
            </summary>
            <param name="method">HTTP verb to use</param>
            <param name="locationId">Id of the location to use</param>
            <param name="routeValues">Values to use to replace parameters in the location's route tempalte</param>
            <param name="version">Version to send in the request or null to use the VSS latest API version</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Compliance.AccountRightsValidation.Volatile">
            <summary>
            Flag to mark the state as unfit for long caching or persisting.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Compliance.ExternalUserResolution.RedirectUri">
            <summary>
            Gets the redirect Uri object for resolving the external user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Compliance.ExternalUserResolution.ErrorMessage">
            <summary>
            Gets the error message while trying resolve the external user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Compliance.ExternalUserResolution.HasError">
            <summary>
            Is true if an error occured while resolving the external user.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions">
            <summary>
            Extension methods for extensions and contributions
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.GetTemplateUriProperty(Microsoft.VisualStudio.Services.Contributions.Contribution,System.String,System.Object,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser)">
            <summary>
            Get a contribution property value and resolve it as a mustache template, using the given replacements object.  Check to see
            if this property needs the base extension url appended to it.
            </summary>
            <param name="contribution">Extension contribution</param>
            <param name="propertyName">Name of the property; can be a JToken selector such as "foo[0].bar"</param>
            <param name="replacementValues">Replacement values to use in the template translation</param>
            <param name="customTemplateParser">Optional template parser that can be used in place of the default</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.GetTemplateProperty(Microsoft.VisualStudio.Services.Contributions.Contribution,System.String,System.Object,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser)">
            <summary>
            Get a contribution property value and resolve it as a mustache template, using the given replacements object
            </summary>
            <param name="contribution">Extension contribution</param>
            <param name="propertyName">Name of the property; can be a JToken selector such as "foo[0].bar"</param>
            <param name="replacementValues">Replacement values to use in the template translation</param>
            <param name="customTemplateParser">Optional template parser that can be used in place of the default</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.GetTemplateProperty(Microsoft.VisualStudio.Services.Contributions.Contribution,System.String,Newtonsoft.Json.Linq.JToken,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser)">
            <summary>
            Get a contribution property value and resolve it as a mustache template, using the given replacements object
            </summary>
            <param name="contribution">Extension contribution</param>
            <param name="propertyName">Name of the property; can be a JToken selector such as "foo[0].bar"</param>
            <param name="replacementValues">Replacement values to use in the template translation</param>
            <param name="customTemplateParser">Optional template parser that can be used in place of the default</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.GetTemplateProperty(Microsoft.VisualStudio.Services.Contributions.Contribution,System.String,System.Lazy{Newtonsoft.Json.Linq.JToken},Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser)">
            <summary>
            Get a contribution property value and resolve it as a mustache template, using the given replacements object
            </summary>
            <param name="contribution">Extension contribution</param>
            <param name="propertyName">Name of the property; can be a JToken selector such as "foo[0].bar"</param>
            <param name="replacementValues">Replacement values to use in the template translation</param>
            <param name="customTemplateParser">Optional template parser that can be used in place of the default</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.GetTemplateUriProperty(Microsoft.VisualStudio.Services.Contributions.Contribution,System.String,System.Lazy{Newtonsoft.Json.Linq.JToken},Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser)">
            <summary>
            Get a contribution property value and resolve it as a mustache template, using the given replacements object
            </summary>
            <param name="contribution">Extension contribution</param>
            <param name="propertyName">Name of the property; can be a JToken selector such as "foo[0].bar"</param>
            <param name="replacementValues">Replacement values to use in the template translation</param>
            <param name="customTemplateParser">Optional template parser that can be used in place of the default</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.GetTemplateUriProperty(Microsoft.VisualStudio.Services.Contributions.Extension,System.String,System.Object,Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser)">
            <summary>
            Resolve an extension's templated uri property value into a url (using the extension's baseUri where appropriate)
            </summary>
            <param name="extension">The extension to use when resolving the property</param>
            <param name="propertyValue">The (possibly templated) property value</param>
            <param name="replacementValues">Replacement values to use when resolving templated urls</param>
            <param name="customTemplateParser">Optional template parser that can be used in place of the default</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.GetTemplateUriProperty(Microsoft.VisualStudio.Services.Contributions.Extension,System.String,System.Lazy{Newtonsoft.Json.Linq.JToken},Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser)">
            <summary>
            Resolve an extension's templated uri property value into a url (using the extension's baseUri where appropriate)
            </summary>
            <param name="extension">The extension to use when resolving the property</param>
            <param name="propertyValue">The (possibly templated) property value</param>
            <param name="replacementValues">Replacement values to use when resolving templated urls</param>
            <param name="customTemplateParser">Optional template parser that can be used in place of the default</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.GetProperty``1(Microsoft.VisualStudio.Services.Contributions.Contribution,System.String,``0,System.Boolean)">
            <summary>
            Get a property value for the given extension contribution
            </summary>
            <typeparam name="T">Type of property value</typeparam>
            <param name="contribution">Extension contribution</param>
            <param name="propertyName">Name of the property; can be a JToken selector such as "foo[0].bar"</param>
            <param name="defaultValue">Default value to return if the property is not found/valid</param>
            <param name="ignoreInvalidTypeError">Unless true, throw if the property exists but cannot be parsed as the given type</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.ObjectToJObject(System.Object)">
            <summary>
            Convert an object to a JObject, using VSSF serialization settings.
            </summary>
            <param name="objectToConvert"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionExtensions.IsOfType(Microsoft.VisualStudio.Services.Contributions.Contribution,System.String)">
            <summary>
            Is the contribution's type the specified contribution type
            </summary>
            <param name="contribution">Contribution to check</param>
            <param name="contributionTypeId">The full id of the contribution type to check for</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ExtensionFlags">
            <summary>
            Set of flags applied to extensions that are relevant to contribution consumers
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ExtensionFlags.BuiltIn">
            <summary>
            A built-in extension is installed for all VSO accounts by default
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ExtensionFlags.Trusted">
            <summary>
            The extension comes from a fully-trusted publisher
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ExtensionEventCallback">
            <summary>
            Base class for an event callback for an extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionEventCallback.Uri">
            <summary>
            The uri of the endpoint that is hit when an event occurs
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ExtensionEventCallbackCollection">
            <summary>
            Collection of event callbacks - endpoints called when particular extension events occur.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionEventCallbackCollection.VersionCheck">
            <summary>
            For multi-version extensions, defines an endpoint that gets called via an OPTIONS request to
            determine the particular version of the extension to be used
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ExtensionManifest">
            <summary>
            Base class for extension properties which are shared by the extension manifest and the extension model
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionManifest.Language">
            <summary>
            Language Culture Name set by the Gallery
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionManifest.ManifestVersion">
            <summary>
            Version of the extension manifest format/content
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionManifest.BaseUri">
            <summary>
            Uri used as base for other relative uri's defined in extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionManifest.EventCallbacks">
            <summary>
            Collection of endpoints that get called when particular extension events occur
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionManifest.Scopes">
            <summary>
            List of all oauth scopes required by this extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionManifest.Contributions">
            <summary>
            List of contributions made by this extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ExtensionManifest.ContributionTypes">
            <summary>
            List of contribution types defined by this extension
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.Extension">
            <summary>
            Represents a VSO "extension" which is a container for contributions and contribution types
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Extension.Id">
            <summary>
            Globally unique id for this extension (the same id is used for all versions of a single extension)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Extension.ExtensionId">
            <summary>
            The friendly extension id for this extension - unique for a given publisher.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Extension.PublisherId">
            <summary>
            Unique id of the publisher of this extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Extension.Version">
            <summary>
            Version of this extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Extension.VersionString">
            <summary>
            Version of this extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Extension.Flags">
            <summary>
            Extension flags relevant to contribution consumers
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Extension.RegistrationId">
            <summary>
            Unique id for this extension (the same id is used for all versions of a single extension)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.Extension.#ctor">
            <summary>
            Create an extension
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.Extension.#ctor(Microsoft.VisualStudio.Services.Contributions.ExtensionManifest)">
            <summary>
            Create an extension from an existing manifest
            </summary>
            <param name="manifest">Extension manifest</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.Extension.GetContribution(System.String)">
            <summary>
            Get a contribution with the given id (returns null if not found).
            </summary>
            <param name="contributionId">The extension-relative id of the contribution to return</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.Extension.GetContributionsForTarget(System.String)">
            <summary>
            Get all contributions in this exension that target the given contribution
            </summary>
            <param name="targetContributionId">Full id of the contribution being targeted</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.Extension.GetContributionType(System.String)">
            <summary>
            Get the contribution type with the given id (returns null if not found).
            </summary>
            <param name="contributionTypeId">The extension-relative id of the contribution type to return</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.Extension.CopyFrom(Microsoft.VisualStudio.Services.Contributions.Extension,System.Boolean)">
            <summary>
            Copy values from the given extension into this extension
            </summary>
            <param name="sourceExtension">Source extension to copy to</param>
            <param name="includeContributions">If true, include contributions and contribution types in the copy</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.Extension.CopyFromManifest(Microsoft.VisualStudio.Services.Contributions.ExtensionManifest,System.Boolean)">
            <summary>
            Copy values from the given extension manifest into this extension
            </summary>
            <param name="extensionManifest">Source extension manifest to copy to</param>
            <param name="includeContributions">If true, include contributions and contribution types in the copy</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ContributionBase">
            <summary>
            Base class shared by contributions and contribution types
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionBase.Extension">
            <summary>
            The extension that contains this contribution/type
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionBase.Id">
            <summary>
            Extension-relative identifier of the contribution/type
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionBase.Description">
            <summary>
            Description of the contribution/type
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionBase.GetIdentifier">
            <summary>
            Get the full (unique) identifier for this contribution/type, including the publisher/extension id prefix.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ContributionType">
            <summary>
            A contribution type, given by a json schema
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionType.Name">
            <summary>
            Friendly name of the contribution/type
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionType.Indexed">
            <summary>
            Controls whether or not contributions of this type have the type 
            indexed for queries. This allows clients to find all extensions 
            that have a contribution of this type. 
            
            NOTE: Only TrustedPartners are allowed to specify indexed 
            contribution types.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionType.Properties">
            <summary>
            Describes the allowed properties for this contribution type
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyDescription">
            <summary>
            Description about a property of a contribution type
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyDescription.Name">
            <summary>
            Name of the property
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyDescription.Description">
            <summary>
            Description of the property
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyDescription.Required">
            <summary>
            True if this property is required
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyDescription.Type">
            <summary>
            The type of value used for this property
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType">
            <summary>
            The type of value used for a property
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Unknown">
            <summary>
            Contribution type is unknown (value may be anything)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.String">
            <summary>
            Value is a string
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Uri">
            <summary>
            Value is a Uri
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Guid">
            <summary>
            Value is a GUID
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Boolean">
            <summary>
            Value is True or False
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Integer">
            <summary>
            Value is an integer
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Double">
            <summary>
            Value is a double
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.DateTime">
            <summary>
            Value is a DateTime object
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Dictionary">
            <summary>
            Value is a generic Dictionary/JObject/property bag
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Array">
            <summary>
            Value is an array
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Contributions.ContributionPropertyType.Object">
            <summary>
            Value is an arbitrary/custom object
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.Contribution">
            <summary>
            An individual contribution made by an extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Contribution.Type">
            <summary>
            Id of the Contribution Type
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Contribution.Targets">
            <summary>
            The ids of the contribution(s) that this contribution targets. (parent contributions)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.Contribution.Properties">
            <summary>
            Properties/attributes of this contribution
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.ContributionIdentifier">
            <summary>
            Identifier for contributions and contribution types
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionIdentifier.PublisherId">
            <summary>
            The publisher id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionIdentifier.ExtensionId">
            <summary>
            The extension id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionIdentifier.RelativeId">
            <summary>
            The extension-relative contribution id
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.ContributionIdentifier.Id">
            <summary>
            The full/unique identifier of the contribution/contributionType
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionIdentifier.Parse(System.String)">
            <summary>
            Parse a full contribution id into its identifying parts
            </summary>
            <param name="fullId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionIdentifier.Parse(Microsoft.VisualStudio.Services.Contributions.Extension,System.String)">
            <summary>
            Parse a full or partial contribution id
            </summary>
            <param name="fullId"></param>
            <param name="extensionNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.ContributionIdentifier.EnsureFullId(Microsoft.VisualStudio.Services.Contributions.Extension,System.String)">
            <summary>
            Examine the id and if it is a relative id (starts with the separator) then prefix it
            with the extension publisher/id info
            </summary>
            <param name="extension"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Contributions.SupportedExtension">
            <summary>
            Information about the extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.SupportedExtension.Publisher">
            <summary>
            Unique Identifier for this publisher
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.SupportedExtension.Extension">
            <summary>
            Unique Identifier for this extension
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Contributions.SupportedExtension.Version">
            <summary>
            Supported version for this extension
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.WebApi.ContributionsHttpClient.GetInstalledExtensionAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extensionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.WebApi.ContributionsHttpClient.GetInstalledExtensionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="contributionIds"></param>
            <param name="includeDisabledApps"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Contributions.WebApi.ContributionsHttpClient.GetInstalledExtensionByNameAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionChangeNotification">
            <summary>
            Depending on the event type, some or all of the fields will have valid values.
            
            Created: All fields will be filled in with the appropriate values.
            Updated: All fields will be filled in with the appropriate values.
            Deleted: PublisherName, ExtensionName, ExtensionId, Version
                will be supplied, null for version will mean all versions.
                
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionEventType">
            <summary>
            This defines the type of change that has occurred to the Extension.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionChangeEvent">
            <summary>
            Depending on the event type, some or all of the fields will have valid values.
            
            Created: All fields will be filled in with the appropriate values.
            Updated: All fields will be filled in with the appropriate values.
            Deleted: PublisherName, ExtensionName, ExtensionId, Version
            Shared/Unshared: The only type where the HostId field will be used
                will be supplied, null for version will mean all versions.
            Disabled: This will be event type when an extension is being disabled for everyone that has it installed.
            Enabled: This will be event type when a disabled extension is re-enabled.  All fields will be filled in with the appropriate values.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DataImport.DataImportStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DataImport.DataImportRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.DataImport.DataImportInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken.Token">
            <summary>
            This is computed and not returned in Get queries
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken.AlternateToken">
            <summary>
            This is populated when user requests a compact token. The alternate token value is self describing token.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration.PublicKey">
            <summary>
            Raw cert data string from public key. This will be used for authenticating medium trust clients.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Directories.DirectoryEntityDescriptor.HasExceptions">
            <summary>
            Indicates whether there are any exceptions associated with this entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Directories.DirectoryEntityDescriptor.CheckExceptions">
            <summary>
            Throws the single exception associated with this entity or an AggregateException if there are multiple.
            </summary>
            <returns>this</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.User">
            <summary>
            This type implies that the directory entity represents a user.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.Group">
            <summary>
            This type suggests that the directory entity represents a group.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryEntityType.Any">
            <summary>
            This type is used in directory entity descriptors and search requests to select any of the possible types.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.VisualStudioDirectory">
            <summary>
            This is a concrete directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.AzureActiveDirectory">
            <summary>
            This is a concrete directory.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.SourceDirectory">
            <summary>
            This is a virtual directory that represents the current request context's source.
            </summary>
            <remarks>
            <para>
            At the deployment level, this directory is equivalent to <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.Any"/>.
            </para>
            <para>
            At the application level or below this directory has the following interpretations:
            In an on-prem environment, this is an alias for <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.VisualStudioDirectory"/>.
            In a hosted environment with an MSA-backed account, this is an alias for <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.VisualStudioDirectory"/>.
            In a hosted environment with an AAD-backed account, this is an alias for <see cref="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.AzureActiveDirectory"/>.
            </para>
            </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Directories.DirectoryName.Any">
            <summary>
            This is a virtual directory that represents any source.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.CurrentVersion">
            <summary>
            Current resource version.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.Id">
            <summary>
            Identifer of the push on the external system. External-system specific.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.GitRef">
            <summary>
            Full name of the ref that was pushed to. For example: refs/heads/master.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.BeforeSha">
            <summary>
            SHA of the branch prior to the push.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.AfterSha">
            <summary>
            SHA of the branch after the push.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.Commits">
            <summary>
            Commits pushed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.Repo">
            <summary>
            Git repository of this push.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.PushedBy">
            <summary>
            User that pushed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush.ProjectId">
            <summary>
            A TFS project ID -- TODO find a better way of sending this info to build
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.Id">
            <summary>
            Identifer of the repo on the external system.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.Name">
            <summary>
            Name of the repo.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.Url">
            <summary>
            Clone URL of the repo. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo.WebUrl">
            <summary>
            Browser-viewable URL of the repo.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.Sha">
            <summary>
            Identifer of the commit.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.Message">
            <summary>
            User-supplied commit message.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.Author">
            <summary>
            User that authored the commit.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit.WebUrl">
            <summary>
            Browser-viewable URL of the commit.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitUser.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitUser.Email">
            <summary>
            Email address of the user.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FeatureAvailability.FeatureFlagPatch">
            <summary>
            This is passed to the FeatureFlagController to edit the status of a feature flag
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetAllFeatureFlagsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetAllFeatureFlagsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve a listing of all feature flags and their current states for a user
            </summary>
            <param name="userEmail">The email of the user to check</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAndUserEmailAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states for a user
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="userEmail">The email of the user to check</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.GetFeatureFlagByNameAndUserIdAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Retrieve information on a single feature flag and its current states for a user
            </summary>
            <param name="name">The name of the feature to retrieve</param>
            <param name="userId">The id of the user to check</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.UpdateFeatureFlagAsync(Microsoft.VisualStudio.Services.FeatureAvailability.FeatureFlagPatch,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Change the state of an individual feature flag
            </summary>
            <param name="state">State that should be set</param>
            <param name="name">The name of the feature to change</param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient.UpdateFeatureFlagAsync(Microsoft.VisualStudio.Services.FeatureAvailability.FeatureFlagPatch,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API] Change the state of an individual feature flag for a name
            </summary>
            <param name="state">State that should be set</param>
            <param name="name">The name of the feature to change</param>
            <param name="userEmail"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.ContainerOptions">
            <summary>
            Options a container can have.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerOptions.None">
            <summary>
            No option.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.ContainerItemType">
            <summary>
            Type of a container item.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemType.Any">
            <summary>
            Any item type.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemType.Folder">
            <summary>
            Item is a folder which can have child items.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemType.File">
            <summary>
            Item is a file which is stored in the file service.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.ContainerItemStatus">
            <summary>
            Status of a container item.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemStatus.Created">
            <summary>
            Item is created.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FileContainer.ContainerItemStatus.PendingUpload">
            <summary>
            Item is a file pending for upload.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.FileContainer">
            <summary>
            Represents a container that encapsulates a hierarchical file system.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.ScopeIdentifier">
            <summary>
            Project Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.ArtifactUri">
            <summary>
            Uri of the artifact associated with the container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.SecurityToken">
            <summary>
            Security token of the artifact associated with the container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Size">
            <summary>
            Total size of the files in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.Options">
            <summary>
            Options the container can have.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.SigningKeyId">
            <summary>
            Identifier of the optional encryption key.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.CreatedBy">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.DateCreated">
            <summary>
            Creation date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.ItemLocation">
            <summary>
            Location of the item resource.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.VisualStudio.Services.FileContainer.FileContainer.ContentLocation" -->
        <member name="T:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem">
            <summary>
            Represents an item in a container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ContainerId">
            <summary>
            Container Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ScopeIdentifier">
            <summary>
            Project Id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.Path">
            <summary>
            Unique path that identifies the item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ItemType">
            <summary>
            Type of the item: Folder, File or String.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.Status">
            <summary>
            Status of the item: Created or Pending Upload.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileLength">
            <summary>
            Length of the file. Zero if not of a file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileHash">
            <summary>
            Hash value of the file. Null if not a file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileEncoding">
            <summary>
            Encoding of the file. Zero if not a file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileType">
            <summary>
            Type of the file. Zero if not a file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.DateCreated">
            <summary>
            Creation date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.DateLastModified">
            <summary>
            Last modified date.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.CreatedBy">
            <summary>
            Creator.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.LastModifiedBy">
            <summary>
            Modifier.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ItemLocation">
            <summary>
            Location of the item resource.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.ContentLocation" -->
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.FileContainerItem.FileId">
            <summary>
            Id of the file content.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.QueryContainersAsync(System.Collections.Generic.List{System.Uri},System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Queries for file containers
            </summary>
            <param name="artifactUris">List of artifact uris associated with containers. If empty or null will return all containers.</param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.BrowseContainerItemsAsync(System.Int64,System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Browse for container items in a container.
            </summary>
            <param name="containerId">Id of the container to query.</param>
            <param name="itemPath">Path to folder or file. Can be empty or null to query from container root.</param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.QueryContainerItemsAsync(System.Int64,System.Guid,System.String,System.Object,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Queries for container items in a container.
            </summary>
            <param name="containerId">Id of the container to query.</param>
            <param name="scopeIdentifier">Id of the scope to query</param>
            <param name="itemPath">Path to folder or file. Can be empty or null to query from container root.</param>
            <param name="userState">User state</param>
            <param name="includeDownloadTickets">Whether to include download ticket(s) for the container item(s) in the result</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.QueryContainerItemsAsync(System.Int64,System.Guid,System.Boolean,System.String,System.Object,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Queries for container items in a container.
            </summary>
            <param name="containerId">Id of the container to query.</param>
            <param name="scopeIdentifier">Id of the scope to query</param>
            <param name="isShallow">Whether to just return immediate children items under the itemPath</param>
            <param name="itemPath">Path to folder or file. Can be empty or null to query from container root.</param>
            <param name="userState">User state</param>
            <param name="includeDownloadTickets">Whether to include download ticket(s) for the container item(s) in the result</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.UploadFileAsync(System.Int64,System.String,System.IO.Stream,System.Guid,System.Threading.CancellationToken,System.Int32,System.Boolean,System.Object,System.Boolean)">
            <summary>
            Uploads a file in chunks to the specified uri. 
            </summary>
            <param name="fileStream">Stream to upload.</param>
            <param name="requestUri">Upload uri.</param>
            <param name="isCompressed">Specifies if the content is compressed.</param>
            <param name="cancellationToken">CancellationToken to cancel the task</param>
            <returns>Http response message.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.DownloadFileAsync(System.Int64,System.String,System.Threading.CancellationToken,System.Guid,System.Object)">
            <summary>
            Download a file from the specified container.
            </summary>
            <param name="containerId"></param>
            <param name="itemPath"></param>
            <param name="cancellationToken"></param>
            <param name="userState"></param>
            <returns>A stream of the file content.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.DownloadItemAsZipAsync(System.Int64,System.String,System.Threading.CancellationToken,System.Guid,System.Object)">
            <summary>
            Download a file or folder as a zip file.
            </summary>
            <param name="containerId"></param>
            <param name="itemPath"></param>
            <param name="cancellationToken"></param>
            <param name="userState"></param>
            <returns>A stream of the zip file.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.DeleteContainerItem(System.Int64,System.String,System.Guid,System.Threading.CancellationToken,System.Object)">
            <summary>
            Delete a container item
            </summary>
            <param name="containerId"></param>
            <param name="itemPath"></param>
            <param name="cancellationToken"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient.TranslatedExceptions">
            <summary>
            Exceptions for file container errors
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputDataType">
            <summary>
            Enumerates data types that are supported as subscription input values.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.None">
            <summary>
            No data type is specified.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.String">
            <summary>
            Represents a textual value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.Number">
            <summary>
            Represents a numberic value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.Boolean">
            <summary>
            Represents a value of true or false.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.Guid">
            <summary>
            Represents a Guid.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputDataType.Uri">
            <summary>
            Represents a URI.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputDescriptor">
            <summary>
            Describes an input for subscriptions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Id">
            <summary>
            Identifier for the subscription input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Name">
            <summary>
            Localized name which can be shown as a label for the subscription input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Description">
            <summary>
            Description of what this input is used for
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.InputMode">
            <summary>
            Mode in which the value of this input should be entered
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.IsConfidential">
            <summary>
            Gets whether this input is confidential, such as for a password or application key
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.UseInDefaultDescription">
            <summary>
            Gets whether this input is included in the default generated action description.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.GroupName">
            <summary>
            The group localized name to which this input belongs and can be shown as a header
            for the container that will include all the inputs in the group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.ValueHint">
            <summary>
            A hint for input value. It can be used in the UI as the input placeholder.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Validation">
            <summary>
            Information to use to validate this input's value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.Values">
            <summary>
            Information about possible values for this input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.DependencyInputIds">
            <summary>
            The ids of all inputs that the value of this input is dependent on.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputDescriptor.HasDynamicValueInformation">
            <summary>
            If true, the value information for this input is dynamic and
            should be fetched when the value of dependency inputs change.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputFilter">
            <summary>
            Defines a filter for subscription inputs. The filter matches a set of inputs
            if any (one or more) of the groups evaluates to true.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilter.Conditions">
            <summary>
            Groups of input filter expressions. This filter matches a set of inputs
            if any (one or more) of the groups evaluates to true.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition">
            <summary>
            An expression which can be applied to filter a list of subscription inputs
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition.InputId">
            <summary>
            The Id of the input to filter on
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition.Operator">
            <summary>
            The operator applied between the expected and actual input value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition.InputValue">
            <summary>
            The "expected" input value to compare with the actual input value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputFilterCondition.CaseSensitive">
            <summary>
            Whether or not to do a case sensitive match
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputMode">
            <summary>
            Mode in which a subscription input should be entered (in a UI)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.None">
            <summary>
            This input should not be shown in the UI
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.TextBox">
            <summary>
            An input text box should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.PasswordBox">
            <summary>
            An password input box should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.Combo">
            <summary>
            A select/combo control should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.RadioButtons">
            <summary>
            Radio buttons should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.CheckBox">
            <summary>
            Checkbox should be shown(for true/false values)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.FormInput.InputMode.TextArea">
            <summary>
            A multi-line text area should be shown
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputValidation">
            <summary>
            Describes what values are valid for a subscription input
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputValues">
            <summary>
            Information about the possible/allowed values for a given subscription input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.InputId">
            <summary>
            The id of the input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.DefaultValue">
            <summary>
            The default value to use for this input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.PossibleValues">
            <summary>
            Possible values that this input can take
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.IsLimitedToPossibleValues">
            <summary>
            Should the value be restricted to one of the values in the PossibleValues (True)
            or are the values in PossibleValues just a suggestion (False)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.IsDisabled">
            <summary>
            Should this input be disabled
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.IsReadOnly">
            <summary>
            Should this input be made read-only
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValues.Error">
            <summary>
            Errors encountered while computing dynamic values.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputValue">
            <summary>
            Information about a single value for an input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValue.Value">
            <summary>
            The value to store for this input
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValue.DisplayValue">
            <summary>
            The text to show for the display of this value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValue.Data">
            <summary>
            Any other data about this input
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.FormInput.InputValuesError">
            <summary>
            Error information related to a subscription input value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValuesError.Message">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValuesQuery.Resource">
            <summary>
            Subscription containing information about the publisher/consumer and the current input values
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.FormInput.InputValuesQuery.InputValues">
            <summary>
            The input values to return on input, and the result from the consumer on output.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase.GetMruIdentitiesAsync(System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="identityId"></param>
            <param name="containerId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase.SetMruIdentitiesAsync(System.Collections.Generic.IEnumerable{System.Guid},System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="identityIds"></param>
            <param name="identityId"></param>
            <param name="containerId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase.UpdateMruIdentitiesAsync(Microsoft.VisualStudio.Services.Identity.Mru.MruIdentitiesUpdateData,System.String,System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="updateData"></param>
            <param name="identityId"></param>
            <param name="containerId"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.ChangedIdentities">
            <summary>
            Container class for changed identities
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentities.Identities">
            <summary>
            Changed Identities
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentities.SequenceContext">
            <summary>
            Last Identity SequenceId
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext">
            <summary>
            Context class for changed identities
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext.IdentitySequenceId">
            <summary>
            Last Identity SequenceId
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext.GroupSequenceId">
            <summary>
            Last Group SequenceId
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupMembership">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.Identity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.Descriptor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.ProviderDisplayName">
            <summary>
            The display name for the identity as specified by the source identity provider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.CustomDisplayName">
            <summary>
            The custom display name for the identity (if any). Setting this property to an empty string will clear the existing
            custom display name. Setting this property to null will not affect the existing persisted value
            (since null values do not get sent over the wire or to the database)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.DisplayName">
            <summary>
            This is a computed property equal to the CustomDisplayName (if set) or the ProviderDisplayName.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.UniqueUserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.IsContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.Members">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.MemberOf">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.MemberIds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.MemberOfIds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.MasterId">
             <summary>
            
             </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Identity.GetProperty``1(System.String,``0)">
            <summary>
            Generic Property accessor. Returns default value of T if not found
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Identity.TryGetProperty(System.String,System.Object@)">
            <summary>
            Property accessor. value will be null if not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Identity.SetProperty(System.String,System.Object)">
            <summary>
            Internal function to initialize persisted property.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Identity.HasModifiedProperties">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Identity.ResetModifiedProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Identity.SetAllModifiedProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Identity.Clone(System.Boolean)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Identity.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.KeyValueOfStringString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.KeyValueOfStringString.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.KeyValueOfStringString.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.KeyValueOfStringString.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor">
            <summary>
            An Identity descriptor is a wrapper for the identity type (Windows SID, Passport)
            along with a unique identifier such as the SID or PUID.
            </summary>
            <remarks>
            This is the only legacy type moved into VSS (by necessity, it is used everywhere)
            so it must support both Xml and DataContract serialization
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.#ctor">
            <summary>
            Default constructor, for Xml serializer only.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.#ctor(System.String,System.String,System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.#ctor(Microsoft.VisualStudio.Services.Identity.IdentityDescriptor)">
            <summary>
            Copy Constructor
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.IdentityType">
            <summary>
            Type of descriptor (for example, Windows, Passport, etc.).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.Identifier">
            <summary>
            The unique identifier for this identity, not exceeding 256 chars, 
            which will be persisted.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.Data">
            <summary>
            Any additional data specific to identity type.
            </summary>
            <remarks>
            Not serialized under either method.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.IdentityDescriptor.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityDescriptorComparer">
            <summary>
            Class used for comparing IdentityDescriptors
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.ReadOnlyIdentityDescriptor.#ctor">
            <summary>
            Default constructor, for Xml serializer only.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityDescriptorConverter">
            <summary>
            Converter to support data contract serialization.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityServiceBehavior">
            <summary>
            Controls the behavior of Identity operations. - DEPRECATED.  HAS NO USE. REMOVE DURING S67.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupScopeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.AccountName">
            <summary>
            NT account name (domain\alias)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.AdministratorsGroup">
            <summary>
            Find project admin group
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.Identifier">
            <summary>
            Find the identity using the identifier
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.MailAddress">
            <summary>
            Email address
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.General">
             <summary>
             A general search for an identity. 
             </summary>
             <remarks>
             This is the default search factor for shorter overloads of ReadIdentity, and typically the correct choice for user input.
             
             Use the general search factor to find one or more identities by one of the following properties:
             * Display name
             * account name
             * UniqueName
            
             UniqueName may be easier to type than display name. It can also be used to indicate a single identity when two or more identities share the same display name (e.g. "John Smith")
             </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.Alias">
            <summary>
            Alternate login username
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter.Domain">
            <summary>
            Find identity using Domain/TenantId
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.None">
            <summary>
            Query will not return any membership data
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.Direct">
            <summary>
            Query will return only direct membership data
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.Expanded">
            <summary>
            Query will return expanded membership data
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.ExpandedUp">
            <summary>
            Query will return expanded up membership data (parents only)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Identity.QueryMembership.ExpandedDown">
            <summary>
            Query will return expanded down membership data (children only)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityScope">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.LocalScopeId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.ScopeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.Administrators">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.IsGlobal">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.SecuringHostId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.IdentityScope.IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityTypeMapper">
            <summary>
            Helper for Component Layer that provides mapping between tbl_Identity's TypeId and Descriptor's IdentityType.
            Migrated from DB(tbl_IdentityType) to Application Layer in M87
            Note: Support for any new Identity type should be having a mapping here.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupCreationException">
            <summary>
            The group you are creating already exists, thrown by the data tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityDomainMismatchException">
            <summary>
            IMS domain is incorrect for operation
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddMemberCyclicMembershipException">
            <summary>
            You are trying to add a group that is a parent group of the current group, throw
            by the data tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupScopeCreationException">
            <summary>
            You are trying to create a group scope that already exists
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddMemberIdentityAlreadyMemberException">
            <summary>
            Trying to add a member to a group that is already a member of the group, thrown by the data tier.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RemoveSelfFromAdminGroupException">
            <summary>
            You can't remove yourself from the global namespace admins group and lock yourself out of your collection/hosting account.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RemoveGroupMemberNotMemberException">
            <summary>
            Group member you are trying to delete was not a member of the group.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalMemberException">
            <summary>
            You can only add Windows users to the License group
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalWindowsIdentityException">
            <summary>
            Cannot add windows identity to hosted deployment
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalInternetIdentityException">
            <summary>
            Cannot add internet identity to on premise deployment
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RemoveNonexistentGroupException">
            <summary>
            Trying to remove a group that doesn't exist, thrown by the data tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.RemoveSpecialGroupException">
            <summary>
            You can't remove any of the special groups: the global administrators group, the
            service users group, the team foundation valid users group, or a project administration
            group.  Thrown by the data tier.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.FindGroupSidDoesNotExistException">
            <summary>
            Group you were looking up does not exist, thrown by the data tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupRenameException">
            <summary>
            Group rename error, new name already in use
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.AddProjectGroupProjectMismatchException">
            <summary>
            You cannot add a project group to a project group in a different project
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.GroupScopeDoesNotExistException">
            <summary>
            Unable to locate project for the project uri passed in
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.NotApplicationGroupException">
            <summary>
            This exception is thrown when a user tries to add a group that is
            not an application group.  We do not modify the memberships of Windows groups.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.ModifyEveryoneGroupException">
            <summary>
            You must specify a group when removing members from a group, thrown by the app tier
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityNotFoundException">
            <summary>
            ReadIdentityFromSource returned null and we need an identity to continue the operation
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityNotServiceIdentityException">
            <summary>
            The identity is not a service identity
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityAlreadyExistsException">
            <summary>
            The identity already exists
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.NotASecurityGroupException">
            <summary>
            This exception is thrown when a user tries to add a distribution list
            to a group.  We only allow security groups to used.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Identity.IdentityProviderUnavailableException">
            <summary>
            Identity provider not available
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Reads all identities
            </summary>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor},Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in descriptors
            </summary>
            <param name="descriptors">List of IdentityDescriptors to query for.</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(System.Collections.Generic.IList{System.Guid},Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the passed in identifiers
            </summary>
            <param name="identityIds">Guids representing unique identifiers for the identities</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.ReadIdentitiesAsync(Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter,System.String,Microsoft.VisualStudio.Services.Identity.ReadIdentitiesOptions,Microsoft.VisualStudio.Services.Identity.QueryMembership,System.Collections.Generic.IEnumerable{System.String},System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns identities matching the requested search factor and value
            </summary>
            <param name="searchFactor">Search factor to query for.</param>
            <param name="factorValue">The value for the search factor.</param>
            <param name="queryMembership">Instructs the server whether to query for membership information.</param>
            <param name="propertyNameFilters">Instructs the server which extended properties to query for.</param>
            <param name="userState">Additional client state passed by caller.</param>
            <returns>A Task which when complete, contains the list of identities.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient.TranslatedExceptions">
            <summary>
            Exceptions for account errors
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement">
            <summary>
            Represents a license granted to a user in an account
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.AccountId">
            <summary>
            Gets or sets the id of the account to which the license belongs
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.UserId">
            <summary>
            Gets or sets the id of the user to which the license belongs
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.License">
            <summary>
            Gets or sets the <see cref="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.License"/> for the entitlement
            </summary>        
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.AssignmentDate">
            <summary>
            Gets or sets the date the license was assigned
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlement.LastAccessedDate">
            <summary>
            Gets or sets the date of the user last sign-in to this account
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.AccountEntitlementUpdateModel">
            <summary>
            Model for updating an AccountEntitlement for a user, used for the Web API
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountEntitlementUpdateModel.License">
            <summary>
            Gets or sets the license for the entitlement
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.AccountLicense">
            <summary>
            Represents an Account license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.EarlyAdopter">
            <summary>
            An Early Adopter License
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Stakeholder">
            <summary>
            A Stakeholder License
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Express">
            <summary>
            An Express License
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Professional">
            <summary>
            A Professional License
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Advanced">
            <summary>
            An Advanced License
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.#ctor(Microsoft.VisualStudio.Services.Licensing.AccountLicenseType)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.VisualStudio.Services.Licensing.AccountLicense"/> class
            </summary>
            <param name="license">The type of license</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.AccountLicense.License">
            <summary>
            Gets the license type for the license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.CompareTo(Microsoft.VisualStudio.Services.Licensing.AccountLicense)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />. </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.Compare(Microsoft.VisualStudio.Services.Licensing.AccountLicense,Microsoft.VisualStudio.Services.Licensing.AccountLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>A value that indicates the relative order of the objects being compared.</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.op_GreaterThan(Microsoft.VisualStudio.Services.Licensing.AccountLicense,Microsoft.VisualStudio.Services.Licensing.AccountLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is greater than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.op_LessThan(Microsoft.VisualStudio.Services.Licensing.AccountLicense,Microsoft.VisualStudio.Services.Licensing.AccountLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is less than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.AccountLicense.GetLicense(Microsoft.VisualStudio.Services.Licensing.AccountLicenseType)">
            <summary>
            Gets a <see cref="P:Microsoft.VisualStudio.Services.Licensing.AccountLicense.License"/> instance for the provided license type
            </summary>
            <param name="license">The type of license</param>
            <returns>A license for the provided license type</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><em>license</em> was not in the list of allowed values</exception>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.None">
            <summary>
            No service rights. The user cannot access the account
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.Express">
            <summary>
            Default or minimum service level
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.Advanced">
            <summary>
            Premium service level - either by purchasing on the Azure portal or by purchasing the appropriate MSDN subscription
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.AdvancedPlus">
            <summary>
            Only available to a specific set of MSDN Subscribers
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel.Stakeholder">
            <summary>
            Stakeholder service level
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.IClientRight">
            <summary>
            Container for client licensing rights
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.IServiceRight">
            <summary>
            Container for service licensing rights
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.IUsageRight">
            <summary>
            Container for licensing rights
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.IUsageRight.Attributes">
            <summary>
            Rights data
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.IUsageRight.ExpirationDate">
            <summary>
            Rights expiration
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.IUsageRight.Name">
            <summary>
            Name, uniquely identifying a usage right
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.IUsageRight.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.License">
            <summary>
            The base class for a specific license source and license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.License.None">
            <summary>
            Represents a non-existant license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.License.Auto">
            <summary>
            Represents a license that is auto assigned at user signin (e.g. from msdn licenses)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.#ctor(Microsoft.VisualStudio.Services.Licensing.LicensingSource,System.Type,System.Int32)">
            <summary>
            Initializes a new instance of the License type
            </summary>
            <param name="source">The source of the license</param>
            <param name="licenseEnumType">The type for the license enum</param>
            <param name="license">The value for the license</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.License.Source">
            <summary>
            Gets the source of the license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.GetLicenseAsInt32">
            <summary>
            Gets the internal value for the license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Equals(Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Determines whether the specified <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> is equal to the current <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.ToString">
            <summary>
             Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Parse(System.String)">
            <summary>
            Parses the provided text into a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>
            </summary>
            <param name="text">The text to parse</param>
            <returns>The parsed <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/></returns>
            <exception cref="T:System.FormatException">The <em>text</em> was in the wrong format</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Parse(System.String,System.Boolean)">
            <summary>
            Parses the provided text into a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>
            </summary>
            <param name="text">The text to parse</param>
            <param name="ignoreCase">A value indicating whether to ignore the case of the text</param>
            <returns>The parsed <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/></returns>
            <exception cref="T:System.FormatException">The <em>text</em> was in the wrong format</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.TryParse(System.String,Microsoft.VisualStudio.Services.Licensing.License@)">
            <summary>
            Tries to parse the provided text into a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>
            </summary>
            <param name="text">The text to parse</param>
            <param name="license">The parsed <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/></param>
            <returns>True if the <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> could be parsed; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.TryParse(System.String,System.Boolean,Microsoft.VisualStudio.Services.Licensing.License@)">
            <summary>
            Tries to parse the provided text into a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/>
            </summary>
            <param name="text">The text to parse</param>
            <param name="ignoreCase">A value indicating whether to ignore the case of the text</param>
            <param name="license">The parsed <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/></param>
            <returns>True if the <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> could be parsed; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.Equals(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Gets a value indicating whether the two provided values are equivalent
            </summary>
            <param name="left">The first value</param>
            <param name="right">The second value</param>
            <returns>True if both values are equivalent; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.IsNullOrNone(Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Gets a value indicating whether the license is null or <see cref="F:Microsoft.VisualStudio.Services.Licensing.License.None"/>
            </summary>
            <param name="license">The license</param>
            <returns>true if the license is either null or <see cref="F:Microsoft.VisualStudio.Services.Licensing.License.None"/>; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.GetLicense(Microsoft.VisualStudio.Services.Licensing.LicensingSource,System.Int32)">
            <summary>
            Gets the license for the provided source and license type
            </summary>
            <param name="source">The source</param>
            <param name="license">The license type</param>
            <returns>The license</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.op_Equality(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Gets a value indicating whether the two provided values are equivalent
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <returns>True if both values are equivalent; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.op_Inequality(Microsoft.VisualStudio.Services.Licensing.License,Microsoft.VisualStudio.Services.Licensing.License)">
            <summary>
            Gets a value indicating whether the two provided values are not equivalent
            </summary>
            <param name="left">The first operand</param>
            <param name="right">The second operand</param>
            <returns>True if values are not equivalent; otherwise, false</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.License.NoLicense">
            <summary>
            A concrete <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> that represents no license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.NoLicense.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Services.Licensing.License.NoLicense"/> class
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.NoLicense.ToString">
            <summary>
             Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense.Msdn">
            <summary>
            Represents an Auto license where the source provider is MSDN
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense"/> class
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense.GetLicense(Microsoft.VisualStudio.Services.Licensing.LicensingSource)">
            <summary>
            Gets a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense"/> instance for the provided licensing source
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.License.AutoLicense.ToString">
            <summary>
             Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter">
            <summary>
            Converts between a <see cref="T:Microsoft.VisualStudio.Services.Licensing.License"/> and a JSON-serialized license string
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object</param>
            <returns>true if this instance can convert the specified object type; otherwise, false.</returns>        
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The Newtonsoft.Json.JsonReader to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The Newtonsoft.Json.JsonWriter to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter">
            <summary>
            Performs type conversion for a License
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts the given value object to the specified type, using the specified context and culture information.</summary>
            <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object" /> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" /> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Returns whether the given value object is valid for this type and for the specified context.</summary>
            <returns>true if the specified value is valid for this object; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
            <param name="value">The <see cref="T:System.Object" /> to test for validity. </param>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Licensing.MsdnLicense">
            <summary>
            Represents an Msdn license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Eligible">
            <summary>
            The account user is MSDN Eligible
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Professional">
            <summary>
            The account user has an MSDN Professional license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Platforms">
            <summary>
            The account user has an MSDN Platforms license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.TestProfessional">
            <summary>
            The account user has an MSDN TestProfessional license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Premium">
            <summary>
            The account user has an MSDN Premium license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Ultimate">
            <summary>
            The account user has an MSDN Ultimate license
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Enterprise">
            <summary>
            The account user has an MSDN Enterprise license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.#ctor(Microsoft.VisualStudio.Services.Licensing.MsdnLicenseType)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.VisualStudio.Services.Licensing.MsdnLicense"/> class
            </summary>
            <param name="license">The type of license</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.License">
            <summary>
            Gets the license type for the license
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.CompareTo(Microsoft.VisualStudio.Services.Licensing.MsdnLicense)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />. </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.Compare(Microsoft.VisualStudio.Services.Licensing.MsdnLicense,Microsoft.VisualStudio.Services.Licensing.MsdnLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>A value that indicates the relative order of the objects being compared.</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.op_GreaterThan(Microsoft.VisualStudio.Services.Licensing.MsdnLicense,Microsoft.VisualStudio.Services.Licensing.MsdnLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is greater than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.op_LessThan(Microsoft.VisualStudio.Services.Licensing.MsdnLicense,Microsoft.VisualStudio.Services.Licensing.MsdnLicense)">
            <summary>
            Compares two objects of the same type.
            </summary>
            <returns>True if the left-hand value is less than the right-hand value; otherwise, false</returns>
            <param name="left">The left-hand operand to compare</param>
            <param name="right">The right-hand operand to compare</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.GetLicense(Microsoft.VisualStudio.Services.Licensing.MsdnLicenseType)">
            <summary>
            Gets a <see cref="P:Microsoft.VisualStudio.Services.Licensing.MsdnLicense.License"/> instance for the provided license type
            </summary>
            <param name="license">The type of license</param>
            <returns>A license for the provided license type</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><em>license</em> was not in the list of allowed values</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Licensing.Client.LicensingHttpClient.CreateContentFor``1(``0)">
            <summary>
            Creates an <see cref="T:System.Net.Http.ObjectContent`1"/> for the specified value using the current <see cref="P:Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.Formatter"/>
            </summary>
            <typeparam name="T">The type for the value</typeparam>
            <param name="value">The value</param>
            <returns>An <see cref="T:System.Net.Http.ObjectContent`1"/> for the provided value</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.AccessMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.Moniker">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.AccessPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.AccessMapping.ServiceOwner">
            <summary>
            The service which owns this access mapping e.g. TFS, ELS, etc.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.AccessMapping.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.ConnectionData">
            <summary>
            Data transfer class that holds information needed to set up a 
            connection with a VSS server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.AuthenticatedUser">
            <summary>
            The Id of the authenticated user who made this request. More information about the user can be
            obtained by passing this Id to the Identity service
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.AuthorizedUser">
            <summary>
            The Id of the authorized user who made this request. More information about the user can be
            obtained by passing this Id to the Identity service
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.InstanceId">
            <summary>
            The instance id for this server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.LocationServiceData">
            <summary>
            Data that the location service holds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ConnectionData.WebApplicationRelativeDirectory">
            <summary>
            The virtual directory of the host we are talking to.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ConnectionData.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.LocationServiceData">
            <summary>
            Data transfer class used to transfer data about the location
            service data over the web service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.ServiceOwner">
            <summary>
            The identifier of the deployment which is hosting this location data
            (e.g. SPS, TFS, ELS, Napa, etc.)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.AccessMappings">
            <summary>
            Data about the access mappings contained by this location service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.ClientCacheFresh">
            <summary>
            Data that the location service holds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.ClientCacheTimeToLive">
            <summary>
            The time to live on the location service cache.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.DefaultAccessMappingMoniker">
            <summary>
            The default access mapping moniker for the server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.LastChangeId">
            <summary>
            The obsolete id for the last change that
            took place on the server (use LastChangeId64).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.LastChangeId64">
            <summary>
            The non-truncated 64-bit id for the last change that
            took place on the server.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationServiceData.ServiceDefinitions">
            <summary>
            Data about the service definitions contained by this location service.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.LocationServiceData.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.RelativeToSetting">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.ServiceInterfaces">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Location.LocationServiceConstants.ApplicationIdentifier">
            <summary>
            If a Location Service has an entry for an application location service, that
            location service definition will have an identifier of this value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Location.LocationServiceConstants.RootIdentifier">
            <summary>
            Pointer to the root location service instance
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Location.LocationServiceConstants.SelfReferenceIdentifier">
            <summary>
            All Location Services have a reference to their own service definition.  That
            service definition has an identifier of this value.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.LocationMapping">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationMapping.AccessMappingMoniker">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.LocationMapping.Location">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.LocationMapping.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Location.ServiceDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ServiceType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.Identifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.RelativeToSetting">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.RelativePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ServiceOwner">
            <summary>
            The service which owns this definition e.g. TFS, ELS, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.LocationMappings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.GetProperty``1(System.String,``0)">
            <summary>
            Generic Property accessor. Returns default value of T if not found
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.TryGetProperty(System.String,System.Object@)">
            <summary>
            Property accessor. value will be null if not found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.SetProperty(System.String,System.Object)">
            <summary>
            Internal function to initialize persisted property.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.HasModifiedProperties">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ResetModifiedProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ResourceVersion">
            <summary>
            The current resource version supported by this resource location. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.MinVersion">
            <summary>
            Minimum api version that this resource supports. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.MinVersionString">
            <summary>
            Minimum api version that this resource supports. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.MaxVersion">
            <summary>
            Maximum api version that this resource supports (current server version for this resource). Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.MaxVersionString">
            <summary>
            Maximum api version that this resource supports (current server version for this resource). Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ReleasedVersion">
            <summary>
            The latest version of this resource location that is in "Release" (non-preview) mode. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.ServiceDefinition.ReleasedVersionString">
            <summary>
            The latest version of this resource location that is in "Release" (non-preview) mode. Copied from <c>ApiResourceLocation</c>.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.GetLocationMapping(Microsoft.VisualStudio.Services.Location.AccessMapping)">
            <summary>
                Returns the LocationMapping for the AccessMapping provided or null
                if this ServiceDefinition does not have a LocationMapping for the provided
                AccessMapping. This function will always return null if it is called
                on a non-relative ServiceDefinition.
            </summary>
            <param name="accessMapping">
                The AccessMapping to find the LocationMapping for.
            </param>
            <returns>
                The LocationMapping for the AccessMapping provided or null if this 
                ServiceDefinition does not have a LocationMapping for the provided
                AccessMapping. This function will always return null if it is called
                on a non-relative ServiceDefinition.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Location.ServiceDefinition.AddLocationMapping(Microsoft.VisualStudio.Services.Location.AccessMapping,System.String)">
            <summary>
            Adds a location mapping for the provided access mapping and location
            to the service definition.  Note that if a mapping already exists for
            the provided access mapping, it will be overwritten.
            </summary>
            <param name="accessMapping">The access mapping this location mapping is for.
            This access mapping must already be registered in the LocationService.  To create
            a new access mapping, see LocationService.ConfigureAccessMapping</param>
            <param name="location">This value must be null if the RelativeToSetting
            for this ServiceDefinition is something other than FullyQualified.  If
            this ServiceDefinition has a RelativeToSetting of FullyQualified, this
            value must not be null and should be the location where this service resides
            for this access mapping.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient.TranslatedExceptions">
            <summary>
            Exceptions for location errors
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Notification.RecipientMetadata">
            <summary>
            Notification-related metadata for a specific user
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.AccessTokenErrorResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.AccessTokenErrorResponse.Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.AccessTokenResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.AccessTokenResponse.AccessToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.AccessTokenResponse.TokenType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.AccessTokenResponse.ExpiresIn">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.AccessTokenResponse.RefreshToken">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.OAuth.AuthorizationResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.OAuth.AuthorizationResponse.RedirectLocation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.Client.OAuthHttpClient.HandleResponse(System.Net.Http.HttpResponseMessage)">
            <summary>
            There are 3 error response kinds:
              1. An authorization error with no redirect URL.
              2. An authorization error with redirect URL.
              3. A token request error.
              
            If the status code is not 302, we will throw an exception with the response body's content
            read as a string, which contains the specific error code.
            
            http://tools.ietf.org/html/rfc6749#section-4.1.2
            http://tools.ietf.org/html/rfc6749#section-5.2
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.Client.OAuthHttpClient.AuthorizeAsync(System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="clientId"></param>
            <param name="responseType"></param>
            <param name="redirectUri"></param>
            <param name="scope"></param>
            <param name="state"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.OAuth.Client.OAuthHttpClient.CreateTokenAsync(System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="grantType"></param>
            <param name="code"></param>
            <param name="refreshToken"></param>
            <param name="scope"></param>
            <param name="redirectUri"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.Operation">
            <summary>
            Represents an async operation and its progress or result information.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Operations.Operation.#ctor(Microsoft.VisualStudio.Services.Operations.OperationReference)">
            <summary>
            Initializes the Operation with the values from the OperationReference.
            </summary>
            <param name="operationReference">Reference upon which to base this Operation.</param>
            <remarks>Will initialize the Links and add the "self" reference.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.Operation.Links">
            <summary>
            The links to other objects related to this object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.Operation.ResultMessage">
            <summary>
            The result message which is generally not set.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationReference">
            <summary>
            Reference for an async operation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Operations.OperationReference.#ctor">
            <summary>
            Default constructor used for serialization.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationReference.Id">
            <summary>
            The identifier for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationReference.Status">
            <summary>
            The current status of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationReference.Url">
            <summary>
            Url to get the full object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Operations.OperationReference.InternalResultMessage">
            <summary>
            This is an internal member that is used by the Operation class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationStatus">
            <summary>
            The status of the async operation.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.NotSet">
            <summary>
            The operation object does not have the status set.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.Queued">
            <summary>
            The operation has been queued.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.InProgress">
            <summary>
            The operation is in progress.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.Cancelled">
            <summary>
            The operation was cancelled by the user.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.Succeeded">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Operations.OperationStatus.Failed">
            <summary>
            The operation completed with a failure.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationNotFoundException">
            <summary>
            This exception is thrown when we can't find an operation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationUpdateFailedException">
            <summary>
            This exception is thrown when we fail to update an operation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Operations.OperationsHttpClient">
            <summary>
            HttpClient for operations.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Operations.OperationsHttpClient.GetOperation(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            Get an operation by Id.
            </summary>
            <param name="id">The id of the operation.</param>
            <param name="userState"></param>
            <returns>The operation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.AttributeDescriptor.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.AttributeDescriptorComparer">
            <summary>
            Class used for comparing AttributeDescriptors
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.AttributesQueryContext.#ctor(Microsoft.VisualStudio.Services.Profile.AttributesScope,System.DateTimeOffset,System.String)">
            <remarks>
            Deprecated constructor. The operation to 'get attributes since a certain point in time' is now deprecated.
            </remarks>>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.AttributesScope">
            <summary>
            Used to specify the scope of a set of attributes.
            </summary>
            <remarks>
            A profile attribute is either a core attribute or an attribute beloging to some application container.
            A core attribute belongs to scope AttributesScope.Core.
            An attribute stored under some application container belongs to scope AttributesScope.Application.
            An attribute always belongs to scope AttributesScope.Core | AttributesScope.Application.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.AvatarSize">
            <summary>
            Small = 34 x 34 pixels; Medium = 44 x 44 pixels; Large = 220 x 220 pixels
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Profile.ProfilePageType">
            <summary>
            Types of Profile pages
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.SetAttributeAsync(Microsoft.VisualStudio.Services.Profile.ProfileAttribute,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates (conditionally) the value of a profile attribute if it already exists.
            </summary>
            <remarks>If attribute does not exist then a new attribute is added.
            If the timestamp in the parameter <paramref name="newAttribute"/> is not the default value of <see cref="T:System.DateTimeOffset"/>, 
            then the attribute is only updated if the paramter <paramref name="newAttribute"/> has a newer timestamp than the attribute stored in the server.
            </remarks> 
            <exception cref="T:Microsoft.VisualStudio.Services.Profile.NewerVersionOfResourceExistsException">If the attribute in the server has a newer timestamp.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAttributeAsync(Microsoft.VisualStudio.Services.Profile.AttributeDescriptor,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns an attribute with descriptor = <paramref name="descriptor"/>.
            </summary>
            <param name="descriptor">Descriptor of the attribute</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.DeleteAttributeAsync(Microsoft.VisualStudio.Services.Profile.ProfileAttribute,System.Object,System.Threading.CancellationToken)">
            <summary>
            Deletes (conditionally) a profile attribute.
            </summary>
            <remarks>
            If the timestamp in the parameter <paramref name="attributeToDelete"/> is not the default value of <see cref="T:System.DateTimeOffset"/>, 
            then the attribute is only deleted if the paramter <paramref name="attributeToDelete"/> has a timestamp which is not older than the
            timestamp of the attribute in the server.
            </remarks>
            <exception cref="T:Microsoft.VisualStudio.Services.Profile.ProfileAttributeNotFoundException">If named attribute does not exist on the server.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetProfileAsync(Microsoft.VisualStudio.Services.Profile.ProfileQueryContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.UpdateProfileAsync(Microsoft.VisualStudio.Services.Profile.Profile,System.Object,System.Threading.CancellationToken)">
            <summary>
            Partially updates the content of a profile by comparing changes with the contents of a given profile in parameter <paramref name="profile"/>.
            </summary>
            <remarks>
            A profile property is not updated if the property is set to null in parameter <paramref name="profile"/>.
            A profile attribute is not updated if the attribute is missing from the list of attributes in <paramref name="profile"/>.
            </remarks>
            <exception cref="T:Microsoft.VisualStudio.Services.Profile.NewerVersionOfProfileExists">If the revision in the parameter <paramref name="profile"/> does not match to the current revision</exception>
            <param name="id">The Guid of the Identity with which the Profile is associated. There exists a 1 to 1 mapping between an Identity and a Profile</param>
            <param name="profile">Container object that contains the changes to be applied to the profile</param>
            <returns>The revision of the updated profile</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAvatarAsync(Microsoft.VisualStudio.Services.Profile.AvatarSize,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the avatar in the profile of the authenticated identity.
            </summary>
            <param name="size">Parameter to specify the desired size for the avatar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAvatarAsync(Microsoft.VisualStudio.Services.Profile.Avatar,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the avatar in the profile of the authenticated identity.
            </summary>
            <param name="currentCopy">Parameter to specify the current copy of the avatar. 
            If the server does not have a newer version of the avatar then avatar objects are not sent over the wire.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.SetAvatarAsync(Microsoft.VisualStudio.Services.Profile.Avatar,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the avatar conditionally.
            </summary>
            <remarks>
            If the timestamp in the parameter <paramref name="newAvatar"/> is not the default value of <see cref="T:System.DateTimeOffset"/>, 
            then the avatar is only updated if the paramter <paramref name="newAvatar"/> has a newer timestamp than the avatar stored in the server.
            </remarks>
            <exception cref="T:Microsoft.VisualStudio.Services.Profile.NewerVersionOfResourceExistsException">If the avatar in the server has a newer timestamp.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetPublicAliasAsync(System.Object)">
            <summary>
            Returns the public alias of the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.SetPublicAliasAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the public alias of the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetDisplayNameAsync(System.Object)">
            <summary>
            Returns the display name of the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.SetDisplayNameAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the display name of the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetCountryNameAsync(System.Object)">
            <summary>
            Returns the country name of the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.SetCountryNameAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Updates the country name of the profile of the authenticated identity.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetAttributesAsync(Microsoft.VisualStudio.Services.Profile.AttributesQueryContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the attributes stored under the profile of the authenticated identity.
            </summary>
            <remarks>
            If an attribute has been deleted since the point in time specified in <paramref name="attributesQueryContext"/>, then the attribute is returned
            with it's value set to null.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetServiceSettingAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns requested service setting
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetCountriesAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the list of supported countries.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.GetProfileLocationsAsync(Microsoft.VisualStudio.Services.Profile.ProfilePageType,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the location to a profile page.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient.LookUpRegionBasedOnIpAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns the GeoRegion for an given ipaddress
            </summary>
            <param name="ipaddress"></param>
            <param name="userState"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Profile.ProfileExtensions.ApplyAttributesChanges(Microsoft.VisualStudio.Services.Profile.Profile,System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Profile.ProfileAttribute},System.Collections.Generic.IList{Microsoft.VisualStudio.Services.Profile.CoreProfileAttribute})">
            <summary>
            Updates the the profile by applying the changes in the parameter <paramref name="changedApplicationAttributes"/>.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.AccessControlEntry">
            <summary>
            Class for encapsulating the allowed and denied permissions for a given IdentityDescriptor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.AccessControlEntry.#ctor(Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,System.Int32,System.Int32,Microsoft.VisualStudio.Services.Security.AceExtendedInformation)">
            <summary>
            Creates an AccessControlEntry based on the supplied information.
            </summary>
            <param name="descriptor"> The descriptor for the user this AccessControlEntry applies to.</param>
            <param name="allow">The allowed permissions for this descriptor.</param>
            <param name="deny">The denied permissions for this descriptor.</param>
            <param name="extendedInfo">The extended info object to associate with this AccessControlEntry.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlEntry.Descriptor">
            <summary>
            The descriptor for the user this AccessControlEntry applies to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlEntry.Allow">
            <summary>
            The set of permission bits that represent the actions that the associated descriptor is allowed to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlEntry.Deny">
            <summary>
            The set of permission bits that represent the actions that the associated descriptor is not allowed to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlEntry.ExtendedInfo">
            <summary>
            This value, when set, reports the inherited and effective information for 
            the associated descriptor. This value is only set on AccessControlEntries returned
            by the QueryAccessControlList(s) call when its includeExtendedInfo parameter is set to true.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry">
            <summary>
            Represents a raw access control entry from a remote backing store.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.#ctor(System.Guid,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates an AccessControlEntryDetails based on the supplied information.
            </summary>
            <param name="token">The token of the access control list in which this access control entry belongs</param>
            <param name="subjectId">The identity (or subject) of the access control entry.</param>        
            <param name="allow">The allowed permissions for this descriptor.</param>
            <param name="deny">The denied permissions for this descriptor.</param>
            <param name="isDeleted">True if the ACE has been deleted; false if it is extant.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.Token">
            <summary>
            The token of the access control list in which this access control entry belongs.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.SubjectId">
            <summary>
            The identity for which the access control entry is allowing / denying permission.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.Allow">
            <summary>
            The set of permission bits that represent the actions that the associated descriptor is allowed to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.Deny">
            <summary>
            The set of permission bits that represent the actions that the associated descriptor is not allowed to perform.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry.IsDeleted">
            <summary>
            True if the ACE has been deleted; used when reading an incremental update from the backing store.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.AccessControlList">
            <summary>
            The AccessControlList class is meant to associate a set of AccessControlEntries with 
            a security token and its inheritance settings.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.AccessControlList.#ctor(System.String,System.Boolean,System.Collections.Generic.Dictionary{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,Microsoft.VisualStudio.Services.Security.AccessControlEntry},System.Boolean)">
            <summary>
            Builds an instance of an AccessControlList.
            </summary>
            <param name="token">The token that this AccessControlList is for.</param>
            <param name="inherit">True if this AccessControlList should inherit permissions from its parents.</param>
            <param name="acesDictionary">The list of AccessControlEntries that apply to this AccessControlList.</param>
            <param name="includeExtendedInfo">True if this ACL will hold AccessControlEntries that have their extended information included.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlList.InheritPermissions">
            <summary>
            True if the given token inherits permissions from parents.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlList.Token">
            <summary>
            The token that this AccessControlList is for.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlList.AcesDictionary">
            <summary>
            Storage of permissions keyed on the identity the permission is for.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AccessControlList.IncludeExtendedInfo">
            <summary>
            True if this ACL holds ACEs that have extended information.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.AceExtendedInformation">
            <summary>
            Holds the inherited and effective permission information for a given AccessControlEntry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new AceExtendedInformation object with the specified information.
            </summary>
            <param name="inheritedAllow">The allow bits received from inheritance.</param>
            <param name="inheritedDeny">The deny bits received from inheritance.</param>
            <param name="effectiveAllow">The effective allow bits.</param>
            <param name="effectiveDeny">The effective deny bits.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.InheritedAllow">
            <summary>
            These are the permissions that are inherited for this
            identity on this token.  If the token does not inherit 
            permissions this will be 0.  Note that any permissions that
            have been explicitly set on this token for this identity, or 
            any groups that this identity is a part of, are not included here.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.InheritedDeny">
            <summary>
            These are the permissions that are inherited for this
            identity on this token.  If the token does not inherit 
            permissions this will be 0.  Note that any permissions that
            have been explicitly set on this token for this identity, or 
            any groups that this identity is a part of, are not included here.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.EffectiveAllow">
            <summary>
            This is the combination of all of the explicit and inherited
            permissions for this identity on this token.  These are the
            permissions used when determining if a given user has permission
            to perform an action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.AceExtendedInformation.EffectiveDeny">
            <summary>
            This is the combination of all of the explicit and inherited
            permissions for this identity on this token.  These are the
            permissions used when determining if a given user has permission
            to perform an action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.ActionDefinition.#ctor(System.Guid,System.Int32,System.String,System.String)">
            <summary>
            Creates an ActionDefinition for a SecurityNamespaceDescription.  This overload
            should only be used for reading from the database.
            </summary>
            <param name="namespaceId">The namespace that this action belongs to.</param>
            <param name="bit">The bit that this action maps to.</param>
            <param name="name">The non-localized name for this action.</param>
            <param name="displayName">The localized display name for this action.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.ActionDefinition.Bit">
            <summary>
            The bit mask integer for this action. Must be a power of 2.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.ActionDefinition.Name">
            <summary>
            The non-localized name for this action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.ActionDefinition.DisplayName">
            <summary>
            The localized display name for this action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.ActionDefinition.NamespaceId">
            <summary>
            The namespace that this action belongs to.  This will only be used for reading from the database.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData">
            <summary>
            Encapsulates the result of a QuerySecurityData call to the backing store.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.#ctor(System.Guid,System.Int32,System.Int32,System.Guid,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a SecurityNamespaceData based on the supplied information.
            </summary>
            <param name="aclStoreId">The ACL store ID</param>
            <param name="oldSequenceId">The old sequence ID</param>
            <param name="newSequenceId">The new sequence ID</param>
            <param name="accessControlEntries">The access control entries for this snapshot or delta</param>
            <param name="noInheritTokens">The list of tokens which have inheritance disabled</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.IsDelta">
            <summary>
            True if this instance represents a delta; false if it is a full snapshot.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.AclStoreId">
            <summary>
            Indicates the ACL store whose data is persisted in this SecurityNamespaceData object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.OldSequenceId">
            <summary>
            If this is a full snapshot of the security namespace data, this value is -1. Otherwise, this
            instance represents the delta from OldSequenceId to NewSequenceId.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.NewSequenceId">
            <summary>
            The sequence ID for this snapshot of or incremental update to the security namespace data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.IdentityDomain">
            <summary>
            The identity domain for the service host on which this security namespace resides.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.AccessControlEntries">
            <summary>
            The access control entries in this snapshot of the security namespace data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceData.NoInheritTokens">
            <summary>
            The list of tokens in the security namespace which have inheritance disabled.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDataCollection">
            <summary>
            Represents a set of SecurityNamespaceData objects.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription">
            <summary>
            Class for describing the details of a TeamFoundationSecurityNamespace.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.#ctor(System.Guid,System.String,System.String,System.String,System.Char,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{Microsoft.VisualStudio.Services.Security.ActionDefinition},System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a SecurityNamespaceDescription which can be used to create a 
            SecurityNamespace
            </summary>
            <param name="namespaceId">
                The id that uniquely identifies the SecurityNamespace.
            </param>
            <param name="name">
                The non-localized name for the SecurityNamespace that will be used for things
                like the command-line.
            </param>
            <param name="displayName">
                The localized display name for the SecurityNamespace.
            </param>
            <param name="dataspaceCategory">
                This is the dataspace category that describes where the security information
                for this SecurityNamespace should be stored.
            </param>
            <param name="separatorValue">
                If the security tokens this namespace will be operating on need to be split 
                on certain characters to determine its elements that character should be 
                specified here. If not, this value must be the null character.
            </param>
            <param name="elementLength">
                If the security tokens this namespace will be operating on need to be split 
                on certain character lengths to determine its elements, that length should be
                specified here. If not, this value must be -1.</param>
            <param name="structure">
                The structure that this SecurityNamespace will use to organize its tokens.
                If this namespace is hierarchical, either the separatorValue or the 
                elementLength parameter must have a non-default value.
            </param>
            <param name="writePermission">
                The permission bits needed by a user in order to modify security data in this
                SecurityNamespace.
            </param>
            <param name="readPermission">
                The permission bits needed by a user in order to read security data in this
                SecurityNamespace.
            </param>
            <param name="actions">
                The list of actions that this SecurityNamespace is responsible for securing.
            </param>
            <param name="extensionType">
                The full type of the class that implements ISecurityNamespaceExtension that
                will act as a security namespace extension for this security namespace. Null
                or String.Empty if this security namespace will not have a security namespace
                extension.
            </param>
            <param name="isRemotable">
                If true, the security namespace is remotable, allowing another service to proxy
                the namespace.
            </param>
            <param name="useTokenTranslator">
                If true, the security service will expect an ISecurityDataspaceTokenTranslator plugin to
                exist for this namespace
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.NamespaceId">
            <summary>
            The unique identifier for this namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.Name">
            <summary>
            This non-localized for this namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.DisplayName">
            <summary>
            This localized name for this namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.SeparatorValue">
            <summary>
            If the security tokens this namespace will be operating on need to be split 
            on certain characters to determine its elements that character should be 
            specified here. If not, this value will be the null character.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.ElementLength" -->
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.WritePermission">
            <summary>
            The permission bits needed by a user in order to modify security data on the
            Security Namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.ReadPermission">
            <summary>
            The permission bits needed by a user in order to read security data on the
            Security Namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.DataspaceCategory">
            <summary>
            This is the dataspace category that describes where the security information
            for this SecurityNamespace should be stored.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.Actions">
            <summary>
            The list of actions that this Security Namespace is responsible for securing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.StructureValue">
            <summary>
            Used to send information about the structure of the security namespace over the web service.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.ExtensionType">
            <summary>
            This is the type of the extension that should be loaded from the plugins
            directory for extending this security namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.IsRemotable">
            <summary>
            If true, the security namespace is remotable, allowing another service to proxy
            the namespace.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription.UseTokenTranslator">
            <summary>
            If true, the security service will expect an ISecurityDataspaceTokenTranslator plugin to
            exist for this namespace
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.TokenRename">
            <summary>
            Represents a request to rename a token in a security namespace.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.TokenRename.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new rename request for a token in a security namespace.
            </summary>
            <param name="oldToken">The current name of the token</param>
            <param name="newToken">The desired new name of the token</param>
            <param name="copy">True if the existing token should be preserved; false if it should be deleted</param>
            <param name="recurse">True if the scope of the operation should be extended to all child tokens of oldToken; false otherwise</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.TokenRename.OldToken">
            <summary>
            The current name of the token.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.TokenRename.NewToken">
            <summary>
            The desired new name of the token.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.TokenRename.Copy">
            <summary>
            True if the existing token should be preserved; false if it should be deleted.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Services.Security.TokenRename.Recurse">
            <summary>
            True if the scope of the operation should be extended to all child tokens of OldToken; false otherwise.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Services.Security.WellKnownAclStores">
            <summary>
            Contains identifiers for well-known ACL (access control list) stores
            in the security service.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Security.WellKnownAclStores.User">
            <summary>
            The user store is the ACL (access control list) store which is
            user-visible and user-editable, and which is used to evaluate effective permissions
            for most identities.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Services.Security.WellKnownAclStores.System">
            <summary>
            The system store is the ACL (access control list) store which is
            not user-visible or user-editable, and is used to evaluate effective permissions on
            special types of identities such as licenses.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.HasPermissionAsync(System.Guid,System.String,System.Int32,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="requestedPermissions"></param>
            <param name="alwaysAllowAdministrators"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.RemovePermissionAsync(System.Guid,System.String,Microsoft.VisualStudio.Services.Identity.IdentityDescriptor,System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="descriptor"></param>
            <param name="permissions"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.SetAccessControlEntriesAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Security.AccessControlEntry},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="accessControlEntries"></param>
            <param name="merge"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.RemoveAccessControlEntriesAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor},System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="descriptors"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.QueryAccessControlListsAsync(System.Guid,System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Identity.IdentityDescriptor},System.Boolean,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="descriptors"></param>
            <param name="includeExtendedInfo"></param>
            <param name="recurse"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.SetAccessControlListsAsync(System.Guid,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Services.Security.AccessControlList},System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="accessControlLists"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.RemoveAccessControlListsAsync(System.Guid,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="tokens"></param>
            <param name="recurse"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.QuerySecurityNamespacesAsync(System.Guid,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="userState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient.SetInheritFlagAsync(System.Guid,System.String,System.Boolean,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="securityNamespaceId"></param>
            <param name="token"></param>
            <param name="inherit"></param>
            <param name="userState"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.DeleteBlobCopyRequestAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="requestId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.GetBlobCopyRequestAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="requestId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.GetBlobCopyRequestsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.QueueBlobCopyRequestAsync(Microsoft.VisualStudio.Services.Zeus.BlobCopyRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase.UpdateBlobCopyRequestAsync(Microsoft.VisualStudio.Services.Zeus.BlobCopyRequest,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.DeleteDatabaseMigrationAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="migrationId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.GetDatabaseMigrationAsync(System.Int32,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="migrationId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.GetDatabaseMigrationsAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.QueueDatabaseMigrationAsync(Microsoft.VisualStudio.Services.Zeus.DatabaseMigration,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="migration"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase.UpdateDatabaseMigrationAsync(Microsoft.VisualStudio.Services.Zeus.DatabaseMigration,System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="migration"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.CustomerIntelligence.WebApi.CustomerIntelligenceHttpClient.PublishEventsAsync(Microsoft.VisualStudio.Services.WebPlatform.CustomerIntelligenceEvent[],System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="events"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetContributionsAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="contributionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.CreateDocumentAsync(Newtonsoft.Json.Linq.JObject,System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="doc"></param>
            <param name="extensionId"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.DeleteDocumentAsync(System.Guid,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extensionId"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="documentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetDocumentAsync(System.Guid,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extensionId"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="documentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetDocumentsAsync(System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extensionId"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.SetDocumentAsync(Newtonsoft.Json.Linq.JObject,System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="doc"></param>
            <param name="extensionId"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.UpdateDocumentAsync(Newtonsoft.Json.Linq.JObject,System.Guid,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="doc"></param>
            <param name="extensionId"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.CreateDocumentByNameAsync(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="doc"></param>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.DeleteDocumentByNameAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="documentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetDocumentByNameAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="documentId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetDocumentsByNameAsync(System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.SetDocumentByNameAsync(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="doc"></param>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.UpdateDocumentByNameAsync(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="doc"></param>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="scopeType"></param>
            <param name="scopeValue"></param>
            <param name="collectionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetScopesAsync(System.Guid,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extensionId"></param>
            <param name="version"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetScopesByNameAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="version"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetInstalledExtensionAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extensionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetInstalledExtensionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="contributionIdFilter"></param>
            <param name="includeDisabledExtensions"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.InstallExtensionAsync(Microsoft.VisualStudio.Services.Extension.InstalledExtension,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extension"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.UninstallExtensionAsync(System.Guid,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extensionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.UpdateInstalledExtensionAsync(Microsoft.VisualStudio.Services.Extension.InstalledExtension,System.Nullable{System.Guid},System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="extension"></param>
            <param name="extensionId"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetInstalledExtensionByNameAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.InstallExtensionByNameAsync(System.String,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="version"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.UninstallExtensionByNameAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="publisherName"></param>
            <param name="extensionName"></param>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Services.ExtensionManagement.WebApi.ExtensionManagementHttpClient.GetTokenAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            [Preview API]
            </summary>
            <param name="userState"></param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
        </member>
    </members>
</doc>
