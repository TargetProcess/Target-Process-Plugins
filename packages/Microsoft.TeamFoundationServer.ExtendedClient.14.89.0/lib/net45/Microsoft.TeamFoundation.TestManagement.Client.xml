<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.TeamFoundation.TestManagement.Client</name>
    </assembly>
    <members>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.BlockedPointProperties">
            <summary>
            Derived from the UpdateProperties class to hold two extra updated properties
            for TestPoint.Block() method: LastTestResultId and LastTestRunId.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.DataCollectorInformation">
            <summary>
            Represents a data collector on the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.DefaultAfnStripBinding">
            <summary>
            This class is the container of the default strip id and 
            test case id so we can easily pass them around between
            client OM and server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.EnvironmentParentTypes">
            <summary>
            Types of the parent (owner) of the test environments.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.IdAndRev">
            <summary>
            Hold onto a pair of numbers, the id and the revision number of an object
            This is yet another object that should have been a struct, if our
            proxy generator understood them
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.ImpactedPoint">
            <summary>
            Represents an impacted test case on the server
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.ModuleCoverage.BlockCount">
            <summary>
            Number of entries in BlockData once uncompressed.
            This will be &gt; BlocksCovered + BlocksNotCovered, since some
            uninteresting blocks are not included in the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.ResultsStoreQuery.DayPrecision">
            <summary>
            True if date comparisons are to be rounded to the nearest
            day.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.ResultsStoreQuery.QueryText">
            <summary>
            WIQL query to execute.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.ResultsStoreQuery.TeamProjectName">
            <summary>
            Name of team project to use for @project macro.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.ResultsStoreQuery.TimeZone">
            <summary>
            Client's time zone information for interpreting dates
            and day rounding.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.ResultUpdateRequest">
            <summary>
            Store action results, parameters and attachments to update for a result. 
            TestRunId and TestResultId are used for security checking for test results or
            attachments, since an attachment can be created without updating its test result.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.ResultUpdateResponse">
            <summary>
            Store revision number and the ids of created attachments of a result. The 
            array of ResultUpdateResponse objects should be in respective to the array of 
            ResultUpdateRequest objects.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.ServerTestSuite">
            <summary>
            Represents both a static and a dynamic suite, the only difference is that if
            the query property is null, it is considered a static suite
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.SkinnyPlan">
            <summary>
            Used to return query results for plans
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.SuitePointCount">
            <summary>
            Represents a suite ID found from the QuerySuitePointCounts() API.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.SuitePointCount.PointCount">
            <summary>
            Number of direct child points of this suite matching the
            query expression.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.SuitePointCount.SuiteId">
            <summary>
            ID of the suite.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseAndOwner">
            <summary>
            Used to pass a test case ID and owner pair to the database.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseAndOwner.Id">
            <summary>
            ID of the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseAndOwner.Owner">
            <summary>
            Team foundation ID of the test case owner.  Used to initialize the TestPoint.AssignedTo value.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseResult">
            <summary>
            Server-side representation of a test result object.
            This is declared public so that the WSDL layer can serialize and
            deserialize them.  It should not be directly called by any external
            code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseResultIdAndRev">
            <summary>
            Hold onto a triple of numbers, a runId and resultId and the revision number of
            a test case result.
            This is yet another object that should have been a struct, if our
            proxy generator only understood them
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestController">
            <summary>
            Represents a test controller on the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestEnvironment">
            <summary>
            Represents a test environment on the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestPointStatistic">
            <summary>
            Represents the number of points with a given
            set of state values.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestPointStatistic.Count">
            <summary>
            Number of points matching the query that have the above state/outcome values.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestPointStatistic.FailureType">
            <summary>
            The most recent failure type (value corresponds to FailureType enum)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestPointStatistic.ResolutionStateId">
            <summary>
            The most recent Resolution State Id (Id resolution in the TestResolutionState)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestPointStatistic.ResultOutcome">
            <summary>
            The most recent result outcome (value corresponds to TestOutcome enum)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestPointStatistic.ResultState">
            <summary>
            The most recent result state (value corresponds to TestResultState enum)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestPointStatistic.TestPointState">
            <summary>
            The point state (value corresponds to TestPointState enum)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestRunStatistic">
            <summary>
            Represents a permutation of (state, outcome, resolution) along with the number of test results
            matching those values.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestRunStatistic.Count">
            <summary>
            Number of points matching the query that have the above state/outcome values.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestRunStatistic.Outcome">
            <summary>
            The most recent result outcome (value corresponds to TestOutcome enum)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestRunStatistic.ResolutionState">
            <summary>
            The resolution state for the test, or null for a non-failed test.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client2010.TestRunStatistic.State">
            <summary>
            The most recent result state (value corresponds to TestResultState enum)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestSettingsMachineRole">
            <summary>
            Represents the information about a machine role stored in a test settings
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.TestSuiteEntry">
            <summary>
            Used for entries in test suite
            </summary>
            <remarks>
            It seemed to me that this should be a struct, but genproxy barfs
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client2010.UpdatedProperties">
            <summary>
            This class holds the default updated properties of generic test objects
            that are returned to the client side after a web service call such as
            Save(), Update(), etc.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ActionPathHelper">
            <summary>
            Manages a string containing an ordered list of action IDs.
            These action IDs represent the "lineage" of a test action result.
            </summary>
            <remarks>
            Like a file system path, an action path is built from left to right.
            Each path element consists of an action ID stored as 8 hexadecimal characters.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ActionPathHelper.Combine(System.String,System.Int32)">
            <summary>
            Creates a new ActionPath with actionId as its rightmost element and this
            ActionPath as its parent.
            </summary>
            <see>System.IO.Path.Combine</see>
            <param name="parent"></param>
            <param name="actionId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ActionPathHelper.LastElementOf(System.String)">
            <summary>
            Returns the action ID of the rightmost (leaf) path element.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ActionPathHelper.LengthOf(System.String)">
            <summary>
            Returns the number of elements in the path.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ActionPathHelper.IsDescendant(System.String,System.String)">
            <summary>
            Returns true if "child" is a child, grandchild, great-grandchild, etc.
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ActionRecordingHelper">
            <summary>
            Represents the collection of mappings between a 
            test case and its default strip.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.DefaultAfnStripBinding">
            <summary>
            This class is the container of the default strip id and 
            test case id so we can easily pass them around between
            client OM and server.
            </summary>
            <summary>
            This class is the container of the default strip id and 
            test case id so we can easily pass them around between
            client OM and server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.BugFieldMapping.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.BugFieldMapping.PostLoad(Microsoft.TeamFoundation.TestManagement.Client.BugFieldMappingHelper)">
            <summary>
            Helper calls this after a default construct as a result of deserialization
            </summary>
            <param name="helper"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.BugFieldMapping.Export(System.String)">
            <summary>
            Exports the bug field mapping to an xml file
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.BugFieldMapping.Parse(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Parses the XmlDocument to the properties for this class.  When importing
            a new mapping, the validation processing should ensure that all fields
            are valid.
            </summary>
            <param name="doc"></param>
            <param name="validate"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.BugFieldMappingHelper.Project">
            <summary>
            Helpers can always rely on having a project behind them, the project
            looks after the connection to the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.BugFieldMappingHelper.Log">
            <summary>
            A log, considered to be per object type, so we expose it on the helpers
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.BuildConfiguration.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCaseProperties.FullyQualifiedTestName">
            <summary>
            Fully Qualified Test Name which should be considered as unique
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestAction">
            <summary>
            Actions define what has to be done to execute a Test Case or set of steps
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestAction.#ctor(Microsoft.TeamFoundation.TestManagement.Client.ITestActionOwner)">
            <summary>
            A test action with an auto-allocated id
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestAction.#ctor(Microsoft.TeamFoundation.TestManagement.Client.ITestActionOwner,System.Int32)">
            <summary>
            A test action with a predetermined id (for example, when loading from XML)
            </summary>
            <param name="owner"></param>
            <param name="id"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestAction.IsConnectedToRoot">
            <summary>
            This tests to see if the action is connected, directly, or indirectly through its
            ancestors, to a root group (the root group returns true) 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestActionCollection">
            <summary>
            Ordered list representing actions.
            </summary>
            <remarks>
            Actions are stored in the order which they should be executed.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionCollection.GetHashCode">
            <summary>
            Hash code tracks the Ids of the Actions and their order
            </summary>
            <returns>Hash Code</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionCollection.IndexOf(System.Int32)">
            <summary>
            Searches for a given action ID in the list.
            </summary>
            <param name="actionId">Action ID to look for</param>
            <returns>Index of the item or -1 if not found</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionCollection.MoveTo(System.Int32,System.Int32,Microsoft.TeamFoundation.TestManagement.Client.TestActionCollection)">
            <summary>
            Move an action between lists (will also work within a single
            list when newList is the same as the source)
            </summary>
            <param name="fromIndex">Index in this list of the action to move</param>
            <param name="toIndex">Index in list to move to</param>
            <param name="newList">New list to move to</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestActionGroup">
            <summary>
            Represents a group of actions, which, since a group is itself an action,
            may contain other nested groups. The nesting is arbitrary, but of finite
            depth (so a group may not directly or indirectly contain itself)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionGroup.FindAction(System.Int32)">
            <summary>
            Search (recursively if needed) for an action with the given id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestBase">
            <summary>
            Represents the TCM metadata for a given test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestBase.Description">
            <summary>
            The Description property on WorkItem object points to the System.Description field
            whereas for TestCase and SharedStep WITs we use Microsoft.VSTS.Shared.Description
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestBase.OverrideParameter(System.String)">
            <summary>
            Makes an existing parameter in the Test Case an overridden parameter
            </summary>
            <param name="parameterName">Name of the parameter to override</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestBase.GetHashCode">
            <summary>
            Hash code tracks the parameter names, actions, and the order of the actions
            </summary>
            <returns>Hash Code</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestBase.UpdatingSteps(System.Collections.Generic.List{Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString})">
            <summary>
            Called when the test steps information is changed.  This includes the title or expected results of
            a step and deleting a step or Shared Step reference.  This function will send out the appropriate
            parameter deleting message.
            </summary>
            <param name="stepStrings">The list of step title and expected results strings changed by the current
            operation</param>
            <returns>True if the change is allowed, false if it should be aborted.</returns>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestBase.m_isRemovingParameters">
            <summary>
            Prevents sending multiple deleting parameters events for a single parameter rename or replace operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCase.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCase.FixDefaultTable">
            <summary>
            Keep default table and data bound parameter references in sync
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCase.DeleteParameterFromDataTable(System.String)">
            <summary>
            deletes the paremeter column from data table.
            </summary>
            <param name="paramName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCase.UpdateDefaultTable">
            <summary>
            Keep default table and data bound parameter references in sync
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCase.OnRenameParameter(System.String,System.String)">
            <summary>
            Copies the parameter data from the old name to the new name.  If the new parameter
            name already exists and it contains iteration data, the OnParameterDeleting event 
            allows for the operation to be aborted.
            </summary>
            <param name="oldName"></param>
            <param name="newName"></param>
            <returns>True if the rename can proceed and false if it should be aborted</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCase.AddTestCaseLinkIfNeeded(System.Int32)">
            <summary>
            Add a work item link between this Shared Step Set and a test case, if 
            a link between them doesn't already exist.
            </summary>
            <param name="testCaseId">The Id of the Shared Step Set</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCase.RemoveSharedStepLink(System.Collections.Generic.Dictionary{System.Int32,Microsoft.TeamFoundation.TestManagement.Client.ISharedStepReference})">
            <summary>
            Remove the work item links between the Shared Step and the Test case if the Shared
            Step isn't in the provided list
            </summary>
            <param name="sharedSteps">The group of Shared Step referenced by this test case</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCase.HasDataSetChanged(System.String)">
            <summary>
            Returns True if the DataSet has been modified since it was last
            saved to WIT and thus needs to be saved.
            </summary>
            <param name="originalDataSet">The XML data for the DataSet in WIT</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCase.SharedStepCache">
            <summary>
            This property has been exposed for unit testing purpose. This should never be used in product code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestCaseAttachment">
            <summary>
            Encapsulates an arbitrarily large stream of bytes stored on the TCM server.
            The content is not uploaded to the server until the object owning the attachment
            is saved.  The content is not downloaded from the server until DownloadToArray() or
            DownloadToFile() is called.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCaseAttachment.ArtifactUri">
            <summary>
            WIT attachments do not support linking.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseAttachmentList.MapToInternalIndex(System.Int32)">
            <summary>
            Given a "logical" index, return the actual index in the list
            Throw if not in list
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseHelper.DoRequiredFieldsExist">
            <summary>
            Tells if the required Test Case Fields are defined for the Test Case
            Work Item
            </summary>
            <returns>True if all the required fields are present</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseHelper.Fetch(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Find a whole bunch of test cases, use a query by Id, don't care about revisions
            </summary>
            <param name="caseIds"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseHelper.Fetch(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Find a whole bunch of test cases, use a query by Id, don't care about revisions
            </summary>
            <param name="caseIds">Test case Ids to fetch</param>
            <param name="query">WIQL fields to query</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestCaseStoredQuery">
            <summary>
            Represents a stored test case query.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCaseTextQuery.Name">
            <summary>
            This is is more applicable to stored queries
            For text queries the name is the text of the query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCaseIdQuery.Name">
            <summary>
            This is is more applicable to stored queries
            For text queries the name is the text of the query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCaseIdAndRevQuery.Name">
            <summary>
            This is is more applicable to stored queries
            For text queries the name is the text of the query
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TmiTestImplementation">
            <summary>
            Represents a link to an automated test in Orcas unit test infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestParameter.#ctor">
            <summary>
            Only use this method if you plan use
            FromXml immediately after
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestParameterCollection">
            <summary>
            A TestParameterCollection holds TestParameters by name.
            Each entry maintains a reference count. If the reference count
            goes to zero, the parameter is removed from the visible collection
            but is still held internally. When new parameters
            are added preference is given to reuse of a zombie
            Case is not significant for parameter names.
            
            Note that this class really supports two quite different interfaces, the public
            interface is an immutable collection of parameters, which changes as parameter references
            in steps come and go. The internal interface allows modification, so that the list can be
            maintained in sync with parameter references.
            </summary>
            <summary>
            A collection of test parameters within a given shared step set, test case or test step.
            The collection itself is not modifiable, but the parameters
            within it can be modified
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestParameterCollection.UpdateReferenceParameters(Microsoft.TeamFoundation.TestManagement.Client.TestParameterCollection)">
            <summary>
            Updates all reference parameters from the collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestParameterCollection.CheckParameterRemoval(System.String,System.Int32)">
            <summary>
            This function will test if removing the given number of references from the parameter will
            result in the parameter getting deleted from the collection
            </summary>
            <param name="name">The name of the parameter</param>
            <param name="references">The number of references to the parameter to be removed</param>
            <returns>True if the parameter will be deleted and false if it won't.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestParameterCollection.GetHashCode">
            <summary>
            Hash code tracks the parameter names
            </summary>
            <returns>Hash Code</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestParameterCollection.ContainsKey(System.String)">
            <summary>
            Returns true if the collection contains the parameter with name specified.
            </summary>
            <param name="name">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestParameterCollection.Item(System.String)">
            <summary>
            Name based accessor for easy random-access to the test parameter collection.
            If no such name found, return null.
            </summary>
            <param name="name">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestStep">
            <summary>
            Represents a single action and expected result
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.DataCollectorInformation">
            <summary>
            Represents a data collector on the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.DataCollectorInformation.ConfigurationHelpUri">
            <summary>
            URI to open when help is requested while configuring the data collector
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.DataCollectorInformation.PackProperties">
            <summary>
            Copies the local properties to the m_properties array that we send to the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.DataCollectorInformation.UnpackProperties">
            <summary>
            Populates the local property members from the m_properties array passed from the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestController">
            <summary>
            Represents a test controller on the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestController.PostLoad(Microsoft.TeamFoundation.TestManagement.Client.TestControllerHelper)">
            <summary>
            Sets the client-specific values after the objects are being 
            queried from server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestController.PreSave">
            <summary>
            Called by the helper before performing bulk registering or
            updating to setup transfering properties and verifying name.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestController.PackProperties">
            <summary>
            Copies the local properties to the m_properties array that we send to the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestController.UnpackProperties">
            <summary>
            Populates the local property members from the m_properties array passed from the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment">
            <summary>
            Represents a test environment on the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment.Id">
             <summary>
             
             </summary>
            <remarks>TODO : The set will move off when TestEnvironment Query looks into
             LabEnvironments to construct rather than TCM catalog</remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment.Register">
            <summary>
            Set the neccessary values after the objects are being 
            queried from server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment.PreSave">
            <summary>
            Called by the helper before performing bulk registering or
            updating to setup transfering properties and verifying name.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment.PostSave(Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment)">
            <summary>
            Called to update Id properties once environments have been saved.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment.PackProperties">
            <summary>
            Copies the local properties to the m_properties array that we send to the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment.UnpackProperties">
            <summary>
            Populates the local property members from the m_properties array passed from the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ModuleCoverage.BlockCount">
            <summary>
            Number of entries in BlockData once uncompressed.
            This will be &gt; BlocksCovered + BlocksNotCovered, since some
            uninteresting blocks are not included in the statistics.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.CoverageAnalysisManager">
            <summary>
            Client class to support the CoverAn service
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1">
            <summary>
            The basis of a client side object, all are Identifiable, and
            support notification and IDataErrorInfo
            We also expect the classic set of methods for persistance
            We also need some support for our generic containers 
            (which may implement paging)
            
            Client objects are relatively autonomous objects on the server
            that may be fetched or queried one by one
            
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.#ctor">
            <summary>
            Deserialization use only 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.#ctor(Microsoft.TeamFoundation.TestManagement.Client.IClientObjectHelper)">
            <summary>
            Normal constructor, for new objects
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.#ctor(Microsoft.TeamFoundation.TestManagement.Client.IClientObjectHelper,`0)">
            <summary>
            Skinny object constructor
            </summary>
            <param name="project"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.UserData">
            <summary>
            We don't use this in any way... users of our API can put in here what they will
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.Save">
            <summary>
            Save object to server
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.Refresh">
            <summary>
            Refresh object from server, throws local changes away
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.Delete">
            <summary>
            Delete object on the server as long as there are no side-effects
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.Delete(Microsoft.TeamFoundation.TestManagement.Client.DeleteAction)">
            <summary>
            Delete object on the server, optionally even if there are side effects
            </summary>
            <param name="action">Whether to proceed when there are side-effects</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.UserSetter(System.String,System.String,System.String,System.Guid@,System.Guid,System.String,System.Boolean)">
            <summary>
            Helper to set user value and Notify appropriately.
            String value of the user identity will be parsed from the identity using WIT Client OM identity cache
            </summary>
            <param name="tfIdProperty">Name of the TeamFoundationIdentity property</param>
            <param name="stringProperty">Name of the TeamFoundationIdentity DisplayName property</param>
            <param name="oldGuidValue">Old value of TeamFoundationIdentity.TeamFoundationId</param>
            <param name="newGuidValue">New value of TeamFoundationIdentity.TeamFoundationId</param>
            <param name="newStringValue">New value of TeamFoundationIdentity.DisplayName</param>
            <param name="markDirty">Flag to mark object dirty</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.IsFetchNeeded">
            <summary>
            Check whether a page fetch is needed, public as we plan to expose this
            on public interfaces
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1.FetchIfNeeded">
            <summary>
            Conditional call to fetch page, most property methods call this
            to fetch objects in as needed, unpaged objects can safely ignore this
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectCollection`3">
            <summary>
            Our main container for storable, pageable, refreshable objects:
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectCollection`3.#ctor(Microsoft.TeamFoundation.TestManagement.Client.ClientObjectHelper{`0,`1,`2})">
            <summary>
            Create a new, non-paging collection
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectCollection`3.Helper">
            <summary>
            Containers are created by Helpers, when paging it is vital
            that the container be able to get to the Helper (and hence
            the Project)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectCollection`3.Initialize(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Initialize the container with a list of fetched objects, any number of them may be "skinny".
            After this properties (other than Id) will be fetched in page by page
            </summary>
            <param name="completeItems"></param>
            <param name="filledItems"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectCollection`3.FetchPage(System.Object)">
            <summary>
            Gather all the items in a page, pass the Ids to
            my container, expect a bunch of new objects back, refresh/or
            delete as appropriate
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectCollection`3.Fetch(System.Collections.Generic.Dictionary{`2,`1})">
            <summary>
            Page uses this to fill next page
            </summary>
            <param name="skinnyItems"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectCollection`3.Fetch(Microsoft.TeamFoundation.TestManagement.Client.ClientObjectIdRev{`2}[],`2[]@,System.Collections.Generic.ICollection{System.Guid}@)">
            <summary>
            Fetch a bunch of objects from the server, must be overriden for container specific cases
            may be used for paging
            </summary>
            <param name="ids"></param>
            <param name="deleted"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectHelper`3">
            <summary>
            Helper Objects:
            A common base the the helper for any single class of stored objects
            Derivations from this are exposed on Project, such as "TestCaseHelper"
            and "TestPlanHelper"
            All types need to be Queryable (returning a list of Ids), as well
            as fetchable by arbitrary list of Ids
            </summary>
            <typeparam name="TInterface">Client Object Public Interface</typeparam>
            <typeparam name="TClass">Client Object Class</typeparam>
            <typeparam name="TKey">Key Type (the identifier)</typeparam>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectHelper`3.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject)">
            <summary>
            Create a Helper and link it back to the Project
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectHelper`3.Create">
            <summary>
            Create a brand new object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectHelper`3.Project">
            <summary>
            Helpers can always rely on having a project behind them, the project
            looks after the connection to the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectHelper`3.Log">
            <summary>
            A log, considered to be per object type, so we expose it on the helpers
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ClientObjectHelper`3.PageSize">
            <summary>
            The page size used for objects of this type
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.GenericCollection`2">
            <summary>
            ObservableCollection look-alike. Supports an interface driven approach, using I, but internally
            holds object of type T.
            </summary>
            <typeparam name="TInterface">Public interface</typeparam>
            <typeparam name="TClass">Internal type</typeparam>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.GenericCollection`2.#ctor">
            <summary>
            Create a new, non-paging collection
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.GenericCollection`2.#ctor(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Create a new, non-paging collection, pre-populated from another collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.GenericCollection`2.NotifyPropertyChanged(System.String)">
            <summary>
            Unconditionally notify for a property
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.GenericCollectionEnumerator`2">
            <summary>
            Custom enumerator for GenericCollection (an ObservableCollection look-alike) 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentOwnerInternal.FireAttachmentUploadCompleted(Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment)">
            <summary>
            Fires the event defined in IAttachmentOwner, not defined there as we do
            not want to make this public
            </summary>
            <param name="attachment"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IdAndRev">
            <summary>
            Hold onto a pair of numbers, the id and the revision number of an object
            This is yet another object that should have been a struct, if our
            proxy generator understood them
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IdAndRev.Single(System.Int32)">
            <summary>
            Helper method to give me a single Id in a single element array
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IdAndRev.Single(System.Int32,System.Int32)">
            <summary>
            Helper method to give me a single Id in a single element array
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IXmlStorage">
            <summary>
            This interface is supported by objects that can stream themselves to
            and from XML. Poor mans serialization if you will.
            
            "Classic" serialization was not chosen since we don't want the burden
            of code generation, either at runtime or build time.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IXmlStorage.FromXml(System.Xml.XmlReader)">
            <summary>
            Given a reader, populate an object from its XML stored form
            
            May throw XmlException on failure
            </summary>
            <param name="reader">The source of the XML</param>
            <returns>true if the operation succeeded</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IXmlStorage.ToXml(System.Xml.XmlWriter)">
            <summary>
            Given a writer, store an objects state as XML
            
            May throw XmlException on failure
            </summary>
            <param name="writer"></param>
            <returns>true if the operation succeeded</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SchemaValidator">
            <summary>
            This class does schema validation for xml file that contains test artifacts.
            Currently it supports schema validation for:
                - TestConfiguration
                - TestResolutionState
                - TestVariable
                - TestSettings
            The schema files can be found under TestManagement\Client\Schemas.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SchemaValidator.ValidateAndParse(System.String,Microsoft.TeamFoundation.TestManagement.Client.ObjectTypes)">
            <summary>
            Validates the xml file against the corresponding schema.
            </summary>
            <param name="fileName">The path of the file.</param>
            <param name="type">The type of the test artifacts in file.</param>
            <returns>The validated xml document read from file.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.XmlAttributeNames">
            <summary>
            Xml attribute names of test artifacts xml files.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.XmlAttributeValues">
            <summary>
            Xml attribute values of test artifacts xml files.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SimpleClientObject">
            <summary>
            Most client objects derive from this as they all have an integer key.
            Test Result is the notable exception to this rule.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationHelper.GetName(System.Int32)">
            <summary>
            Get the name of the given configuration. Return null if the configuration cannot be found.
            </summary>
            <remarks>
            [duatle] This method is for backward compat with servers that do not have configuration 
            names returned with configuration ids. This should be removed in Dev11.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationHelper.GetNames(System.Int32[])">
            <summary>
            Get the names of the given configurations. 
            </summary>
            <remarks>
            [duatle] This method is for backward compat with servers that do not have configuration 
            names returned with configuration ids. This should be removed in Dev11.
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry">
            <summary>
            Represents a node in the hierarchy used to organize points
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry.#ctor(System.Collections.Generic.IDictionary{System.Int32,System.Int32},Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase,Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry)">
            <summary>
            Constructs a new HieararchyEntry warpper object.
            </summary>
            <param name="allowedSuites">Dictionary of allowed suites from server.</param>
            <param name="suite">Suite to create wrapper for.</param>
            <param name="parent">Parent wrapper object.</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry.SuiteId">
            <summary>
            Returns the ID of this suite.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry.SuiteTitle">
            <summary>
            Returns the title of this suite.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry.SuiteType">
            <summary>
            The suite's type (static, dynamic, requirement)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry.Suite">
            <summary>
            The suite itself.
            </summary>
            <remarks>
            This is the instance of the suite from the TestPlan.RootSuite tree.
            The suite's child collections (Entries, SubSuites, TestCases, etc.)
            are not subject to the filtering of the original query.  Be sure to
            iterate HiearchyEntry.Children if you want the filtering applied.
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry.PointCount">
            <summary>
            Returns the number of points matching the query for this suite.
            Does not include points from subsuites.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry.Children">
            <summary>
            Returns a collection of the child suites that contain points
            matching the query.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry.Parent">
            <summary>
            The parent of this entry. Will be null if it is the root suite.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ImpactedTestPoint.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ImpactedPoint">
            <summary>
            Represents an impacted test case on the server
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.NewBuildStatistics.InvalidateCachedData">
            <summary>
            Called to clear the stored values for counters.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.NewBuildStatistics.GetBuildData">
            <summary>
            Re-computes counter data from server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink.LinkId">
            <summary>
            Integer identifier of this link.  Unique at the plan level.
            Only used between client and server - not exposed to the caller.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink.Collection">
            <summary>
            Reference to the collection that this item is part of or null.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink.MarkCollectionDirty">
            <summary>
            Cause the parent collection to fire an ItemChangedEvent
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection">
            <summary>
            Manages a list of external links.
            Handles detecting changes, firing notifications, and updating items in-place.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.Refresh(Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink[])">
            <summary>
            Updates this collection to match the passed in array.
            Any links that already exist in the collection are refreshed in place.
            Any links that no longer exist in links are removed from the collection.
            </summary>
            <param name="links">New set of links</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.Refresh(Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink[],System.Boolean)">
            <summary>
            Updates this collection to match the passed in array.
            Any links that already exist in the collection are refreshed in place.
            Any links that no longer exist in links are removed from the collection.
            Makes copied links dirty
            </summary>
            <param name="links">New set of links</param>
            <param name="markDirty">If true, copied links will be marked dirty</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.GetChangedLinks">
            <summary>
            Retrieves a list of links that have been added, updated, or deleted
            since the last Refresh() call.  Used to update the server.
            </summary>
            <returns>List of links.  Deleted links will have a null Uri.</returns>
        </member>
        <member name="E:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.ItemChangedEvent">
            <summary>
            Fired when one of the items in this collection has a property changed.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.ItemChanged(Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink)">
            <summary>
            Called by an owned item when a property is changed.
            Fires the ItemChangedEvent.
            </summary>
            <param name="item">Item that caused the change</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.AssociateItem(Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink)">
            <summary>
            Called when an item is added to this collection.
            Handles common position-insensitve tasks
            </summary>
            <param name="item">New item to add</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.DisassociateItem(Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink)">
            <summary>
            Called when an item is removed from this collection.
            Handles common position-insensitve tasks
            </summary>
            <param name="item">Item to remove</param>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.m_itemsById">
            <summary>
            Dictionary of items indexed by LinkId.
            Deleted items are stored with a null value
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.m_isRefreshing">
            <summary>
            True if a Refresh() is in progress
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection.m_maxLinkId">
            <summary>
            Holds the largest LinkId that has been used
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestPlanHelper,Microsoft.TeamFoundation.TestManagement.Client.SkinnyPlan)">
            <summary>
            Skinny object constructor
            </summary>
            <param name="project"></param>
            <param name="id"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.Initialize">
            <summary>
            Use this during/after construction for new TestPlans
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.PostLoad(Microsoft.TeamFoundation.TestManagement.Client.TestPlanHelper)">
            <summary>
            Helper calls this after a default construct as a result of deserialization
            </summary>
            <param name="helper"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.QueryLinks(System.Int32)">
            <summary>
            Queries the server to retrieve array of links for this plan.
            Returns empty array if the server is too old to have link support (beta2)
            </summary>
            <returns>Array</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.linkCollection_ItemChangedEvent(System.Object,Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink)">
            <summary>
            Called when an item in m_linkCollection has been changed
            </summary>
            <param name="sender"></param>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.linkCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when m_linkCollection is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.TestCaseQueryHint">
            <summary>
            Sets / gets the WIQL query Test Suites will use when fetching Test Cases.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.Clone">
            <summary>
            Creates a copy of this test plan and returns it.
            </summary>
            <returns>The cloned plan.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.CopyPropertiesFrom(Microsoft.TeamFoundation.TestManagement.Client.ITestPlan)">
            <summary>
            Copies the properties of the parameter test plan into the current plan.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.RefreshFrom(System.Object)">
            <summary>
            Refresh this test plan from data contained in the source.  Note, the source
            may contained test pass information that is filtered or unfiltered.  Since we
            are updating this plan which is filtered, we cannot add any new test passes
            from the source or risk adding passes that should be filtered out.  It is
            up to the calling method to add new passes to this filtered plan if needed.
            </summary>
            <param name="source">A filtered or unfiltered TestPlan</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.RefreshTestCase(System.Int32)">
            <summary>
            Refreshes all instances test case through the suite hierarchy,
            if the Test Case has been fetched from the server.
            </summary>
            <param name="testCaseId">Test Case Id</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.SetBuildUri(System.String,System.Boolean)">
            <summary>
            Handles updating build information when build uri is changed.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.m_buildUriChanged">
            <summary>
            Indicates when to refresh build info (build number and build directory).
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.m_clientBuildUri">
            <summary>
            Client copy of the m_buildUri to control updating test plan with new build.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlan.BuildFilterImpl.Setter(System.String,System.String@,System.Boolean)">
            <summary>
            Helper method for setting BuildDefinition or BuildQuality.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlanCollection.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestPlanHelper,Microsoft.TeamFoundation.TestManagement.Client.SkinnyPlan[],Microsoft.TeamFoundation.TestManagement.Client.ResultsStoreQuery,System.Boolean)">
            <summary>
            Create a new collection of test plans and passes from the results of a query to the server...
            </summary>
            <param name="response">Server response, ids and statistics</param>
            <param name="helper"></param>
            <param name="query"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlanCollection.Refresh">
            <summary>
            Refresh of all plans in this collection, any in memory passes, and points
            Include one free RefreshStatistics!
            Any changed query should take affect when we do this.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPlanCollection.RefreshStatistics">
            <summary>
            Refresh just the statistics, on plans and passes. Much much cheaper than a full refresh
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestPlanCollection.Query">
            <summary>
            Set the default query to be used to populate the Plan/Pass/Point tree
            By spec, we don't refresh here, but we could...
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestPlanCollection.QueryText">
            <summary>
            Set the default query to be used to populate the Plan/Pass/Point tree
            This is the public version of "Query" (yuck, see TODO)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPoint.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestPointCollection,System.Int32)">
            <summary>
            Skinny object constructor for regular points.
            </summary>
            <param name="collection">Collection containing this point</param>
            <param name="pointId">Id of point to represent.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPoint.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestPointCollection,Microsoft.TeamFoundation.TestManagement.Client.ImpactedPoint)">
            <summary>
            Skinny object constructor for impacted points.
            </summary>
            <param name="collection">Collection containing this point</param>
            <param name="skinnyPoint">ImpactedPoint to copy ID from</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPoint.PostLoad(Microsoft.TeamFoundation.TestManagement.Client.TestPointCollection)">
            <summary>
            Associates an already constructed point with a collection.
            </summary>
            <param name="collection">Collection containing this point</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestPoint.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestPointCollection.CreateWorkItems">
            <summary>
            Causes the test points' TestCaseWorkItem objects to be created.
            This doesn't actually make a server trip, so the TestCaseWorkItems are "skinny".
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointStatistics.TotalIndex">
            <summary>
            Index into m_counters for the total number of points
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointStatistics.PointStateIndex">
            <summary>
            Index into m_counters for the start of point state totals
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointStatistics.ResultStateIndex">
            <summary>
            Index into m_counters for the start of result state totals
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointStatistics.OutcomeIndex">
            <summary>
            Index into m_counters for the start of outcome totals
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointStatistics.MaxIndex">
            <summary>
            Index of the end of the m_counters array
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestPointStatistic">
            <summary>
            Represents the number of points with a given
            set of state values.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.AttachmentList">
            <summary>
            Maintains a list of test result attachments.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentList.QueueForDeletion(Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment)">
            <summary>
            Called when attachment is successfully deleted from the collection.
            Queues the attachment for later deletion from the server (if applicable).
            </summary>
            <param name="attachment"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ResultsStoreQuery">
            <summary>
            Represents a WIQL query and its associated information to be passed to the server.
            </summary>
            <summary>
            Information required to execute a WIQL query against
            objects stored in the TestManagement results store.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ResultsStoreQuery.DayPrecision">
            <summary>
            True if date comparisons are to be rounded to the nearest
            day.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ResultsStoreQuery.QueryText">
            <summary>
            WIQL query to execute.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ResultsStoreQuery.TeamProjectName">
            <summary>
            Name of team project to use for @project macro.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ResultsStoreQuery.TimeZone">
            <summary>
            Client's time zone information for interpreting dates
            and day rounding.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SharedStepResult">
            <summary>
            Represents the result of running a shared step set in a test case.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SharedStepResult.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper,System.Int32,System.Int32)">
            <summary>
            Called to construct a new SharedStepResult (not from the server)
            </summary>
            <param name="project"></param>
            <param name="actionId"></param>
            <param name="sharedStepId"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestActionResult">
            <summary>
            Represents the result for a single action
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionResult.PreSave(Microsoft.TeamFoundation.TestManagement.Client.SubResults,Microsoft.TeamFoundation.TestManagement.Client.TestResultIdentity)">
            <summary>
            Prepares a list of updates to be sent to the server.
            </summary>
            <param name="subResults">Collects update objects for children.</param>
            <param name="parent">Identity of our parent iteration or action.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionResult.PostSave">
            <summary>
            Called after updates have been successfully sent to the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestActionResult.Owner">
            <summary>
            Pointer to the collection that owns this result.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestActionResultCollection">
            <summary>
            Represents a list of action results.  Implements the proper public interface.
            </summary>
            <summary>
            A collection of test action results within a given test iteration result or shared step set.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionResultCollection.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject,Microsoft.TeamFoundation.TestManagement.Client.TestActionResult[])">
            <summary>
            Constructs a collection from an array of proxy objects.
            </summary>
            <param name="project"></param>
            <param name="results"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionResultCollection.#ctor">
            <summary>
            Constructs an empty collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestActionResultCollection.IndexOf(System.Int32)">
            <summary>
            Searches for a given action ID in the list.
            </summary>
            <param name="actionId">Action ID to look for</param>
            <returns>Index of the item or -1 if not found</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResult">
            <summary>
            Represents the status of a test case executed against a test run.
            </summary>
            <summary>
            Server-side representation of a test result object.
            This is declared public so that the WSDL layer can serialize and
            deserialize them.  It should not be directly called by any external
            code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResult.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper,System.Int32,System.Int32,System.String)">
            <summary>
            Skinny object constructor
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResult.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper,Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultIdentifier)">
            <summary>
            Skinny object constructor
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResult.PreSave(Microsoft.TeamFoundation.TestManagement.Client.SubResults)">
            <summary>
            Prepares a list of updates to be sent to the server.
            </summary>
            <param name="subResults">Collects update objects for children.</param>
            <returns>Server object representing this test case.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResult.PostSave(Microsoft.TeamFoundation.TestManagement.Client.ResultUpdateResponse)">
            <summary>
            Called after updates have been successfully sent to the server. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResult.Save(System.Boolean)">
            <summary>
            Sends updated test result information to the server.
            </summary>
            <param name="uploadInBackground">True to upload attachments in backgroud, false otherwise</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResult.ReadIteration(Microsoft.TeamFoundation.TestManagement.Client.TestActionResult[],System.Int32@)">
            <summary>
            Reads a single iteration and all of its descendant items from the array.
            </summary>
            <param name="results"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SubResults">
            <summary>
            Encapsulates several lists of changes to be pushed to the server.  This object
            is passed through the TestActionResult/TestIterationResult tree by the Save()
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SubResults.ActionResults">
            <summary>
            List of action results to be added or updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SubResults.ActionDeletes">
            <summary>
            List of action results to be deleted.  Only the ID
            fields are filled in.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SubResults.Parameters">
            <summary>
            List of parameters to be added or updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SubResults.ParameterDeletes">
            <summary>
            List of parameters to be deleted.  Only the ID fields
            are filled in.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultIdAndRev">
            <summary>
            Hold onto a triple of numbers, a runId and resultId and the revision number of
            a test case result.
            This is yet another object that should have been a struct, if our
            proxy generator only understood them
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ResultUpdateRequest">
            <summary>
            Store action results, parameters and attachments to update for a result. 
            TestRunId and TestResultId are used for security checking for test results or
            attachments, since an attachment can be created without updating its test result.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ResultUpdateRequest.LocalTestCaseResult">
            <summary>
            This is the local referenced of the result, and is always created for
            an update request. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper.CheckForAssociatedWorkItems(Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult[])">
            <summary>
            Throws a CannotResetLinkedResultException if any of the passed
            in test case results have associated work items.
            </summary>
            <param name="results"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper.PreSaveResults(Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult[])">
            <summary>
            Create a list of ResultUpdateRequest objects to send to server.
            </summary>
            <param name="results">List of results to be updated</param>
            <returns>List of result requests to send to server</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper.PostSaveResults(System.Collections.Generic.List{Microsoft.TeamFoundation.TestManagement.Client.ResultUpdateRequest},Microsoft.TeamFoundation.TestManagement.Client.ResultUpdateResponse[])">
            <summary>
            PostSave on successfully updated results and create a list of failed results
            </summary>
            <param name="requests">Requests sent to server</param>
            <param name="responses">Responses received from server</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestFailureType.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestFailureType.DeleteFromServer(Microsoft.TeamFoundation.TestManagement.Client.DeleteAction)">
            <summary>
            Removes the given test failure type from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestFailureType.Refresh">
            <summary>
            Updates the test failure type with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestFailureType.Save">
            <summary>
            Writes the new or updated test failure type to the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestIterationResult">
            <summary>
            Represents the result of an iteration of a test case.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestIterationResult.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called to construct a new TestIterationResult object (not from the server).
            </summary>
            <param name="project"></param>
            <param name="iterationId"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestIterationResult.PreSave(Microsoft.TeamFoundation.TestManagement.Client.SubResults,Microsoft.TeamFoundation.TestManagement.Client.TestResultIdentity)">
            <summary>
            Prepares a list of updates to be sent to the server.
            </summary>
            <param name="subResults">Collects update objects for children.</param>
            <param name="parent">Identity of our parent test case.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestIterationResult.PostSave">
            <summary>
            Called after updates have been successfully sent to the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestIterationResult.Owner">
            <summary>
            Pointer to the collection that owns this result.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestIterationResultCollection.AttachItem(Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult)">
            <summary>
            Checks and sets the child's Owner pointer.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestIterationResultCollection.DetachItem(Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult)">
            <summary>
            Clears the item's Owner pointer.
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestResolutionState.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResolutionState.DeleteFromServer(Microsoft.TeamFoundation.TestManagement.Client.DeleteAction)">
            <summary>
            Removes the given test resolution state from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResolutionState.Refresh">
            <summary>
            Updates the test resolution state with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResolutionState.Save">
            <summary>
            Writes the new or updated test resolution state to the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestResult">
            <summary>
            Base class for all test results (TestCaseResult, TestIterationResult, TestStepResult, SharedStepResult)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResult.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper,Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultIdentifier)">
            <summary>
            Skinny object constructor
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestResult.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestResult.CollectorsEnabled">
            <summary>
            Property caching the list of collectors. For each test run result, the list is fixed.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResult.GetCollectorsEnabled">
            <summary>
            Parse the metadata file to determine what type of logging (action, background, video etc)
            was on when the test was run.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment">
            <summary>
            Represents an attachment that lives in the test results store.  It may
            be attached to a TestResult or a TestRun.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.Length">
            <summary>
            Gets the length of uncompressed content.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.CompressedLength">
            <summary>
            Gets the length of compressed content - this will be zero if there was no compression done.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.StreamLength">
            <summary>
            Gets the length of the stream - this is same as the uncompressed length if there
            was no compression done else compressed length.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.CreateDownloadUrl">
            <summary>
            Constructs a URL for downloading this item from the server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.ExecuteDownloadRequest">
            <summary>
             Executes Download request using proxy (if available)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.CreateDownloadRequest(Microsoft.TeamFoundation.Client.TfsConnection,Microsoft.TeamFoundation.Framework.Client.FileRepository.CredentialsType,System.Boolean,System.Boolean@)">
            <summary>
            Creates download request using query string returned by the server
            </summary>
            <param name="connection"></param>
            <param name="credentialType"></param>
            <param name="timeout"></param>
            <param name="tryProxy"> Whether request to proxy be attempted</param>
            <param name="isProxyUrl">out parameter returning whether proxy has been used</param>
            <returns>webrequest for downloading a single file</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.OpenContentStream">
            <summary>
            Opens the content stream for uploading the user supplied content.
            </summary>
            <returns>Stream to use for uploading the file.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.GetWebExceptionText(System.Net.WebException,System.Net.HttpStatusCode@)">
            <summary>
            Looks for an application-specified error message in the given
            WebException's response.  If not specified, returns e.Message
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment.Equals(Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment)">
            <summary>
            Required to implement AttachmentLists's ICollection methods.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestResultIdentity">
            <summary>
            A value type which encapsulates the identity information
            of a test run, result, iteration, or action result.  This
            can consist of up to four independent values.  This type
            gives you an easy way to pass them around.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultParameter.#ctor(System.String)">
            <summary>
            Called to create a new TestResultParameter (not from the server).
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestResultParameterCollection">
            <summary>
            A collection of test result parameters within a given test iteration, shared step set or test action.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultParameterCollection.PreSave(Microsoft.TeamFoundation.TestManagement.Client.SubResults,Microsoft.TeamFoundation.TestManagement.Client.TestResultIdentity)">
            <summary>
            Prepares a list of updates to be sent to the server.
            </summary>
            <param name="subResults">Collects update objects for children.</param>
            <param name="owner">Identity of our parent iteration or action.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultParameterCollection.PostSave">
            <summary>
            Called after updates have been successfully sent to the server.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestResultParameterCollection.m_deletes">
            <summary>
            A list of parameters that have been deleted but not saved to the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultParameterCollection.Add(System.String,System.String,System.String)">
            <summary>
            Creates and adds a new TestResultParameter to the collection.
            </summary>
            <param name="name">Name of parameter.</param>
            <param name="expectedValue">The value that was expected.</param>
            <param name="actualValue">The value that was encountered.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestResultParameterCollection.ContainsKey(System.String)">
            <summary>
            Returns true if the collection contains the parameter with name specified.
            </summary>
            <param name="name">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestResultParameterCollection.Item(System.String)">
            <summary>
            Name based accessor for easy random-access to the test result parameter 
            collection. If no such name found, return null.
            </summary>
            <param name="name">Name of the test result parameter.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestStepResult">
            <summary>
            Represents the result for a single action
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestStepResult.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper,System.Int32)">
            <summary>
            Called to create a new TestStepResult (not from the server).
            </summary>
            <param name="project"></param>
            <param name="actionId"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestRun">
            <summary>
            Represents an execution of a set of tests against a specific build.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestRun.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestRun.SaveExistingRun(System.Boolean)">
            <summary>
            Helper for TestRun.Save() that is called to update an existing run on the server.
            </summary>
            <param name="uploadInBackground"></param>
            <param name="subResults"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestRun.SaveNewRun(System.Boolean)">
            <summary>
            Helper for TestRun.Save() that is called when the run is new
            </summary>
            <param name="uploadInBackground"></param>
            <param name="subResults"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestRun.TryDeleteRun(System.Int32)">
            <summary>
            Attempts to delete the new test run whose creation fails.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestRunBase">
            <summary>
            Base class for test run and session. Please see the ITestRunBase for the description of each fields
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestRunBase.SaveTestSettings">
            <summary>
            Save the test settings if it is changed. This occurs prior to a saving the test run, 
            so it could result in an extra test settings if saving the test run fails.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestRunBase.FetchTestSettingsIfNeeded">
            <summary>
            Fetch the test settings from server if one already exists
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestRunBase.CheckPlanExists">
            <summary>
            Used to improve error handling during run creation.  Throws
            a TestObjectNotFound exception if m_testPlanId != 0 and does
            not exist.
            </summary>
            <remarks>Eats all exceptions that occur calling the server, since we don't want to mask
            the original error.</remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunStatistics.TotalIndex">
            <summary>
            Index into m_counters for the total number of points
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunStatistics.ResultStateIndex">
            <summary>
            Index into m_counters for the start of result state totals
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunStatistics.OutcomeIndex">
            <summary>
            Index into m_counters for the start of outcome totals
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunStatistics.MaxIndex">
            <summary>
            Index of the end of the m_counters array
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestRunStatistic">
            <summary>
            Represents a permutation of (state, outcome, resolution) along with the number of test results
            matching those values.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Session">
            <summary>
            Encapsulates the session object created during an exploratory session.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Session.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Session.Save(System.Boolean)">
            <summary>
            Sends updated session information to the server.
            </summary>
            <param name="uploadInBackground">True to upload attachments in backgroud, false otherwise</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Session.SaveExistingSession(System.Boolean)">
            <summary>
            Helper for Session.Save() that is called to update an existing session on the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Session.TryDeleteSession(System.Int32)">
            <summary>
            Attempts to delete the new session whose creation fails.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SessionBookmark">
            <summary>
            Class to capture the book mark.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SessionBookmark.ArtifactUri">
            <summary>
            A generic artifact Uri for the bookmark.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper">
            <summary>
            Helper object to create, query, and delete sessions.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper.Create">
            <summary>
            Create a new session.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper.Create(System.Int32)">
            <summary>
            Create a new session and set the plan id.
            </summary>
            <param name="testPlanId">plan id.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper.Find(System.Int32)">
            <summary>
            Find the session given a session id.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper.FindByLink(System.Uri)">
            <summary>
            Retrieves a single test session from the server based on its unique Url.
            </summary>
            <param name="SessionId">The url of the session to be retrived.</param>
            <returns>The session object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper.Query(System.String)">
            <summary>
            Query session given a WIQL query.
            </summary>
            <param name="queryText"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper.Count(System.String)">
            <summary>
            Get the count of the sessions matching the query.
            </summary>
            <param name="queryText"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper.Delete(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ISession})">
            <summary>
            Delete a set of sessions.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SessionHelper.Delete(System.Int32[])">
            <summary>
            Delete sessions given session ids.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SessionNote">
            <summary>
            Class to capture the notes taken during a session.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SessionNote.CreationTime">
            <summary>
            The duration at which the note is created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SessionNote.Comment">
            <summary>
            The comment entered at the time.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SessionPropertyCollection`1">
            <summary>
            Collection to store notes, bookmarks or any collection that is a propery of the sesssion.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SharedStep.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SharedStep.TestCaseReferences">
            <summary>
            Returns the list of Test Cases that contain a reference to this
            Shared Step Set.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.SharedStepHelper.DoRequiredFieldsExist">
            <summary>
            Tells if the required Shared Steps Fields are defined for the Shared Steps
            Work Item
            </summary>
            <returns>True if all the required fields are present</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SharedStepReference">
            <summary>
            Represents a single action and expected result
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.StructureServiceHelper">
            <summary>
            Provides some helper methods for working with the TFS common structure service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.StructureServiceHelper.CssToWorkItemPath(System.String)">
            <summary>
            Converts CSS paths to the form expected by work item tracking.
            </summary>
            <param name="cssPath">CSS path to convert.</param>
            <returns>WIT form (has the area root removed)</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.StructureServiceHelper.WorkItemToCssPath(System.String,Microsoft.TeamFoundation.Server.NodeInfo)">
            <summary>
            Converts a work item path into the form expected by CSS
            </summary>
            <param name="workItemPath">Work item path to convert.</param>
            <param name="areaRoot">Root area node.</param>
            <returns>CSS form with area root added.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.StructureServiceHelper.FindAreaRoot(Microsoft.TeamFoundation.Server.ICommonStructureService,Microsoft.TeamFoundation.Server.ProjectInfo)">
            <summary>
            Finds the root of the area path structure.
            </summary>
            <param name="css">CSS service to call into.</param>
            <param name="project">Project to find root of.</param>
            <returns>NodeInfo for structure root or null if not found.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.StructureServiceHelper.FindIterationRoot(Microsoft.TeamFoundation.Server.ICommonStructureService,Microsoft.TeamFoundation.Server.ProjectInfo)">
            <summary>
            Finds the root of the iteration structure.
            </summary>
            <param name="css">CSS service to call into.</param>
            <param name="project">Project to find root of.</param>
            <returns>NodeInfo for structure root or null if not found.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.StructureServiceHelper.FindAreaRootFromWorkItemPath(Microsoft.TeamFoundation.Server.ICommonStructureService,System.String)">
            <summary>
            Looks up the root of the area path structure from a work item path.
            </summary>
            <remarks>
            Parses out the project name, looks it up, and returns the root area node.
            </remarks>
            <param name="css">CSS service (used to look up project).</param>
            <param name="workItemPath">Path to find root of in work item format.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.StructureServiceHelper.FindStructureRoot(Microsoft.TeamFoundation.Server.ICommonStructureService,Microsoft.TeamFoundation.Server.ProjectInfo,System.String)">
            <summary>
            Finds the root of the given structure.
            </summary>
            <param name="css">CSS service to call into.</param>
            <param name="project">Project to find root of.</param>
            <param name="structureType">Which structure to find.</param>
            <returns>NodeInfo for structure root or null if not found.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation">
            <summary>
            Holds information regarding a Clone operation
            </summary>
            <summary>
            Holds information regarding a Clone operation
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.StartedBy">
            <summary>
            User who started the Clone operation
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.PostLoad(Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject)">
            <summary>
            Method to initialize any Client-only fields
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.ClonedRequirementsCount">
            <summary>
            Number of Requirments cloned so far.
            </summary>
            <remarks>
            This is done for requirement bases suite
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.ClonedSharedStepCount">
            <summary>
            Number of shared steps cloned so far.
            </summary>
            <remarks>
            When a test case is cloned, any shared step referenced by the test case is also cloned.
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.ClonedTestCaseCount">
            <summary>
            Number of test cases cloned so far
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.CompletionDate">
            <summary>
            If the operation is complete, the DateTime of completion.
            If operation is not complete, this is DateTime.MaxValue
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.CreationDate">
            <summary>
            DateTime when the operation was started
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.DestinationProjectName">
            <summary>
            name of destination project
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.Message">
            <summary>
            If the operation has Failed, Message contains the reason for failure.
            Null otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.OpId">
            <summary>
            The ID of the operation
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.ResultObjectId">
            <summary>
            The ID of the object generated as a result of the Clone operation
            This field is valid only when <see cref="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.State" /> is <see cref="F:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationState.Succeeded" />. Otherwise it is zero.
            The type of of this object is indicated by <see cref="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.ResultObjectType" />
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.ResultObjectType">
            <summary>
            The type of the object generated as a result of the Clone operation
            The <see cref="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.ResultObjectId" /> contains the ID of this object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.SourceObjectId">
            <summary>
            Id of the source object given, this will source plan Id for plan clone operation and source suite id for suite clone operation
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.SourcePlanId">
            <summary>
            Plan Id of the source plan
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.SourcePlanName">
            <summary>
            Plan Name of the source plan
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.SourceProjectName">
            <summary>
            name of source project
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.State">
            <summary>
            Current state of the operation.
            When State reaches Suceeded or Failed, the operation is complete
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.TargetPlanId">
            <summary>
            Plan Id of the target plan
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.TargetPlanName">
            <summary>
            Plan Name of the target plan
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.TotalRequirementsCount">
            <summary>
            Total number of requirements to be cloned
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation.TotalTestCaseCount">
            <summary>
            Total number of test cases to be cloned
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.DynamicTestSuite.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan)">
            <summary>
            Create a brand new DynamicTestSuite (not from server)
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.DynamicTestSuite.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan,System.Int32,System.Boolean)">
            <summary>
            Skinny construction
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.DynamicTestSuiteBase">
            <summary>
            Base class for DynamicTestSuite and RequirementTestSuite
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.DynamicTestSuiteBase.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan)">
            <summary>
            Create a brand new DynamicTestSuite (not from server)
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.DynamicTestSuiteBase.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan,System.Int32,System.Boolean)">
            <summary>
            Skinny construction
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.RequirementTestSuite.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Constructs a RequirementTestSuite from a skinny object.
            </summary>
            <param name="helper">TestSuiteHelper object.</param>
            <param name="suiteId">ID of suite to retrieve.</param>
            <param name="requirementId">Unused, but required to distinguish this overload from the other</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ServerTestSuite">
            <summary>
            Represents both a static and a dynamic suite, the only difference is that if
            the query property is null, it is considered a static suite
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.StaticTestSuite">
            <summary>
            A static test suite is an explicit list of test case ids and test suite ids
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.StaticTestSuite.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan)">
            <summary>
            Create a brand new StaticTestSuite (not from server)
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.StaticTestSuite.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan,System.Int32,System.Boolean)">
            <summary>
            Skinny construction
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestSuite">
            <summary>
            All test suites share a common base implementation where most of the code resides
            Derivations are used to expose or hide appropriate functionality for root, dynamic, or static suites
            
            Suites have a lifecycle, from Skinny, to Slim to Full
            
            Skinny: All that is known or stored is the suite id and type
            Slim: ServerSuite is present, and all local properties are set. The entries collection is not present
            Full: Everything is there, local properties, entries, and optionally suites and cases collections for subtypes
            
            A Query results in a mix of Skinny and Slim suites
            
            Access to any property other than Entries will make a Skinny suite become slim
            Access to the entries collection will make either a Skinny, or Slim suite Full
            
            Given a starting suite, the descendent heirachy can be traversed, by accessing sub-suites, all suites
            will have a parent reference, except the topmost suite, whose parent is null.
            
            Refresh for suites, will always involve a complete tree of suites, starting at the topmost, no matter which
            suite the refresh was invoked on in the first place.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan,System.Int32,System.Boolean)">
            <summary>
            Create a skinny suite
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper,Microsoft.TeamFoundation.TestManagement.Client.TestPlan)">
            <summary>
            Create a new (unsaved) TestSuite
            </summary>
            <param name="project"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.SetServerSuite(Microsoft.TeamFoundation.TestManagement.Client.ServerTestSuite,System.Boolean)">
            <summary>
            Reset all simple properties to values defined in server suite
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.Validate">
            <summary>
            Checks for properties not supported by the server and throws validation exception.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.RefreshTree(System.Boolean,System.Int32)">
            <summary>
            Refresh the tree. We pass the selected suite Id to always refresh this suite
            regardless of its revision number. This is to get the latest configuration
            names of the selected suite for UI display.
            </summary>
            <param name="force">Force the refresh regardless the revision number</param>
            <param name="selectedSuiteId">The suite in the hierarchy where refresh is called</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.RefreshSingle">
            <summary>
            Used to update a single suite after Create() or Update() is called on the server
            </summary>
            <param name="serverSuite"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.GetRefreshData(System.Boolean,System.Int32)">
            <summary>
            Makes a server trip to fetch any changes to the suites I have to refresh.
            For the selected suite, always get the server copy regardless of the revision 
            number. For other suites in the hiearchy, pass their revision numbers to check
            for changes unless the force option is chosen.
            </summary>
            <param name="force">Force the refresh regardless the revision number</param>
            <param name="selectedSuiteId">The suite in the hierarchy where refresh is called</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.RefreshTreePrune(System.Collections.Generic.Dictionary{System.Int32,Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry},System.Collections.Generic.Dictionary{System.Int32,Microsoft.TeamFoundation.TestManagement.Client.ServerTestSuite})">
            <summary>
            RefreshTree, stage 1, process deletions and child removals
            </summary>
            <remarks>
            Traverse, deep first, (preorder), simply updating local properties
            and associating new server suites.
            For any self deletes, mark the suite as deleted
            On way back up, process child removals, and add suite entries to the orphan dictionary.
            </remarks>
            <param name="orphans"></param>
            <param name="refreshData"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.RefreshTreeRebuild(System.Collections.Generic.Dictionary{System.Int32,Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry},System.Collections.Generic.Dictionary{System.Int32,Microsoft.TeamFoundation.TestManagement.Client.ServerTestSuite})">
            <summary>
            RefreshTree, stage 2, Process child re-order and addition
            </summary>
            <remarks>
            Traverse, deep first (preorder)
             Process child reorders, and additions, for additions reuse if possible, if re-using, re-apply
            </remarks>
            <param name="orphans"></param>
            <param name="refreshData"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.TestCasesIndex(System.Int32)">
            <summary>
            Translates an index into the Entries collection to
            an index in the TestCases collection.
            </summary>
            <param name="entriesIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.GetSuitesInSuite">
            <summary>
            Recurse and return a suites saved descendents (not including itself)
            This is in memory only and skips skinnies
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.GatherAll(System.Collections.Generic.Stack{Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase},System.Collections.Generic.Dictionary{System.Int32,Microsoft.TeamFoundation.TestManagement.Client.ITestCase})">
            <summary>
            Recursive method to find all the test cases in a subtree
            </summary>
            <param name="ancestors"></param>
            <param name="results"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.SyncWithServerEntries(Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry})">
            <summary>
            Try to get the entry list to be the same as that passed in
            For new entries, see if the passed in list has the referred to object
            or whether a skinny needs to be created
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.Microsoft#TeamFoundation#TestManagement#Client#ITestSuiteBase#Parent">
            <summary>
            Return interface for public consumption
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.InheritConfigurationsFrom">
            <summary>
            Returns the TestSuite ancestor that this suite should inherit its configuration list from.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.m_serverEntries">
            <summary>
            We store a copy of the server entry array to defer the creation of
            the TestSuiteEntryCollections.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestSuite.m_parentId">
            <summary>
            Parent suite ID
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteCollection.Fetch(System.Collections.Generic.Dictionary{System.Int32,Microsoft.TeamFoundation.TestManagement.Client.TestSuite})">
            <summary>
            Page uses this to fill next page
            Override as suites are "special"
            </summary>
            <param name="skinnyItems"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry">
            <summary>
            Used for entries in test suite
            </summary>
            <remarks>
            It seemed to me that this should be a struct, but genproxy barfs
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry.SetPointAssignments(System.Guid,System.Collections.Generic.List{Microsoft.TeamFoundation.TestManagement.Client.IdAndName})">
            <summary>
            Resets the PointAssignments and Configurations public properties
            with new values from the server.
            </summary>
            <param name="owner">Owner value to be used for all new configurations</param>
            <param name="configIds">Array of configuration IDs to change owner of (or add)</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry.UpdatePointAssignments(Microsoft.TeamFoundation.TestManagement.Client.TestPointAssignment[],System.Int32)">
            <summary>
            Update point assignments of the entry. To force WPF binding to revaluate
            the PointAssignments property, a new array object must be set to this property.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper.CreateFromServerSuite(Microsoft.TeamFoundation.TestManagement.Client.ServerTestSuite,Microsoft.TeamFoundation.TestManagement.Client.TestPlan,System.Boolean)">
            <summary>
            Creates appropriate type of client suite, depending on a server suite
            </summary>
            <param name="project"></param>
            <param name="serverSuite"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper.CreateSkinny(Microsoft.TeamFoundation.TestManagement.Client.SuiteIdAndType,Microsoft.TeamFoundation.TestManagement.Client.TestPlan)">
            <summary>
            Create appropriate skinny object (static or dynamic suite) or null
            </summary>
            <param name="id"></param>
            <returns>
            Skinny TestSuite
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper.GetTestCaseAndOwners(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry})">
            <summary>
            Converts an enumeration of test suite entries to the TestCaseAndOwner form required by the server.
            </summary>
            <param name="entries">Entries to convert</param>
            <returns>List of TestCaseAndOwner objects</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper.GetIdsAndNames(Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject,System.Int32[],System.String[])">
            <summary>
            Returns the list of id and name of configurations. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper.TrySuiteOperationWithRefreshAndRetry(System.Action,Microsoft.TeamFoundation.TestManagement.Client.TestSuite@,Microsoft.TeamFoundation.TestManagement.Client.TestSuite@)">
            <summary>
            In case source / destination suites have been updated 
            for test suite hierarchy / entry realated operations then 
            refresh suites and try again.
            This is done to handle scenarios like where in one user has 
            added a test case to a suite. Now suite revision is updated.
            Another user working on the previous version of the suite will not be able
            to add a suite and get test suite updated exception until he refreshes explicitly.
            The two add test cases are independent operations(not conflicting as such) and
            ideally the operation should succeed. Previously user was able to do it.
            To retain the earlier user experience we are adding this suite refresh and retry
            once logic. Similar is the case for add suite, move suite entries, copy suite, delete
            suite entries.
            </summary>
            <param name="operation"></param>
            <param name="source"></param>
            <param name="destination"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration.ValueDictionaryEvent(System.Object,Microsoft.TeamFoundation.TestManagement.Client.NotifyingDictionary{System.String,System.String}.NotifyingDictionaryEventArgs)">
            <summary>
            Monitors the values dictionary and fires property notifications.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration.m_valuesDictionary">
            <summary>
            The list of values updated by users. When Save() is called, the collection
            is serialized into an array of values and sent to the server.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration.m_localValues">
            <summary>
            Keep the list of values from the server locally. This replaces m_values
            so m_values can be used only to transfer the values between client and server,
            thus in case there is no change to the values, m_values can be null.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration.m_valuesChanged">
            <summary>
            Indicate if the values are modified between two server updates.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration.ValueDictionary">
            <summary>
            Inner class to represent the Values property as a dictionary using
            the array passed in by m_values
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration.ValueDictionary.ToArray">
            <summary>
            Convert the dictionary into the form needed by the server.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration.ValueDictionary.IsReadOnly">
            <summary>
            Override to make the collection read-only if the config has been saved.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationCollection.ToIdArray">
            <summary>
            Converts this list of configurations to an array of their integer ids
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestManagementService">
            <summary>
            FOR INTERNAL USE ONLY.
            The Test Management service.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestManagementService.AuthorizedIdentity">
            <summary>
            Get the Authorized Identity
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject.WorkItemTypesFor(System.String)">
            <summary>
            Provide access to the work item types that should be queried for, for
            supported categories <see cref="T:Microsoft.TeamFoundation.TestManagement.Common.WitCategoryRefName"></see>
            </summary>
            <param name="categoryRefName">Wit category ref name</param>
            <returns>An array of wit workitem type names, element 0 is the default used on creation</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject.AttachmentDownloadUri">
            <summary>
            Returns the URI to the attachment download web service.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject.AttachmentUploadUri">
            <summary>
            Returns the URI to the attachment upload web service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject.LookupServiceUris">
            <summary>
            Contacts TFS to find the URIs for our web services.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject.GetStoredQuery(System.Guid)">
            <summary>
            Create a stored query from a guid
            </summary>
            <param name="guid"></param>
            <returns>null if guid not found</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject.WorkItemLinkFilter">
            <summary>
            Returns a LinkFilter that returns associated work items.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestSettings.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TestSettings.CopyTestSettings(Microsoft.TeamFoundation.TestManagement.Client.ITestSettings)">
            <summary>
            Copy the user-settable properties from another test settings.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestSettingsMachineRole">
            <summary>
            Represents the information about a machine role stored in a test settings
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestVariable.ObjectType">
            <summary>
            Gets the object type so that we can use it in error messages etc.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.UpdatedProperties">
            <summary>
            This class holds the default updated properties of generic test objects
            that are returned to the client side after a web service call such as
            Save(), Update(), etc.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.AsyncUploadHandler">
            <summary>
             Internally we use this class to handle callbacks and to encapsulate  
             all the information relevant to an upload of a single chunk or a file or multiple files.
            </summary>
            <remarks>
             The uploading process is broken up over a number of methods
             which are called asynchronously and chained together:
              StartUpload->RequestCallback->WriteCallback*->LastWriteCallback->ResponseCallback
             WriteCallback will call itself multiple times before eventually calling LastWriteCallback.
             These callbacks are called on a background thread so they must catch all exceptions
             and signal the calling thread (via an event) when they are done.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AsyncUploadHandler.BeginUploadAttachment(Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment)">
            <summary>
            Begins upload of an attachment.
            Depending on the size of the attachment, this will break attachment in multiple chunks and upload.
            </summary>
            <param name="attachment">The attachment to upload.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AsyncUploadHandler.BeginUploadAttachments(System.Collections.Generic.IList{Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment},System.AsyncCallback,System.Object)">
            <summary>
            Begins upload of multiple attachments.
            All the attachments are uploaded in one web call.
            </summary>
            <param name="attachments">The attachments to upload.</param>
            <param name="callback">The callback function once the upload is done.</param>
            <param name="state">The state info to pass to the callback function.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AsyncUploadHandler.BeginUploadChunk(Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment,System.IO.Stream,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins upload of a chunk of large attachment.
            </summary>
            <param name="attachments">The attachment to upload.</param>
            <param name="contentStream">The content stream of the attachment.</param>
            <param name="bytesToUpload">The number of bytes to upload.</param>
            <param name="callback">The callback function once the upload is done.</param>
            <param name="state">The state info to pass to the callback function.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AsyncUploadHandler.EndUploadAttachment">
            <summary>
            Ends upload of an attachment.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AsyncUploadHandler.EndUploadAttachments">
            <summary>
            Ends upload of multiple attachments.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AsyncUploadHandler.EndUploadChunk">
            <summary>
            Ends upload of an attachment chunk.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadEntry.#ctor(Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager,System.Xml.XmlReader)">
            <summary>
            ONLY FOR XML LOADING
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadEntry.InitializeAttachment(Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject)">
            <summary>
            Set the attachment this entry should refer to
            </summary>
            <param name="attachment"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadEntry.UpdatePersistedFrom(Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadEntry)">
            <summary>
            Update from another entry, return true if update resulted in a change
            Identity fields must match
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager">
            <summary>
            The AttachmentUploadManager looks after a persisted store of Entries and
            processes any it can
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.#ctor">
            <summary>
            ONLY FOR TESTING
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject)">
            <summary>
            When the Manager is constructed, we initialize the storage
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.QueueAttachment(Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment)">
            <summary>
            Add a new attachment to be uploaded, used inside SaveResults
            </summary>
            <param name="attachment"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.FromXml(System.Xml.XmlReader)">
            <summary>
            Reads from the managers queue file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.IsSame(Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager)">
            <summary>
            ONLY FOR TESTING
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.SystemEvents_PowerModeChanged(System.Object,Microsoft.Win32.PowerModeChangedEventArgs)">
            <summary>
            Event handler for 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.PerformInitialUpdate">
            <summary>
            Perform my initial read/write so we are valid by the time constructor returns
            </summary>
            <remarks>
            This creates our interprocess lock, reads the file, prunes out any dead pids
            then writes it back
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.ReadFileWithRecovery">
            <summary>
            Opens the file, reads it, if read fails, or file is corrupt
            look for backup. If problems with backup, act like is is empty
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.ReadFile(System.Boolean)">
            <summary>
            Opens the file, read it, throw exception if problems (including no file)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.Read">
            <summary>
            Read current state
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.WriteFileSafely">
            <summary>
            When writing we write to a backup, then rename it. This is so if we crash
            halfway through, there is a good chance we can recover
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.IsCandidate(Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadEntry)">
            <summary>
            Returns true if the entry is one that this Manager could be processing
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.FindZombieUpload">
            <summary>
            Look for an in progress (Uploading) entries would be acceptable
            to be uploaded, and are not associated
            with either my process, or a running process
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.Update(System.Int32,System.Collections.Generic.List{Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadEntry})">
            <summary>
            Given a new version and a list of new entries, update our list and fire notifications
            </summary>
            <param name="version">new version</param>
            <param name="newEntries">new entries</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.FirePendingEvents(System.Collections.Generic.Queue{Microsoft.TeamFoundation.TestManagement.Client.UploadManagerEventArgs})">
            <summary>
            Send off a list of pending events
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.ReleaseSlot(Microsoft.TeamFoundation.TestManagement.Client.UploadSlot)">
            <summary>
            Release so the slot can be re-used
            </summary>
            <param name="slot"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.CheckAndClearStuckSlots">
            <summary>
            Checks if the next attempt for clearing stuck slots is less 
            than current time and clears stuck slot, if any.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.ClearStuckSlots">
            <summary>
             A slot could be stuck because acknowledgement of upload may not be received due to 
             hibernation and the chunk state could still be uploading. Hence checking for stuck slots. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager.CheckFileTime(Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadEntry)">
            <summary>
            Can only be called inside an update lock, as it may result in a change
            </summary>
            <returns>true if the date changed</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.UploadSlot">
            <summary>
            This object is used during uploads, it maintains state such as open
            streams and buffers
            
            We only have a fixed number of these objects, each of which is called a slot
            and we assign them to whichever entries we are actively uploading.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.UploadSlot.IsStuck">
            <summary>
            Checks if the slot is stuck and is not processing the upload. 
            This is based on validating th timestamp of last chunk sent and last chunk acknowledged. 
            </summary>
            <param name="slot">the slot to be validated</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.UploadSlot.Clear">
            <summary>
            Clears a slot by removing the entry
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.MimePart">
            <summary>
            Represents a MIME part. Multiple such parts are used to create one MIME request.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.MimePart.GetData">
            <summary>
            Gets the data contained in this MIME part.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.MimePart.Length">
            <summary>
            Gets the length of this MIME part.
            NOTE - This may not be same as m_data.Length.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.MimePartsBuilder">
            <summary>
            Builder class for MIME parts.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.AttachmentHeaderMimePart">
            <summary>
            MIME part representing the single attachment header.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.AttachmentFileHeaderMimePart">
            <summary>
            MIME part representing the file header before the file content.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.AttachmentFooterMimePart">
            <summary>
            MIME part representing the footer of a message.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.NewLineMimePart">
            <summary>
            MIME part representing a new line.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.AttachmentChunkMimePart">
            <summary>
            MIME part representing a chunk of an attachment.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.MultiAttachmentHeaderMimePart">
            <summary>
            MIME part representing header for multiple attachments in one web call.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.UploadHandlerHelper.DoesServerSupportsNewAttachmentFeatures(Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject)">
            <summary>
            Checks whether the server supports new attachment features like
            attachment compression and multiple uploads of attachments in one request).
            </summary>
            <param name="project">The project in question.</param>
            <returns>
            True if server supports new attachment features, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.UploadHandlerHelper.UploadAttachments(System.Collections.Generic.List{Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment},System.Boolean)">
            <summary>
            Uploads multiple attachments. This tries to opportunistically club multiple smaller
            files in one web method for improved performance. 
            </summary>
            <param name="attachments">The list of attachments.</param>
            <param name="serverSupportsMultipleAttachmentsInOneRequestports">
            Whether server supports multiple attachment upload or not. This is separate flag to improve testability.
            </param>
            <remarks>It is the responsibility of the caller to ensure that there is no attachment in the list
            that is already uploaded to the server. 
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.UploadHandlerHelper.UploadAttachmentsMultipleAttachmentsPerRequest(System.Collections.Generic.IList{Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment})">
            <summary>
            Tries to upload multiple attachments in one web request opportunistically.
            </summary>
            <param name="attachments">The attachments to upload.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.UploadHandlerHelper.UploadAttachmentsOneAttachmentPerRequest(System.Collections.Generic.IList{Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment})">
            <summary>
            Sends one attachment (or chunk of it if big) in one web call but creates multiple parallel requests.
            </summary>
            <param name="attachments">The attachments to upload.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.UploadHandlerHelper.OnAttachmentUploadComplete(System.IAsyncResult)">
            <summary>
            Mark attachments that have been uploaded appropriately.
            </summary>
            <param name="asynchronousResult"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter">
            <summary>
            HtmlToXamlConverter is a static class that takes an HTML string
            and converts it into XAML
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter.ConvertXamlToHtml(System.String)">
            <summary>
            Main entry point for Xaml-to-Html converter.
            Converts a xaml string into html string.
            </summary>
            <param name="xamlString">
            Xaml strinng to convert.
            </param>
            <returns>
            Html string produced from a source xaml.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter.WriteFlowDocument(System.Xml.XmlTextReader,System.Xml.XmlTextWriter)">
            <summary>
            Processes a root level element of XAML (normally it's FlowDocument element).
            </summary>
            <param name="xamlReader">
            XmlTextReader for a source xaml.
            </param>
            <param name="htmlWriter">
            XmlTextWriter producing resulting html
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter.WriteElementProperties(System.Xml.XmlTextReader,System.Xml.XmlTextWriter,System.Text.StringBuilder)">
            <summary>
            Reads attributes of the current xaml element and converts
            them into appropriate html attributes or css styles.
            </summary>
            <param name="xamlReader">
            XmlTextReader which is expected to be at XmlNodeType.Element
            (opening element tag) position.
            The reader will remain at the same level after function complete.
            </param>
            <param name="htmlWriter">
            XmlTextWriter for output html, which is expected to be in
            after WriteStartElement state.
            </param>
            <param name="inlineStyle">
            String builder for collecting css properties for inline STYLE attribute.
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter.WriteElementContent(System.Xml.XmlTextReader,System.Xml.XmlTextWriter,System.Text.StringBuilder)">
            <summary>
            Reads a content of current xaml element, converts it
            </summary>
            <param name="xamlReader">
            XmlTextReader which is expected to be at XmlNodeType.Element
            (opening element tag) position.
            </param>
            <param name="htmlWriter">
            May be null, in which case we are skipping the xaml element;
            witout producing any output to html.
            </param>
            <param name="inlineStyle">
            StringBuilder used for collecting css properties for inline STYLE attribute.
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter.AddComplexProperty(System.Xml.XmlTextReader,System.Text.StringBuilder)">
            <summary>
            Conberts an element notation of complex property into
            </summary>
            <param name="xamlReader">
            On entry this XmlTextReader must be on Element start tag;
            on exit - on EndElement tag.
            </param>
            <param name="inlineStyle">
            StringBuilder containing a value for STYLE attribute.
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter.WriteElement(System.Xml.XmlTextReader,System.Xml.XmlTextWriter,System.Text.StringBuilder)">
            <summary>
            Converts a xaml element into an appropriate html element.
            </summary>
            <param name="xamlReader">
            On entry this XmlTextReader must be on Element start tag;
            on exit - on EndElement tag.
            </param>
            <param name="htmlWriter">
            May be null, in which case we are skipping xaml content
            without producing any html output
            </param>
            <param name="inlineStyle">
            StringBuilder used for collecting css properties for inline STYLE attributes on every level.
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter.ReadNextToken(System.Xml.XmlReader)">
            <summary>
            Reads several items from xamlReader skipping all non-significant stuff.
            </summary>
            <param name="xamlReader">
            XmlTextReader from tokens are being read.
            </param>
            <returns>
            True if new token is available; false if end of stream reached.
            </returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer">
            <summary>
            lexical analyzer class
            recognizes tokens as groups of characters separated by arbitrary amounts of whitespace
            also classifies tokens according to type
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.#ctor(System.String)">
            <summary>
            initializes the _inputStringReader member with the string to be read
            also sets initial values for _nextCharacterCode and _nextTokenType
            </summary>
            <param name="inputTextString">
            text string to be parsed for xml content
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.GetNextContentToken">
            <summary>
            retrieves next recognizable token from input string 
            and identifies its type
            if no valid token is found, the output parameters are set to null
            if end of stream is reached without matching any token, token type
            paramter is set to EOF
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.GetNextTagToken">
            <summary>
            Unconditionally returns a token which is one of: TagEnd, EmptyTagEnd, Name, Atom or EndOfStream
            Does not guarantee token reader advancing.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.GetNextEqualSignToken">
            <summary>
            Unconditionally returns equal sign token. Even if there is no
            real equal sign in the stream, it behaves as if it were there.
            Does not guarantee token reader advancing.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.GetNextAtomToken">
            <summary>
            Unconditionally returns an atomic value for an attribute
            Even if there is no appropriate token it returns Atom value
            Does not guarantee token reader advancing.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.GetNextCharacter">
            <summary>
            Advances a reading position by one character code
            and reads the next availbale character from a stream.
            This character becomes available as NextCharacter property.
            </summary>
            <remarks>
            Throws InvalidOperationException if attempted to be called on EndOfStream
            condition.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.SkipWhiteSpace">
            <summary>
            skips whitespace in the input string
            leaves the first non-whitespace character available in the NextCharacter property
            this may be the end-of-file character, it performs no checking 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.IsGoodForNameStart(System.Char)">
            <summary>
            checks if a character can be used to start a name
            if this check is true then the rest of the name can be read
            </summary>
            <param name="character">
            character value to be checked
            </param>
            <returns>
            true if the character can be the first character in a name
            false otherwise
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.IsGoodForName(System.Char)">
            <summary>
            checks if a character can be used as a non-starting character in a name
            uses the IsExtender and IsCombiningCharacter predicates to see
            if a character is an extender or a combining character
            </summary>
            <param name="character">
            character to be checked for validity in a name
            </param>
            <returns>
            true if the character can be a valid part of a name
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.IsCombiningCharacter(System.Char)">
            <summary>
            identifies a character as being a combining character, permitted in a name
            TODO: only a placeholder for now but later to be replaced with comparisons against
            the list of combining characters in the XML documentation
            </summary>
            <param name="character">
            character to be checked
            </param>
            <returns>
            true if the character is a combining character, false otherwise
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.IsExtender(System.Char)">
            <summary>
            identifies a character as being an extender, permitted in a name
            TODO: only a placeholder for now but later to be replaced with comparisons against
            the list of extenders in the XML documentation
            </summary>
            <param name="character">
            character to be checked
            </param>
            <returns>
            true if the character is an extender, false otherwise
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.ReadDynamicContent" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.ReadComment" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.ReadUnknownDirective" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer.SkipProcessingDirective" -->
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.HtmlParser">
            <summary>
            HtmlParser class accepts a string of possibly badly formed Html, parses it and returns a string
            of well-formed Html that is as close to the original string in content as possible
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlParser.#ctor(System.String)">
            <summary>
            Constructor. Initializes the _htmlLexicalAnalayzer element with the given input string
            </summary>
            <param name="inputString">
            string to parsed into well-formed Html
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlParser.ParseHtml(System.String)">
            <summary>
            Instantiates an HtmlParser element and calls the parsing function on the given input string
            </summary>
            <param name="htmlString">
            Input string of pssibly badly-formed Html to be parsed into well-formed Html
            </param>
            <returns>
            XmlElement rep
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlParser.ParseHtmlContent">
            <summary>
            Parses the stream of html tokens starting
            from the name of top-level element.
            Returns XmlElement representing the top-level
            html element
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema">
            <summary>
            HtmlSchema class
            maintains static information about HTML structure
            can be used by HtmlParser to check conditions under which an element starts or ends, etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.#cctor">
            <summary>
            static constructor, initializes the ArrayLists
            that hold the elements in various sub-components of the schema
            e.g _htmlEmptyElements, etc.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.IsEmptyElement(System.String)">
            <summary>
            returns true when xmlElementName corresponds to empty element 
            </summary>
            <param name="xmlElementName">
            string representing name to test
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.IsBlockElement(System.String)">
            <summary>
            returns true if xmlElementName represents a block formattinng element.
            It used in an algorithm of transferring inline elements over block elements
            in HtmlParser
            </summary>
            <param name="xmlElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.IsInlineElement(System.String)">
            <summary>
            returns true if the xmlElementName represents an inline formatting element
            </summary>
            <param name="xmlElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.IsKnownOpenableElement(System.String)">
            <summary>
            It is a list of known html elements which we
            want to allow to produce bt HTML parser,
            but don'tt want to act as inline, block or no-scope.
            Presence in this list will allow to open
            elements during html parsing, and adding the
            to a tree produced by html parser.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.ClosesOnParentElementEnd(System.String)">
            <summary>
            returns true when xmlElementName closes when the outer element closes
            this is true of elements with optional start tags
            </summary>
            <param name="xmlElementName">
            string representing name to test
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.ClosesOnNextElementStart(System.String,System.String)">
            <summary>
            returns true if the current element closes when the new element, whose name has just been read, starts
            </summary>
            <param name="currentElementName">
            string representing current element name
            </param>
            <param name="elementName"></param>
            string representing name of the next element that will start
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.IsEntity(System.String)">
            <summary>
            returns true if the string passed as argument is an Html entity name
            </summary>
            <param name="entityName">
            string to be tested for Html entity name 
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.EntityCharacterValue(System.String)">
            <summary>
            returns the character represented by the entity name string which is passed as an argument, if the string is an entity name
            as specified in _htmlCharacterEntities, returns the character value of 0 otherwise 
            </summary>
            <param name="entityName">
            string representing entity name whose character value is desired
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.InitializeEmptyElements">
            <summary>
            initializes _htmlEmptyElements with empty elements in HTML 4 spec at
            http://www.w3.org/TR/REC-html40/index/elements.html
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.InitializeElementsClosingOnParentElementEnd">
            <summary>
            initializes _htmlElementsClosingOnParentElementEnd with the list of HTML 4 elements for which closing tags are optional
            we assume that for any element for which closing tags are optional, the element closes when it's outer element
            (in which it is nested) does
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema.InitializeHtmlCharacterEntities">
            <summary>
            initializes _htmlCharacterEntities hashtable with the character corresponding to entity names
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.HtmlTokenType">
            <summary>
            types of lexical tokens for html-to-xaml converter
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter">
            <summary>
            HtmlToXamlConverter is a static class that takes an HTML string
            and converts it into XAML
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.ConvertHtmlToXaml(System.String,System.Boolean)">
            <summary>
            Converts an html string into xaml string.
            </summary>
            <param name="htmlString">
            Input html which may be badly formated xml.
            </param>
            <param name="asFlowDocument">
            true indicates that we need a FlowDocument as a root element;
            false means that Section or Span elements will be used
            dependeing on StartFragment/EndFragment comments locations.
            </param>
            <returns>
            Well-formed xml representing XAML equivalent for the input html string.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.GetAttribute(System.Xml.XmlElement,System.String)">
            <summary>
            Returns a value for an attribute by its name (ignoring casing)
            </summary>
            <param name="element">
            XmlElement in which we are trying to find the specified attribute
            </param>
            <param name="attributeName">
            String representing the attribute name to be searched for
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.UnQuote(System.String)">
            <summary>
            Returns string extracted from quotation marks
            </summary>
            <param name="value">
            String representing value enclosed in quotation marks
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddBlock(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Analyzes the given htmlElement expecting it to be converted
            into some of xaml Block elements and adds the converted block
            to the children collection of xamlParentElement.
            
            Analyzes the given XmlElement htmlElement, recognizes it as some HTML element
            and adds it as a child to a xamlParentElement.
            In some cases several following siblings of the given htmlElement
            will be consumed too (e.g. LIs encountered without wrapping UL/OL, 
            which must be collected together and wrapped into one implicit List element).
            </summary>
            <param name="xamlParentElement">
            Parent xaml element, to which new converted element will be added
            </param>
            <param name="htmlElement">
            Source html element subject to convert to xaml.
            </param>
            <param name="inheritedProperties">
            Properties inherited from an outer context.
            </param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
            <returns>
            Last processed html node. Normally it should be the same htmlElement
            as was passed as a paramater, but in some irregular cases
            it could one of its following siblings.
            The caller must use this node to get to next sibling from it.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddSection(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddParagraph(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddImplicitParagraph(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})" -->
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddList(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Converts Html ul or ol element into Xaml list element. During conversion if the ul/ol element has any children 
            that are not li elements, they are ignored and not added to the list element
            </summary>
            <param name="xamlParentElement">
            XmlElement representing Xaml parent to which the converted element should be added
            </param>
            <param name="htmlListElement">
            XmlElement representing Html ul/ol element to be converted
            </param>
            <param name="inheritedProperties">
            properties inherited from parent context
            </param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddOrphanListItems(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            If li items are found without a parent ul/ol element in Html string, creates xamlListElement as their parent and adds
            them to it. If the previously added node to the same xamlParentElement was a List, adds the elements to that list.
            Otherwise, we create a new xamlListElement and add them to it. Elements are added as long as li elements appear sequentially.
            The first non-li or text node stops the addition.
            </summary>
            <param name="xamlParentElement">
            Parent element for the list
            </param>
            <param name="htmlLIElement">
            Start Html li element without parent list
            </param>
            <param name="inheritedProperties">
            Properties inherited from parent context
            </param>
            <returns>
            XmlNode representing the first non-li node in the input after one or more li's have been processed.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddListItem(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Converts htmlLIElement into Xaml ListItem element, and appends it to the parent xamlListElement
            </summary>
            <param name="xamlListElement">
            XmlElement representing Xaml List element to which the converted td/th should be added
            </param>
            <param name="htmlLIElement">
            XmlElement representing Html li element to be converted
            </param>
            <param name="inheritedProperties">
            Properties inherited from parent context
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddTable(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Converts htmlTableElement to a Xaml Table element. Adds tbody elements if they are missing so
            that a resulting Xaml Table element is properly formed.
            </summary>
            <param name="xamlParentElement">
            Parent xaml element to which a converted table must be added.
            </param>
            <param name="htmlTableElement">
            XmlElement reprsenting the Html table element to be converted
            </param>
            <param name="inheritedProperties">
            Hashtable representing properties inherited from parent context. 
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddColumnInformation(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.ArrayList,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Processes the information about table columns - COLGROUP and COL html elements.
            </summary>
            <param name="htmlTableElement">
            XmlElement representing a source html table.
            </param>
            <param name="xamlTableElement">
            XmlElement repesenting a resulting xaml table.
            </param>
            <param name="columnStartsAllRows">
            Array of doubles - column start coordinates.
            Can be null, which means that column size information is not available
            and we must use source colgroup/col information.
            In case wneh it's not null, we will ignore source colgroup/col information.
            </param>
            <param name="currentProperties"></param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddTableColumnGroup(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})" -->
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddTableColumn(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Converts htmlColElement into Xaml TableColumn element, and appends it to the parent
            xamlTableColumnGroupElement
            </summary>
            <param name="xamlTableElement"></param>
            <param name="htmlColElement">
            XmlElement representing Html col element to be converted
            </param>
            <param name="inheritedProperties">
            properties inherited from parent context
            </param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddTableRowsToTableBody(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,System.Collections.ArrayList,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Adds TableRow elements to xamlTableBodyElement. The rows are converted from Html tr elements that
            may be the children of an Html tbody element or an Html table element with tbody missing
            </summary>
            <param name="xamlTableBodyElement">
            XmlElement representing Xaml TableRowGroup element to which the converted rows should be added
            </param>
            <param name="htmlTRStartNode">
            XmlElement representing the first tr child of the tbody element to be read
            </param>
            <param name="currentProperties">
            Hashtable representing current properties of the tbody element that are generated and applied in the
            AddTable function; to be used as inheritedProperties when adding tr elements
            </param>
            <param name="columnStarts"></param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
            <returns>
            XmlNode representing the current position of the iterator among tr elements
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddTableCellsToTableRow(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,System.Collections.ArrayList,System.Collections.ArrayList,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Adds TableCell elements to xamlTableRowElement.
            </summary>
            <param name="xamlTableRowElement">
            XmlElement representing Xaml TableRow element to which the converted cells should be added
            </param>
            <param name="htmlTDStartNode">
            XmlElement representing the child of tr or tbody element from which we should start adding td elements
            </param>
            <param name="currentProperties">
            properties of the current html tr element to which cells are to be added
            </param>
            <returns>
            XmlElement representing the current position of the iterator among the children of the parent Html tbody/tr element
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AddDataToTableCell(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            adds table cell data to xamlTableCellElement
            </summary>
            <param name="xamlTableCellElement">
            XmlElement representing Xaml TableCell element to which the converted data should be added
            </param>
            <param name="htmlDataStartNode">
            XmlElement representing the start element of data to be added to xamlTableCellElement
            </param>
            <param name="currentProperties">
            Current properties for the html td/th element corresponding to xamlTableCellElement
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AnalyzeTableStructure(System.Xml.XmlElement,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet)">
            <summary>
            Performs a parsing pass over a table to read information about column width and rowspan attributes. This information
            is used to determine the starting point of each column. 
            </summary>
            <param name="htmlTableElement">
            XmlElement representing Html table whose structure is to be analyzed
            </param>
            <returns>
            ArrayList of type double which contains the function output. If analysis is successful, this ArrayList contains
            all the points which are the starting position of any column in the table, ordered from left to right.
            In case if analisys was impossible we return null.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AnalyzeTbodyStructure(System.Xml.XmlElement,System.Collections.ArrayList,System.Collections.ArrayList,System.Double,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet)">
            <summary>
            Performs a parsing pass over a tbody to read information about column width and rowspan attributes. Information read about width
            attributes is stored in the reference ArrayList parameter columnStarts, which contains a list of all starting
            positions of all columns in the table, ordered from left to right. Row spans are taken into consideration when 
            computing column starts
            </summary>
            <param name="htmlTbodyElement">
            XmlElement representing Html tbody whose structure is to be analyzed
            </param>
            <param name="columnStarts">
            ArrayList of type double which contains the function output. If analysis fails, this parameter is set to null
            </param>
            <param name="tableWidth">
            Current width of the table. This is used to determine if a new column when added to the end of table should
            come after the last column in the table or is actually splitting the last column in two. If it is only splitting
            the last column it should inherit row span for that column
            </param>
            <returns>
            Calculated width of a tbody.
            In case of non-analizable column width structure return 0;
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.AnalyzeTRStructure(System.Xml.XmlElement,System.Collections.ArrayList,System.Collections.ArrayList,System.Double,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet)">
            <summary>
            Performs a parsing pass over a tr element to read information about column width and rowspan attributes.  
            </summary>
            <param name="htmlTRElement">
            XmlElement representing Html tr element whose structure is to be analyzed
            </param>
            <param name="columnStarts">
            ArrayList of type double which contains the function output. If analysis is successful, this ArrayList contains
            all the points which are the starting position of any column in the tr, ordered from left to right. If analysis fails,
            the ArrayList is set to null
            </param>
            <param name="activeRowSpans">
            ArrayList representing all columns currently spanned by an earlier row span attribute. These columns should
            not be used for data in this row. The ArrayList actually contains notation for all columns in the table, if the
            active row span is set to 0 that column is not presently spanned but if it is > 0 the column is presently spanned
            </param>
            <param name="tableWidth">
            Double value representing the current width of the table.
            Return 0 if analisys was insuccessful.
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.GetRowSpan(System.Xml.XmlElement)">
            <summary>
            Gets row span attribute from htmlTDElement. Returns an integer representing the value of the rowspan attribute.
            Default value if attribute is not specified or if it is invalid is 1
            </summary>
            <param name="htmlTDElement">
            Html td element to be searched for rowspan attribute
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.GetNextColumnIndex(System.Int32,System.Double,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Gets index at which a column should be inseerted into the columnStarts ArrayList. This is
            decided by the value columnStart. The columnStarts ArrayList is ordered in ascending order.
            Returns an integer representing the index at which the column should be inserted
            </summary>
            <param name="columnStarts">
            Array list representing starting coordinates of all columns in the table
            </param>
            <param name="columnStart">
            Starting coordinate of column we wish to insert into columnStart
            </param>
            <param name="columnIndex">
            Int representing the current column index. This acts as a clue while finding the insertion index.
            If the value of columnStarts at columnIndex is the same as columnStart, then this position alrady exists
            in the array and we can jsut return columnIndex.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.ClearActiveRowSpans(System.Collections.ArrayList)">
            <summary>
            Used for clearing activeRowSpans array in the beginning/end of each tbody
            </summary>
            <param name="activeRowSpans">
            ArrayList representing currently active row spans
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.InitializeActiveRowSpans(System.Collections.ArrayList,System.Int32)">
            <summary>
            Used for initializing activeRowSpans array in the before adding rows to tbody element
            </summary>
            <param name="activeRowSpans">
            ArrayList representing currently active row spans
            </param>
            <param name="count">
            Size to be give to array list
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.GetNextColumnStart(System.Xml.XmlElement,System.Double)">
            <summary>
            Calculates width of next TD element based on starting position of current element and it's width, which
            is calculated byt he function
            </summary>
            <param name="htmlTDElement">
            XmlElement representing Html td element whose width is to be read
            </param>
            <param name="columnStart">
            Starting position of current column
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.CalculateColumnSpan(System.Int32,System.Double,System.Collections.ArrayList)">
            <summary>
            Calculates column span based the column width and the widths of all other columns. Returns an integer representing 
            the column span
            </summary>
            <param name="columnIndex">
            Index of the current column
            </param>
            <param name="columnWidth">
            Width of the current column
            </param>
            <param name="columnStarts">
            ArrayList repsenting starting coordinates of all columns
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.VerifyColumnStartsAscendingOrder(System.Collections.ArrayList)">
            <summary>
            Verifies that values in columnStart, which represent starting coordinates of all columns, are arranged
            in ascending order
            </summary>
            <param name="columnStarts">
            ArrayList representing starting coordinates of all columns
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.ApplyLocalProperties(System.Xml.XmlElement,System.Collections.Hashtable,System.Boolean)">
            <summary>
            Analyzes local properties of Html element, converts them into Xaml equivalents, and applies them to xamlElement
            </summary>
            <param name="xamlElement">
            XmlElement representing Xaml element to which properties are to be applied
            </param>
            <param name="localProperties">
            Hashtable representing local properties of Html element that is converted into xamlElement
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.GetElementProperties(System.Xml.XmlElement,System.Collections.Hashtable,System.Collections.Hashtable@,Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Analyzes the tag of the htmlElement and infers its associated formatted properties.
            After that parses style attribute and adds all inline css styles.
            The resulting style attributes are collected in output parameter localProperties.
            </summary>
            <param name="htmlElement">
            </param>
            <param name="inheritedProperties">
            set of properties inherited from ancestor elements. Currently not used in the code. Reserved for the future development.
            </param>
            <param name="localProperties">
            returns all formatting properties defined by this element - implied by its tag, its attributes, or its css inline style
            </param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
            <returns>
            returns a combination of previous context with local set of properties.
            This value is not used in the current code - inntended for the future development.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.GetCssAttribute(System.String,System.String)">
            <summary>
            Extracts a value of css attribute from css style definition.
            </summary>
            <param name="cssStyle">
            Source csll style definition
            </param>
            <param name="attributeName">
            A name of css attribute to extract
            </param>
            <returns>
            A string rrepresentation of an attribute value if found;
            null if there is no such attribute in a given string.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.TryGetLengthValue(System.String,System.Double@)">
            <summary>
            Converts a length value from string representation to a double.
            </summary>
            <param name="lengthAsString">
            Source string value of a length.
            </param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter.ApplyPropertiesToTableCellElement(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            Applies properties to xamlTableCellElement based on the html td element it is converted from.
            </summary>
            <param name="htmlChildNode">
            Html td/th element to be converted to xaml
            </param>
            <param name="xamlTableCellElement">
            XmlElement representing Xaml element for which properties are to be processed
            </param>
            <remarks>
            TODO: Use the processed properties for htmlChildNode instead of using the node itself 
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.InterProcessLock">
            <summary>
            This class implements a lock that can be used between processes
            The lock cares about thread identity, only one thread at a time
            can acquire the lock. For the same thread, the calls to Enter and Exit
            are nestable, Exit must be called as many times as Enter
            </summary>
            <remarks>
            Currently this is a thin wrapper around a named mutex
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.InterProcessLock.#ctor(System.String,System.Boolean)">
            <summary>
            Create an interprocess lock
            </summary>
            <param name="name">Name for lock (scoped by machine)</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.InterProcessLock.IsCreator">
            <summary>
            See if I created the InterProcessLock
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.InterProcessLock.EnterLock">
            <summary>
            Attempts to acquire the lock.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.InterProcessLock.ExitLock">
            <summary>
            Releases a lock
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.InterProcessLock.TryEnterLock(System.Int32)">
            <summary>
            Attempts to enter the lock, with an optional integer time-out.
            </summary>
            <param name="millisecondsTimeout">The number of milliseconds to wait,
            or -1 (System.Threading.Timeout.Infinite) to wait indefinitely.</param>
            <returns>true if the lock was acquired, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.NotifyingDictionary`2">
            <summary>
            NotifyingDictionary is a generic dictionary which raises events whenever entries are added or removed
            Events are raised before addition or removal, so the state of the list will be that prior to any changes
            
            It also supports traits to allow or disallow in place modification and insert
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ObjectCache`2">
            <summary>
             Template class to implement a thread safe local cache for objects.
             This relies on a delegate to actually provide new objects for the cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ObjectCache`2.Set(`0,`1)">
            <summary>
            Either adds a new object to the Cache,
            or replaces an existing one
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ObjectCache`2.GetWithUpdate(`0,Microsoft.TeamFoundation.TestManagement.Client.ObjectCache{`0,`1}.Updater,Microsoft.TeamFoundation.TestManagement.Client.ObjectCache{`0,`1}.Creator)">
            <summary>
            Either adds a new object to the Cache,
            or updates an existing one, 
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore">
            <summary>
            Manages an identity cache which is loaded from disk and periodically
            refreshed from the identity management service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.#ctor(Microsoft.TeamFoundation.TestManagement.Client.TestManagementService)">
            <summary>
            Initializes a new instance of the the TfsIdentityStore class.
            </summary>
            <param name="service">An instance of the test management service.</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.IdentityManagementService">
            <summary>
            Returns the interface to the identity management service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.Refresh">
            <summary>
            Causes a synchronous refresh of the identity cache.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.Initialize">
            <summary>
            Reads local cache if present.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.FindByDisplayName(System.String)">
            <summary>
            Finds the TeamFoundationIdentity associated with the unqiue display name.
            </summary>
            <param name="displayName">The display name of the identity sought.</param>
            <returns>Returns an instance to a TeamFoundationIdentity.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.FindByAccountName(System.String)">
            <summary>
            Finds the TeamFoundationIdentity associated with the unqiue account name.
            </summary>
            <param name="accountName">The account name of the user or group.</param>
            <returns>Returns an instance to a TeamFoundationIdentity.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.FindByTeamFoundationId(System.Guid)">
            <summary>
            Finds the TeamFoundationIdentity associated with the unique
            team foundation id
            </summary>
            <param name="displayName">The team foundation id of the identity sought.</param>
            <returns>A TeamFoundationIdentity.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.GetDisplayName(System.Guid)">
            <summary>
            Gets the display name of user associated with the unique foundation id
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.AddDisambiguousDisplayName(System.Guid,System.String)" -->
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.AllUserIdentities">
            <summary>
            Get all user identities cached locally.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.AllUserIdentityNames">
            <summary>
            Get all user identities cached locally.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.MakeDisplayNameUnique(Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
            <summary>
            This method will make the display names in the list unique
            </summary>
            <param name="identities"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.RecentUserNames">
            <summary>
            Get recently used users from TFS
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.AllGlobalAndProjectGroupIdentities">
            <summary>
            Returns all TeamFoundationIdentities associated with global and project groups.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore.ReadAllIdentitiesFromServer">
            <summary>
            Reads the identities from the everyone group and returns 
            them as a read-only collection.
            </summary>
            <returns>A read only collection of TeamFoundationIdentities.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.XmlStorageHelper">
            <summary>
            Our XML backed objects know how to load and save themselves, but
            only based on a reader or writer (this is so we can easily nest calls
            to the IXmlStorage interface)
            
            This static class provides mechanisms to initiate the process by creating
            the appropriate reader or writer, then passing that to the the object
            which actually performs the bulk of the work
            
            This is also a central place to catch and handle exceptions
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.WitHelper">
            <summary>
            The end game is that ALL wit access runs though here
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.HasCategoryCondition(Microsoft.TeamFoundation.WorkItemTracking.Client.Wiql.NodeCondition)">
            <summary>
            Returns true if the condition is:
            [System.WorkItemType] IN GROUP 'Microsoft.TestCaseCategory' (reference name)
            or 
            [System.WorkItemType] IN GROUP 'Test Case Category' (display name)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.CheckTestCaseCategoryCondition(System.String)">
            <summary>
            Ensures the query for dynamic test suite contains TestCaseCategory condition:
            [System.WorkItemType] IN GROUP 'Microsoft.TestCaseCategory'.
            This prevents the query to return non-testcase work items.     
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.WorkItemTypesFor(System.String)">
            <summary>
            Provide access to the work item types that should be queried for, for
            supported categories <see cref="T:Microsoft.TeamFoundation.TestManagement.Common.WitCategoryRefName"></see>
            </summary>
            <param name="categoryRefName">Wit category ref name</param>
            <returns>An array of wit workitem type names, element 0 is the default used on creation, returns null for unsupported category</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.CreateWorkItem(System.String)">
            <summary>
            Create a new work item of the default type for the category, handling exceptions
            </summary>
            <param name="categoryRefName">Category to choose work item type from</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.CreateWorkItem(System.String,Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItemType)">
            <summary>
            Create a new work item of the specified type, handling exceptions
            </summary>
            <param name="categoryRefName">Category work item type must belong to</param>
            <param name="workItemType">Type of work item to create</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.DefaultWiqlContext">
            <summary>
            Populates a dictionary with the appropriate values for executing WIQL queries.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.Query(System.Int32[],System.String,System.Boolean)">
            <summary>
            Returns a WorkItemCollection for a list of work item ids that is already known.
            This call does not make server trips, but when the work item fields are accessed,
            server trips may be made.
            </summary>
            <param name="ids">Array of work item ids.</param>
            <param name="queryText">WIQL query to execute.</param>
            <param name="stripWiql">If true, all WHERE and ORDER BY clauses will be removed from the
            WIQL prior to calling the work item API (which will error out if it sees them).</param>
            <returns>WorkItemCollection corresponding to inputs</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.Query(System.Int32[],System.Int32[],System.String,System.Boolean)">
            <summary>
            Returns a WorkItemCollection for a list of work item ids and revisions that is already known.
            This call does not make server trips, but when the work item fields are accessed,
            server trips may be made.
            </summary>
            <param name="ids">Array of work item ids.</param>
            <param name="revs">Array of work item revisions.</param>
            <param name="queryText">WIQL query to execute.</param>
            <param name="stripWiql">If true, all WHERE and ORDER BY clauses will be removed from the
            WIQL prior to calling the work item API (which will error out if it sees them).</param>
            <returns>WorkItemCollection corresponding to inputs</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.StripWiql(System.String)">
            <summary>
            Produces a new WIQL query containing only the field list from
            the original query.
            </summary>
            <remarks>
            Use this when you have an array of work item ids and want to efficiently
            create a WorkItemCollection containing selected fields of those work items.
            The WorkItemStore.Query(int[], string) API does not support WIQL string containing
            WHERE clause.  This function will take the undesired clauses away.
            </remarks>
            <param name="originalWiql">WIQL containing WHERE, ORDER BY, etc clauses</param>
            <returns>WIQL consisting of only the field list.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.GetLinkType(System.String)">
            <summary>
            Searches the work item store's RegisteredLinkTypes to find one for a specific tcm object.
            </summary>
            <param name="workItem"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.DoRequiredFieldsExist(System.String[],System.String)">
            <summary>
            Tells if the required Test Case or Shared Steps Fields are defined for the 
            Work Item
            NOTE: requiredFields list will be changed as a result of this function.
            </summary>
            <param name="requiredFields">The fields to check - this list will be destroyed by this function</param>
            <param name="categoryRefName">The category type of Work Item</param>
            <returns>True if all the required fields are present</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.WitHelper.FieldExistsInWorkItem(System.String,System.String,System.String)">
            <summary>
            Check to see if the given field is defined for the work item
            </summary>
            <param name="field">The field to check</param>
            <param name="categoryRefName">The work item category</param>
            <param name="workItemType">The work item type</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultCollection">
            <summary>
            Collection for TestCaseResults
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultCollection.Save(System.Boolean)">
            <summary>
            Persists the results in this collection to the server.
            </summary>
            <param name="uploadInBackground">Upload the attachments in background</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultCollection.QueryAssociatedWorkItems">
            <summary>
            Queries ids for all workitems associated with all test case results in the collection
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseCollection">
            <summary>
            Container for TestCases
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationCollection">
            <summary>
            Container for TestConfigurations
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepCollection">
            <summary>
            Container for SharedSteps
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanCollection">
            <summary>
            Collection of ITestPlans. May be modified to add or delete plans.
            When a plan is deleted so are all its passes and points.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanCollection.Refresh">
            <summary>
            Refresh of all plans in this collection, any in memory passes, and points
            Include one free RefreshStatistics!
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanCollection.RefreshStatistics">
            <summary>
            Refreshjust the statistics, on plans and passes. Much much cheaper than a full refresh
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanCollection.QueryText">
            <summary>
            Set the defualt query to be used to populate the Plan/Pass/Point tree
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestPointCollection">
            <summary>
            Collection of ITestPoints, not user modifiable,
            the server adds and remove points automatically
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPointCollection.Refresh(System.Int32[],System.Boolean)">
            <summary>
            Refresh a subset of test points in this collection, with an
            option to refresh their test case workitems.
            </summary>
            <param name="pointIds">Ids of the test points to be refreshed</param>
            <param name="refreshTestCases">If true then also refresh the test case workitems</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.AddCases(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestCase})">
            <summary>
            Add a list of test cases to the end of the list of entries
            </summary>
            <param name="cases"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.AddCases(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestCase},System.Boolean)">
            <summary>
            Add a list of test cases to the end of the list of entries
            </summary>
            <param name="cases"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.InsertCases(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestCase})">
            <summary>
            Insert a list of test cases at the given index in the list of entries
            </summary>
            <param name="index"></param>
            <param name="cases"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.InsertCases(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestCase},System.Boolean)">
            <summary>
            Insert a list of test cases at the given index in the list of entries
            </summary>
            <param name="index"></param>
            <param name="cases"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.RemoveCases(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestCase})">
            <summary>
            Remove a set of test cases from this collection
            </summary>
            <param name="cases"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.RemoveEntries(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry})">
            <summary>
            Removes a mixture of test cases and child suites from a single parent suite.
            </summary>
            <param name="entries"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.BulkMove(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry})">
            <summary>
            Move a set of entries from some place in the collection and insert
            them at the given index, all entries must be in this collection
            </summary>
            <param name="index"></param>
            <param name="entries"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.BulkMove(Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry},System.Boolean)">
            <summary>
            Move a set of entries from some place in the collection and insert
            them at the given index in another collection, all entries must be in
            the source collection, and the move will fail if this would
            produce duplicates in the destination, of if the destination is a
            descendant of a suite in the entries to move
            </summary>
            <param name="index"></param>
            <param name="entries"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection.BulkCopy(Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry},System.Boolean)">
            <summary>
            Copy a set of entries from some place in the collection and insert
            them at the given index in another collection, all entries must be in
            the source collection, and the copy will fail if this would
            produce duplicates in the destination, of if the destination is a
            descendant of a suite in the entries to move
            </summary>
            <remarks>
            Known limitation - This API does not support copying of test suites and will throw
            TestManagementValidationException if any entry is a test suite.
            </remarks>
            <param name="index"></param>
            <param name="entries"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentCollection">
            <summary>
            A collection of attachments associated with a test case, component,
            step, run, or result (etc.)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentCollection.Item(System.Int32)">
            <summary>
            Index based accessor for easy random-access to the collection.
            </summary>
            <remarks>
            This indexer is provided for run-time random access.  The order of the attachments
            in the collection is not preserved when the attachments are saved.
            </remarks>
            <param name="index">Index to look up</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the given item from the attachment list.
            </summary>
            <param name="index">Index of item to remove.</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResultCollection">
            <summary>
            A collection of test iterations within a test result.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResultCollection.Contains(System.Int32)">
            <summary>
            checks to see if the collection already contains an iteration with the supplied id.
            </summary>
            <param name="iterationId">id of the iteration</param>
            <returns>true of the colleciton contains an iteration with the specified id</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResultCollection.Remove(System.Int32)">
            <summary>
            removed an iteration from the collection
            </summary>
            <param name="iterationId">id of the iteration to remove</param>
            <returns>true if the iteration is found and removed</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResultCollection.Item(System.Int32)">
            <summary>
            Index based accessor for easy random-access to the collection.
            </summary>
            <remarks>
            This indexer is provided for run-time random access.  The order of the test result iterations
            in the collection is not preserved when the test result iterations are saved.
            </remarks>
            <param name="index">Index to look up</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsMachineRoleCollection">
            <summary>
            A collection of machine roles associated with an ITestSettings object.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsMachineRoleCollection.Create">
            <summary>
            Creates a new ITestSettingsMachineRole.  Returned object must be added to the collection by
            the caller.
            </summary>
            <returns>New object</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestExternalLinkCollection">
            <summary>
            A collection of external links to external objects.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.UploadCompletionEventHandler">
            <summary>
            Provide this to know when attachment uploads are complete
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.UploadManagerEventHandler">
            <summary>
            Provide this to watch the AttachmentUploadManagers list of entries
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestParameterDeletingEventEventHandler">
            <summary>
            Provide this to know when parameters are going to be deleted from a Test Case or a Shared
            Step.  Setting the Cancel property in the EventArgs will abort the delete.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestManagementException">
            <summary>
            Base class for all exceptions thrown by the test management API.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestManagementServerException">
            <summary>
            Thrown when an error is encountered by the test management server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestManagementConfigurationException">
            <summary>
            Thrown when an operation cannot complete an operation
            due to a misconfiguration of the server 
            </summary>
            <remarks>
            (e.g. missing work item type, category or registration information.)
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TemporaryFolderException">
            <summary>
            Thrown when temporary folder could not be created
            the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestObjectMustBeSavedException">
            <summary>
            Thrown when when a method is used that can only work if that object has been saved.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.InvalidWorkItemTypeException">
            <summary>
            Thrown when when the expected type of a workitem does not match the actual type
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.InvalidQueryException">
            <summary>
            Thrown when when a query string is not a valid WIT Query
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.StoredQueryNotFoundException">
            <summary>
            Thrown when when a the given stored query was not found on the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.InvalidParameterNameException">
            <summary>
            Thrown when a bad parameter name is used (parameter names should obey identifier rules)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManagerException">
            <summary>
            Exceptions related to upload processing
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestManagementValidationException">
            <summary>
            Thrown when when an object's property has a missing or invalid value.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestObjectUpdatedException">
            <summary>
            Thrown by the test management server when the user attempts to update an object
            that has been more recently changed by another user.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestObjectNotFoundException.Id">
            <summary>
            Returns the Id of the object that was not found.
            Only supports single interger Id object for now.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestObjectNotFoundException.ObjectType">
            <summary>
            Returns the object type of the object that was not found.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IActionRecordingHelper">
            <summary>
            Represents the mapping between action recordings
            and their associated test cases. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IActionRecordingHelper.Create(System.String)">
            <summary>
            Creates an action recording from a local file on disk. The 
            fileName is the full path of the file, not just name.
            </summary>
            <param name="fileName">File containing action recording.</param>
            <returns>Attachment containing action recording.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IActionRecordingHelper.GetDefaultForTestCase(System.Int32)">
            <summary>
            Gets the default (latest recorded) action recording of an ITestCase.
            </summary>
            <param name="testCaseId">Test case to retrieve recording for</param>
            <returns>Attachment containing action recording.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IActionRecordingHelper.CheckActionRecordingExists(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Takes list of test case Ids and Returns a bool list telling whether corresponding test cases has afn strip or not
            </summary>
            <param name="testCaseIds">List of Test Case Ids</param>
            <returns>Bool list telling whether corresponding test cases has afn strip or not</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IActionRecordingHelper.SetDefaultForTestCase(System.Int32,Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment)">
            <summary>
            Sets the default (latest recorded) action recording of an ITestCase.
            </summary>
            <param name="testCaseId">Test case to set recording for</param>
            <param name="afnStrip">Attachment containing action recording.</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment">
            <summary>
            Encapsulates an arbitrarily large stream of bytes stored on the TCM server.
            The content is not uploaded to the server until the object owning the attachment
            is saved.  The content is not downloaded from the server until CopyToArray() or
            CopyToFile() is called.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.Comment">
            <summary>
            Description of the attachment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.Name">
            <summary>
            Name of attachment on server.  Must be unique to the instance of the object attached to.
            Should not contain path information.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.Length">
            <summary>
            Length of the file as recorded on the server
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.AttachmentType">
            <summary>
            Type of the attachment
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.DownloadToArray(System.Byte[],System.Int32)">
            <summary>
            Downloads an attachment from the server to a byte array.
            </summary>
            <remarks>
            Only valid once an attachment has been saved
            </remarks>
            <param name="contents">Byte array to copy into.</param>
            <param name="offset">Starting position within the array to copy to.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.DownloadToFile(System.String)">
            <summary>
            Downloads an attachment from the server to a local file on disk.
            </summary>
            <remarks>
            Only valid once an attachment has been saved
            </remarks>
            <param name="localFileName"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.Uri">
            <summary>
            Uri for retrieving the contents of the attachment.
            If the attachment has not yet been uploaded, this will be a file:// uri.
            If the attachment has been uploaded, this will be the URI to download the
            contents from the server.  This is not the same as this.ArtifactUri.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.AssociateWorkItem(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Associates the given work item with this test result attachment. 
            </summary>
            <remarks>
            You must also call workItem.Save() after calling this method 
            for the test result attachment's link to be persisted to the server.
            </remarks>
            <param name="workItem">Work item to associate</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.DisassociateWorkItem(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Removes the association of the given work item to this test result attachment.
            </summary>
            <remarks>
            The work item must be already saved. You must also call workItem.Save() after calling this method 
            for the linking change to be persisted to the server.
            </remarks>
            <param name="workItem">Work item to disassociate</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.IsComplete">
            <summary>
            Returns false if the attachment is still being uploaded.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment.ArtifactUri">
            <summary>
            The Team Foundation artifact URI for the attachment.  This is used when linking to the
            attachment from other areas of TFS.  It is not the same as this.Uri.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentOwner">
            <summary>
            Things that have attachments support this interface
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentOwner.CreateAttachment(System.String)">
            <summary>
            Creates an attachment from a file on disk.
            </summary>
            <remarks>When the object owning this attachment is saved,
            the specified file will be uploaded to the TCM server,
            or queued for upload. It must continue to be readable
            until uploads are complete.
            </remarks>
            <param name="localFileName">
            File containing the contents of the attachment.
            </param>
            <returns>a new attachment</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentOwner.CreateAttachment(System.String,Microsoft.TeamFoundation.TestManagement.Client.SourceFileAction)">
            <summary>
            Creates an attachment from a file on disk.
            </summary>
            <remarks>When the object owning this attachment is saved,
            the specified file will be uploaded to the TCM server,
            or queued for upload. It must continue to be readable
            until uploads are complete.
            </remarks>
            <param name="localFileName">
            File containing the contents of the attachment.
            </param>
            <param name="deleteOnCompletion">
            When upload completes, delete the file.
            </param>
            <returns>a new attachment</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentOwner.Attachments">
            <summary>
            List of attachments.
            </summary>
        </member>
        <member name="E:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentOwner.AttachmentUploadCompleted">
            <summary>
            Watch for completion, for full progress information
            see IAttachmentUploadQueue.QueueChanged
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.DateCompleted">
            <summary>
            Date the upload completed. (DateTime.MinValue until complete)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.DateStarted">
            <summary>
            Date the upload was started. (DateTime.MinValue if not started)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.BytesTransferred">
            <summary>
            The number of bytes transferred (increases each time a
            block is sent and acknowledged). May decrease if file
            changes are detected, forcing a restart
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.Length">
            <summary>
             returns total uncompressed length of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.UploadState">
            <summary>
            Queued, Uploading, Paused, Cancelled, Completed, Failed
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.Pause">
            <summary>
            Pause, stop any current transfers until re-queued.
            From state: Queued or Uploading
              To state: Paused (reason User)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.PauseReason">
            <summary>
            Find out why entry is paused
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.Enqueue">
            <summary>
            Queue, start transferring blocks, as soon as possible.
            From state: Failed or Paused, with PauseReason=User
              To state: Queued or Transferring
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry.Cancel">
            <summary>
            Cancel the transfer, never consider it again, if the
            file underneath is marked for deletion, do so now.
            From state: Only allowed in states Failed, Queued or Uploading
              To state: Cancelled
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.Entries">
            <summary>
            The entries that the manager is aware of
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.RemoveCompletedEntries">
            <summary>
            Remove any entries that
            are terminal (so no longer of interest).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.PauseUploads">
            <summary>
            Pauses all pending and queued uploads
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.ResumeUploads">
            <summary>
            Queues all the paused uploads
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.GetRemainingBytesToUpload">
            <summary>
            Gets the total bytes remaining to be uploaded. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.AbandonAllUploads">
            <summary>
            Remove all entries, whether completed or not
            Uploads in progess will be stopped as soon as the
            current chunk has completed uploading, this may happen
            after this call returns
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.UploadsPending">
            <summary>
            Returns true if there is anything that still needs processing,
            including having active uploads.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.IsReady">
            <summary>
            Returns true if attachment uploader has read the file containing details of the 
            attachments to be uploaded.
            </summary>
        </member>
        <member name="E:Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager.Changed">
            <summary>
            Watch for changes, all events are reported through
            here, mainly so that UI can be updated.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping">
            <summary>
            Mapping of Bug filler properties to their WIT fields
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.CreatedBy">
            <summary>
            User who created the bug field mapping.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.CreatedByName">
            <summary>
            User who created the bug field mapping.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.CreatedDate">
            <summary>
            Date and time when the bug field mapping was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.BugWorkItem">
            <summary>
            The bug work item type to create
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.FieldMappings">
            <summary>
            Dictionary of automatically generated bug data to their
            corresponding Bug Work Item field names
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.Revision">
            <summary>
            Revision number of bug field mapping for concurrency control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.LastUpdatedBy">
            <summary>
            Last person to update bug field mapping 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.LastUpdatedByName">
            <summary>
            Last person to update bug field mapping 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.LastUpdated">
            <summary>
            Date the bug field mapping was last updated
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.Refresh">
            <summary>
            Updates the bug field mapping with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping.Export(System.String)">
            <summary>
            Exports the bug field mapping to an xml file
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMappingHelper.Create">
            <summary>
            Creates an object with the default field mapping
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMappingHelper.CreateFromFile(System.String)">
            <summary>
            Creates or updates the bug field mapping from an XML file.
            </summary>
            <remarks>
            This method does both validation the xml file against the schema
            
            If the schema validation fails, the XmlSchemaValidationException will
            be thrown, and for other validation, TestManagementValidationException.
            </remarks>
            <param name="fileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMappingHelper.Query">
            <summary>
            Retrieves the bug field mapping object for this team project
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMappingHelper.Update(Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping)">
            <summary>
            Updates the bug field mapping on the team project
            </summary>
            <param name="bugFieldMapping"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IBuildConfiguration">
            <summary>
            Represents a build configuration
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBuildConfiguration.BuildUri">
            <summary>
            Name (as a URI) of the build
            As an example: new Uri("vstfs:///Build/Build/1")
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBuildConfiguration.BuildPlatform">
            <summary>
            Platform of the build.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBuildConfiguration.BuildFlavor">
            <summary>
            Build flavor such as 'Release' or 'Debug'.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBuildConfiguration.TeamProjectName">
            <summary>
            Name of the Team Project to which the build belongs.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IBuildFilter">
            <summary>
            Defines filter criteria for choosing a build to associate with a test plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBuildFilter.BuildDefinition">
            <summary>
            Name of the build definition used with this plan. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IBuildFilter.BuildQuality">
            <summary>
            Build quality to filter by, or null for all build qualities
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBuildFilter.GetBuildDetailSpec">
            <summary>
            Returns an IBuildDetailSpec for retrieving all builds matching this filter.
            Pass this into team build's IBuildServer.QueryBuilds() API to retrieve the build details.
            </summary>
            <returns>Build detail spec.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBuildFilter.QueryBuildsSince(System.Uri)">
            <summary>
            Returns an IBuildDetailSpec for retrieving builds matching this filter.
            Pass this into team build's IBuildServer.QueryBuilds() API to retrieve the build details.
            </summary>
            <param name="buildUri">Build uri of the "current" build.</param>
            <returns>Build detail spec.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IBuildFilter.QueryBuildsBefore(System.Uri)">
            <summary>
            Returns an IBuildDetailSpec for retrieving builds matching prior to current build.
            Pass this into team build's IBuildServer.QueryBuilds() API to retrieve the build details.
            </summary>
            <param name="buildUri">Build uri of the "current" build.</param>
            <returns>Build detail spec.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ICoverage">
            <summary>
            Represents the coverage information
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IModuleCoverage">
            <summary>
            Represents coverage information pertaining to a module.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IFunctionCoverage">
            <summary>
            Represents coverage information pertaining to a function
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ICoverageStatistics">
            <summary>
            Represents various statistics associated with coverage.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IBuildCoverage">
            <summary>
            Represents the coverage information pertaining to a build
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestRunCoverage">
            <summary>
            Represents the coverage information pertaining to a test run.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ICoverageAnalysisManager">
            <summary>
            Manages interaction with coverage related API
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorHelper">
            <summary>
            Manages information about a set of data collectors on the TFS server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation">
            <summary>
            Represents information about a data collector stored in the TFS server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.Id">
            <summary>
            Unique ID for the collector information
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.TypeUri">
            <summary>
            Gets the unique identification of the data collector.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.DisplayName">
            <summary>
            Gets the user-friendly name for the collector
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.Description">
            <summary>
            Description of the collector.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.AssemblyQualifiedName">
            <summary>
            The assembly qualified type for the data collector.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.IsEnabledOnCollectionOnlyAgents">
            <summary>
            Is this data collector enabled on collection-only agents?
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.IsEnabledByDefault">
            <summary>
            Determines whether the data collector should be enabled by default
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.RequiresOutOfProcessCollection">
            <summary>
            Determines if a data collector requires out of process collection.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.DefaultConfiguration">
            <summary>
            Default Configuration to use for the collector.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.ConfigurationEditorTypeUri">
            <summary>
            The URI of the editor used to configure the collector's configuration
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.ConfigurationHelpUri">
            <summary>
            URI to open when help is requested while configuring the data collector
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.ConfigurationEditorConfiguration">
            <summary>
            XML used to configure the collector's configuration editor.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation.Properties">
            <summary>
            User-defined properties for the collector.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuiteBase">
            <summary>
            Common base class for all suites that are populated by the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuiteBase.LastPopulated">
            <summary>
            Timestamp of the last attempt to repopulate the suite's entries
            from the query.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuiteBase.LastError">
            <summary>
            Error message encountered on the last attempt to repopulate the
            suite's entries from the query.  Null if successful.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuiteBase.Repopulate">
            <summary>
            Re-executes the Query and updates the suite's entries with the results.
            </summary>
            <remarks>Repopulation is done periodically on the server.  This call forces a given suite to be repopulated immediately.</remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuite">
            <summary>
            A suite populated dynamically using a user-provided WIQL query
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuite.Query">
            <summary>
            The query on which a dynamic suite is based
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IRequirementTestSuite">
            <summary>
            A suite populated dynamically by finding test cases associated with a requirement work item.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IIdentifiable`1">
            <summary>
            This allows an object to be identified, K is the identifier (AKA Key)
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IImpactedTestPoint">
            <summary>
            Represents a test case that has been impacted by a build.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IImpactedTestPoint.TestCaseId">
            <summary>
            ID of the test case impacted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IImpactedTestPoint.Builds">
            <summary>
            List of builds this point was impacted in
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IImpactedTestPoint.TestPoint">
            <summary>
            Retrieves the full test point from the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IImpactedTestPoint.TestCase">
            <summary>
            Retrieves the full test case from the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IImpactedTestPoint.SuiteName">
            <summary>
            Returns the name of the test suite for the point
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IMachineRole">
            <summary>
            Describes a type of machine in a test environment, such as a web server or client machine.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IMachineRole.Id">
            <summary>
            Will be removed shortly.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IMachineRole.Name">
            <summary>
            Unique and user-dislayable name for the machine role.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IMachineRoleCollection">
            <summary>
            A collection of machine roles.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.IMachineRoleCollection.Create">
            <summary>
            Creates a new machine role object.  Returned object must be added to the collection by the caller.
            </summary>
            <returns>New object</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsMachineRole">
            <summary>
            A machine role that is associated with an ITestSettings object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsMachineRole.IsExecution">
            <summary>
            True if this the machine role where the tests are executed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.INewBuildStatistics">
            <summary>
            Provides statistics on the number of things that have changed
            since the last build was associated with the test plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.INewBuildStatistics.BuildCount">
            <summary>
            Number of new builds available
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.INewBuildStatistics.ResolvedBugCount">
            <summary>
            Number of bugs that have been resolved.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.INewBuildStatistics.CompletedRequirementCount">
            <summary>
            Number of requirement work items that have been marked completed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IPropertyOwner.IsDirty">
            <summary>
            Returns true if any properties have changed since the last fetch, refresh or save
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IPropertyOwner.InvalidProperties">
            <summary>
            Get a list of properties which are invalid
            </summary>
            <remarks>
            An extension to the IDataErrorInfo interface so the property
            names do not need to be known in advance
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ISession">
            <summary>
            Represent the execution of a charter.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.Duration">
            <summary>
            Duration of the test session.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.State">
            <summary>
            State of the session.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.Sprint">
            <summary>
            Sprint in which the session was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.ComputerName">
            <summary>
            The computer on which the session was run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.UserStoryId">
            <summary>
            The user story id for which the session was run. 0 for adhoc session.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.CharterId">
            <summary>
            The charter id for which the session was run. 0 for adhoc session.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.FeedbackId">
            <summary>
            The feedback id for which the session was run. 0 if the session is not created for feedback.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.UserStoryTitle">
            <summary>
            The title of the user story of the session, as of when the session is retrieved from the server.
            May be null if the server is of an older version, or if the server is unable to fetch the title.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.Notes">
            <summary>
            Notes created while executing the session.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.Bookmarks">
            <summary>
            Bookmarks created while executing this session.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.TestConfigurationId">
            <summary>
            ID of the configuration this session was executed against.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISession.TestConfigurationName">
            <summary>
            Name of the configuration this session was executed against.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISession.AssociateWorkItem(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Associates the given work item with this session. 
            </summary>
            <remarks>
            The work item must be presaved in order to have a valid uri to be stored with
            the session. You must also call workItem.Save() after calling this method 
            for the session's link to be persisted to the server.
            </remarks>
            <param name="workItem">Work item to associate</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISession.DisassociateWorkItem(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Removes the association of the given work item from this test result.
            </summary>
            <remarks>
            The work item must be already saved as a consequence of being associated with
            the session. You must also call workItem.Save() after calling this method 
            for the linking change to be persisted to the server.
            </remarks>
            <param name="workItem">Work item to disassociate</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISession.QueryAssociatedWorkItems">
            <summary>
            Retrieves workitems associated with this session from the server.
            </summary>
            <remarks>
            To retrieve the work items call WorkItemStore.Query(ids, wiql)
            
            This method retrieves work items by calling the server.  The effects
            of AssociateWorkItem() and DisassociateWorkItem() will not be observed
            by this method until you call workItem.Save().
            </remarks>
            <returns>Work item IDs of associated work items.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISession.CreateNote">
            <summary>
            Creates a session note.
            </summary>
            <returns>Returns an empty session note.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISession.CreateBookmark">
            <summary>
            Creates a session bookmark.
            </summary>
            <returns>Returns an empty session bookmark.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISession.Save(System.Boolean)">
            <summary>
            Sends updated session information to the server.
            </summary>
            <param name="uploadInBackground">True to upload attachments in backgroud, false otherwise</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ISessionBookmark">
            <summary>
            Interface to represent the session book mark.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISessionBookmark.ArtifactUri">
            <summary>
            A generic uri to an artifact.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ISessionNote">
            <summary>
            Interface to represent the session note.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISessionNote.CreationTime">
            <summary>
            Duration in the session when the note is created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISessionNote.Comment">
            <summary>
            Comment added when the note is created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.Title">
            <summary>
            The Title
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.Links">
            <summary>
            General list of links to other artifacts.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.ParameterNames">
            <summary>
            The list of parameters present in the data set
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.ParameterData">
            <summary>
            The parameter data for the data set
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.Area">
            <summary>
            Classification of functional area this data set belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.Description">
            <summary>
            Short description of what this parameter data set is designed to accomplish.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.Save">
            <summary>
            Stores the updated item to the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.Refresh">
            Gets the current version of the workitem from the server
            the resets the state to that stored in that work item,
            any cached data is thrown away...
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet.Flush">
            <summary>
            Should be called to explicitly flush
            data through to the underlying work item
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSetHelper.Find(System.Int32)">
            <summary>
            Retrieves a single shared parameter data set from the server.
            </summary>
            <param name="testCaseId">ID of the shared parameter data set.</param>
            <returns>Parameter data set</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ISharedStep">
            <summary>
            Represents a reusable collection of test actions.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStep.CreateActionRecording(System.String)">
            <summary>
            Creates an action recording attachment from a file on disk.
            </summary>
            <remarks>When the object owning this AfnStrip is saved,
            the specified file will be uploaded to the TCM server.
            It must continue to be readable until the upload is complete.
            </remarks>
            <param name="localFileName">
            File containing the contents of the attachment.
            </param>
            <returns>a new attachment</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedStep.ActionRecording">
            <summary>
            Default null. Gets or Sets the recording associated with a
            Shared Step, setting with null deletes the recording.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedStep.TestCaseReferences">
            <summary>
            Returns the list of Test Cases that contain a reference to this
            Shared Step.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepReference">
            <summary>
            Used to call a shared step set from a test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepReference.SharedStepId">
            <summary>
            The id which this reference holds
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepReference.FindSharedStep">
            <summary>
            Retrieves the shared step definition from the server.
            </summary>
            <returns>Shared step definition.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepResult">
            <summary>
            Represents the result of executing a shared step.
            The action ID will correspond to the action ID of the
            SharedStepReference that called the shared ste.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepResult.SharedStepId">
            <summary>
            ID of the shared step used to produce these results.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepResult.SharedStepRevision">
            <summary>
            Revision of the shared step used to produce these results.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepResult.Actions">
            <summary>
            Detailed results for each test step/component.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepResult.GetSharedStep">
            <summary>
            Retrieves the shared step definition from the server.
            </summary>
            <returns>Shared step  definition.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite.Entries">
            <summary>
            All the entries in this suite, an ordered collection, manipulate this
            to add or remove testsuites or testcases
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite.EntriesException">
            <summary>
            Get exception for Entries
            </summary>
            <remarks>
            Since fetching the Entries can fail, and Exceptions are no
            good for WPF, when we cannot correctly fetch the Entries
            this property will hold the Exception that was thrown,
            If theis property is null, either the Entries have never been accessed,
            or the Entries have and are valid
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite.SubSuites">
            <summary>
            Suite heirarchy
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestAction">
            <summary>
            Represents a single action and expected result
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAction.Id">
            <summary>
            An identifier for the action.  This id is unique within the test case
            or component that contains this action.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAction.Parent">
            <summary>
            The group that contains this action or null if it is not in a group.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestAction.Owner">
            <summary>
            An action has an owner, which may be a ITestCase or ISharedStep 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestAction.CopyToNewOwner(Microsoft.TeamFoundation.TestManagement.Client.ITestBase)">
            <summary>
            Performs a deep copy of this action to a new ITestCase or ISharedStep
            </summary>
            <param name="newOwner"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestAction.MoveToNewOwner(Microsoft.TeamFoundation.TestManagement.Client.ITestBase)">
            <summary>
            Actions may also be moved to a new owner, the parentage of this
            action will be changed to null, and it will be removed from
            any group it was a member of 
            </summary>
            <param name="newOwner"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestActionGroup">
            <summary>
            Represents a group of actions, which, since a group is itself an action,
            may contain other nested groups. The nesting is arbitrary, but of finite
            depth (so a group may not directly or indirectly contain itself)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestActionGroup.Name">
            <summary>
            Name of the action group.  Used only in the UI, does not need to be
            unique.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestActionResult">
            <summary>
            Represents the result for a single action
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestActionResult.ActionId">
            <summary>
            ID of the action that this result is associated with.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestBase">
            <summary>
            Represents the TCM metadata for a given test case or shared step set.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Title">
            <summary>
            The Title
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Links">
            <summary>
            General list of links to other artifacts.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.CustomFields">
            <summary>
            Allows access to user-defined fields.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.WorkItem">
            <summary>
            Access the underlying work item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Owner">
            <summary>
            The person responsible for the automation of this test.  If the test is manual, the
            person responsible for maintaining the test steps.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.OwnerName">
            <summary>
            The person responsible for the automation of this test.  If the test is manual, the
            person responsible for maintaining the test steps.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.OwnerTeamFoundationId">
            <summary>
            The person responsible for the automation of this test.  If the test is manual, the
            person responsible for maintaining the test steps.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Priority">
            <summary>
            Priority of executing the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Area">
            <summary>
            Classification of functional area this test belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Description">
            <summary>
            Short description of what this test case is designed to accomplish.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.State">
            <summary>
            The current state of the test case.  Set of possible values is user defined.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Reason">
            <summary>
            The reason the test case was transitioned into the current state.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Exists">
            <summary>
            Returns false if this work item has been destroyed or the caller does not have access to it.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Flush">
            <summary>
            Should be called to explicitly flush
            data through to the underlying work item
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Save">
            <summary>
            Stores the updated item to the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Refresh">
            <summary>
            Gets the current version of the workitem from the server
            the resets the state to that stored in that work item,
            any cached data is thrown away...
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.CreateTestStep">
            <summary>
            Creates a new test step.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.CreateTestActionGroup">
            <summary>
            Creates a new test Action Group, to which steps
            or other groups can be added.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.CreateSharedStepReference">
            <summary>
            Creates a new shared step Reference, which
            allows us to another set of actions
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.Actions">
            <summary>
            The actions required to complete the test case.  Could be a mixture of
            groups, manual steps and shared step sets.
            </summary>
            <remarks>
            The returned collection is modifiable, and on save those changes will
            be sent to the server
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.FindAction(System.Int32)">
            <summary>
            Get an action with a particular id
            </summary>
            <param name="id">the id of the action to find</param>
            <returns>The action, or null if the id is not found</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.OverrideParameter(System.String)">
            <summary>
            Makes an existing parameter in the Test Case an overridden parameter
            </summary>
            <param name="parameterName">Name of the parameter to override</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.RenameParameter(System.String,System.String)">
            <summary>
            Renames a parameter, this updates all actions that reference
            the parameter
            </summary>
            <remarks>
            If there is no parameter wiith the given "fromName" this method
            does nothing
            </remarks>
            <param name="fromName">Name of the parameter to rename</param>
            <param name="toName">Name to rename the parameter to</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.ReplaceParameter(System.String,System.String)">
            <summary>
            Finds all usages of a parameters in Actions and replaces them with
            a literal string
            </summary>
            <remarks>
            <para>
            If there is no parameter wiith the given "fromName" this method
            does nothing
            </para>
            <para>
            This can also be used as delete, by passing an empty string as
            the replacement text.
            </para>
            </remarks>
            <param name="parameterName">The parameter to replace</param>
            <param name="text">The text to substitute in place of the parameter</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.DateModified">
            <summary>
            Date test case was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.DateCreated">
            <summary>
            Date test case was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.TestParameters">
            <summary>
            This returns a list of parameters that are used in the test case. For instance if a test step title
            is "Enter @Username", Username can be parameterized and connected to a data source. The details
            corresponding to this is stored in a parameter type. Similarly, the test case could have multiple
            parameters all of which are stored in a list of parameters. These parameters are referred in the
            test step in place.
            </summary>
        </member>
        <member name="E:Microsoft.TeamFoundation.TestManagement.Client.ITestBase.TestParameterDeletingEvent">
            <summary>
            Event fired when Test Parameters are about to be deleted.  Setting the Cancel property on the event will
            abort the delete.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestCase">
            <summary>
            A set of data representing a test case stored in the test management server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.IsAutomated">
            <summary>
            True if this is an automated test.  False if it is manual.
            </summary>
            <remarks>Derived by examining the TestImplmentation and the IsManual properties of
            the shared step sets.</remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.Implementation">
            <summary>
            Link to the automated test that implements this test.  Null for manual tests
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.Data">
            <summary>
            Test data tables that are stored in the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.DefaultTable">
            <summary>
            Default table used for internal binding
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.DataReadOnly">
            <summary>
            Test data tables that are stored in the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.DefaultTableReadOnly">
            <summary>
            Default table used for internal binding
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.CreateAttachment(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates an attachment for a Test Case from a byte array.
            </summary>
            <remarks>When the object owning this attachment is saved, the contents will be
            uploaded to the TCM server.  The array should not be modified before then.</remarks>
            <param name="contents">Byte array containing attachment contents.</param>
            <param name="offset">Index of the first byte to be used as attachment content, usually 0.</param>
            <param name="length">Number of bytes in the attachment.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.TestSuiteEntry">
            <summary>
            Create an entry suitable for use in a static test suite
            from a test case
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.GetReferencedSharedStep(System.Int32)">
            <summary>
            Return the shared step referenced by the testcase. Returns null if the shared step 
            corresponding to sharedStepId is not referenced by the test case.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCase.GetReferencedSharedStep(System.Int32,System.Int32)">
            <summary>
            Returns a particular revision of the shared step referenced by the testcase. Returns null if the shared step 
            corresponding to sharedStepId is not referenced by the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase2.ReferencesSharedParameterDataSet">
            <summary>
            True if the test case references one or more shared parameter data sets. False otherwise
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase2.DefaultSharedParameterDataSetWorkItemId">
            <summary>
            Returns the workitem id of the default shared parameter data set referenced by the test case. Return -1 if the test case does not reference a shared parameter data set.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCase3.DefaultSharedParameterDataSet">
            <summary>
            Returns the Default shared parameter data set referenced by testcase. Returns null if testcase does not reference a shared parameter data set
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseProperties">
            <summary>
            Represents group of properties which can be present in Automated testcase
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseProperties.Owner">
            <summary>
            Owner of the TestCase
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseProperties.Priority">
            <summary>
            Priority of the TestCase
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseProperties.FullyQualifiedTestName">
            <summary>
            Fully Qualified Name of the Test so that it can be uniquely distinguished
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseQuery">
            <summary>
            Represents a stored test case query.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseQuery.Name">
            <summary>
            Brief description of the query.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseQuery.Owner">
            <summary>
            User who created the query.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseQuery.QueryText">
            <summary>
            The query to execute in WIQL syntax.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseQuery.Execute">
            <summary>
            Executes the query on the server.
            </summary>
            <returns>Test cases found by the query.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult">
            <summary>
            Represents the status of a test case executed against a test run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestRunId">
            <summary>
            ID of the test run containing the result.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestResultId">
            <summary>
            ID of this test result (unique within the run).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestCaseId">
            <summary>
            ID of the test case being tested.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestConfigurationId">
            <summary>
            ID of the configuration this test was executed against.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestConfigurationName">
            <summary>
            Name of the configuration this test was executed against.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestPointId">
            <summary>
            ID of the test point this was executed against, or 0
            if it was executed outside of a test plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.State">
            <summary>
            Status of the test.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.ResolutionStateId">
            <summary>
            Used to track the investigation of finished tests.
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.ArtifactUri">
            <summary>
            The TFS artifact URI used to link this result with other artifacts.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.LastUpdated">
            <summary>
            Date the result was last updated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.LastUpdatedBy">
            <summary>
            Last person to update result
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.LastUpdatedByName">
            <summary>
            Last person to update result
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Owner">
            <summary>
            User responsible for running or investigating the test.
            For runs created from points, this is initialized to the test point owner.
            Otherwise, this is initialized to the test case owner.
            May be changed during the run and will not be kept up to date if the
            test case or point owners change afterward.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.OwnerTeamFoundationId">
            <summary>
            User responsible for running or investigating the test.
            For runs created from points, this is initialized to the test point owner.
            Otherwise, this is initialized to the test case owner.
            May be changed during the run and will not be kept up to date if the
            test case or point owners change afterward.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.OwnerName">
            <summary>
            User responsible for running or investigating the test.
            For runs created from points, this is initialized to the test point owner.
            Otherwise, this is initialized to the test case owner.
            May be changed during the run and will not be kept up to date if the
            test case or point owners change afterward.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.RunBy">
            <summary>
            User who executed the test.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.RunByTeamFoundationId">
            <summary>
            User who executed the test.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.RunByName">
            <summary>
            User who executed the test.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Priority">
            <summary>
            Priority of executing or analyzing the test.
            Initialized to the test case priority, but may be changed during the run.
            NOTE: Differs from IDC's definition which is priority of the test case
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestCaseTitle">
            <summary>
            Title of the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestCaseArea">
            <summary>
            Area path of the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.ComputerName">
            <summary>
            Computer this test was executed on.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.TestCaseRevision">
            <summary>
            Revision of the test case that we should use.
            This allows you to fix a test run against a specific point-in-time
            of the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.ActionRecording">
            <summary>
            Action recording of the test execution.
            Used to upload the recording strip to server only. It is set to null when the 
            result is refreshed, reset or queried back from the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.ResetCount">
            <summary>
            Number of times the result has been reset.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.FailureType">
            <summary>
            If Outcome is failed, denotes whether this test has failed before
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.FailureTypeId">
            <summary>
            If Outcome is failed, denotes whether this test has failed before
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Implementation">
            <summary>
            Link to the automated test of this result.  Null for manual tests
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Revision">
            <summary>
            Revision number of TestCaseResult for concurrency control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.IsFinished">
            <summary>
            Value true if the test has been run.
            </summary>
            <remarks>True if TestState is any of the terminal states (Passed, Failed, Completed, Error, etc).</remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.BuildNumber">
            <summary>
            Name of the build. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.CreateAttachment(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates an attachment for a Test Result from a byte array.
            </summary>
            <remarks>When the object owning this attachment is saved, the contents will be
            uploaded to the TCM server.  The array should not be modified before then.</remarks>
            <param name="contents">Byte array containing attachment contents.</param>
            <param name="offset">Index of the first byte to be used as attachment content, usually 0.</param>
            <param name="length">Number of bytes in the attachment.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.CreateIteration(System.Int32)">
            <summary>
            Creates a new test iteration result.  This must be added to the Iterations collection before
            saving.
            </summary>
            <param name="iterationId"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Iterations">
            <summary>
            Detailed results for each iteration of the test.  Data bound tests will have an iteration
            per data row.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.GetTestCase">
            <summary>
            Retrieves the test case data as of the time the test case result is created.
            </summary>
            <remarks>
            If the test case at the specific version is deleted, the method will return 
            the latest version.
            If the result is published from MSTEST/TCM.EXE, it does not have a test case
            so the method will return null.
            </remarks>
            <returns>The test case of this result.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.GetTestRun">
            <summary>
            Retrieves the test run information from the server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.AssociateWorkItem(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Associates the given work item with this test result. 
            </summary>
            <remarks>
            The work item must be presaved in order to have a valid uri to be stored with
            the test result. You must also call workItem.Save() after calling this method 
            for the test result's link to be persisted to the server.
            </remarks>
            <param name="workItem">Work item to associate</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.DisassociateWorkItem(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Removes the association of the given work item from this test result.
            </summary>
            <remarks>
            The work item must be already saved as a consequence of being associated with
            the test result. You must also call workItem.Save() after calling this method 
            for the linking change to be persisted to the server.
            </remarks>
            <param name="workItem">Work item to disassociate</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.QueryAssociatedWorkItems">
            <summary>
            Retrieves bugs associated with this test result from the server.
            </summary>
            <remarks>
            To retrieve the work items call WorkItemStore.Query(ids, wiql)
            
            This method retrieves work items by calling the server.  The effects
            of AssociateWorkItem() and DisassociateWorkItem() will not be observed
            by this method until you call workItem.Save().
            </remarks>
            <returns>Work item IDs of associated work items.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.QueryAssociatedWorkItemArtifacts">
            <summary>
            Retrieve the artifacts for bugs associated with this test result from the server.
            </summary>
            <remarks>
            This method retrieves work items by calling the server.  The effects
            of AssociateWorkItem() and DisassociateWorkItem() will not be observed
            by this method until you call workItem.Save().
            </remarks>
            <returns>Artifacts of associated work items.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Refresh">
            <summary>
            Retrieves updated information from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Reset">
            <summary>
            Clears any test result information and causes the test to be re-run.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Save">
            <summary>
            Sends updated test result information to the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult.Save(System.Boolean)">
            <summary>
            Sends updated test result information to the server.
            </summary>
            <param name="uploadInBackground">True to upload attachments in backgroud, false otherwise</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.Name">
            <summary>
            Name of TestConfiguration
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.Description">
            <summary>
            Description of TestConfiguration
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.State">
            <summary>
            Represents the current state of the configuration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.AreaPath">
            <summary>
            Area path of test configuration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.IsDefault">
            <summary>
            Tells if the configuration is a default configuration for the project
            </summary>
            <remarks>
            When you create a new plan, the new plan gets assigned all of the default
            configurations for the project
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.Values">
            <summary>
            Contains the name-value pairs that describe this configuration.
            </summary>
            <remarks>
            Must be unique to this configuration.  No other configurations
            can exist with the same set of name/value pairs.
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.LastUpdatedBy">
            <summary>
            Last person to update configuration 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.LastUpdatedByName">
            <summary>
            Last person to update configuration 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.LastUpdated">
            <summary>
            Date the configuration was last updated
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.Revision">
            <summary>
            Revision number of TestConfiguration for concurrency control
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.Delete">
            <summary>
            Removes the given test configuration if it is not referenced 
            by any test results, test suites or test points.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.Refresh">
            <summary>
            Updates the configuration with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.Save">
            <summary>
            Writes the new or updated test configuration to the server.
            If the configuration is referenced by any test result, update
            will fail. To force an update, use Save(updateInUse) method.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration.Save(System.Boolean)">
            <summary>
            Writes the new or updated test configuration to the server.
            If "updateInUse" is true, writes the configuration even if 
            it is referenced by any test results.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestController">
            <summary>
            Represents the test controller in Test Management client OM.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestController.DisplayName">
            <summary>
            User-visible name of the controller.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestController.Name">
            <summary>
            Name is unique for test controller under a team project 
            collection. Thus if name is modified, the controller
            should not be expected to stay the same.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestController.Description">
            <summary>
            Description of the test controller.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestController.State">
            <summary>
            State of the test controller
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestController.GroupId">
            <summary>
            The identifier of the test controllers group that contains 
            the test controller.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestController.Properties">
            <summary>
            Property bag of the test controller. Prefix "TcmInternal_" for
            property keys should be preserved for internal properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestController.TestEnvironments">
            <summary>
            Provides helper method for test environments that belong 
            to the test controller.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestController.Register">
            <summary>
            Registers the test controller to the team project collection. If 
            the test controller was already registered, 
            TestManagementInvalidOperationException will be thrown. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestController.Unregister">
            <summary>
            Unregisters the test controller and its test environments from the 
            team project collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestController.Update">
            <summary>
            Perists the updated properties of the test controller. If the test
            controller is not registered, TestManagementInvalidaOperationException
            will be thrown. Update is always performed even the properties are not 
            changed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper">
            <summary>
            Helper interface that provides create,query, bulk register, 
            bulk unregister and bulk update methods for test controllers.
            
            This helper interface is a property of the ITestManager, the 
            Test Management client OM representation of a team project collection. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper.Create">
            <summary>
            Creates a test controller.
            </summary>
            <returns>The test controller.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper.Query">
            <summary>
            Queries all the test controllers of the team project collection.
            </summary>
            <returns>The collection of the test controllers.Empty collection
            if no controllers are returned.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper.Query(System.String)">
            <summary>
            Queries all the test controllers that belong to the same group under
            the team project collection.
            </summary>
            <param name="groupId">Id of the test controllers group</param>
            <returns>The collection of the test controllers. Empty collection
            if no controllers are returned.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper.Find(System.String)">
            <summary>
            Retrieves the test controller by name criteria.
            </summary>
            <param name="testControllerName">Name of the test controller.</param>
            <returns>The test controller, or null if not found.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper.Register(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestController})">
            <summary>
            Registers the test controllers to the team project collection.  
            If any of the test controllers was already registered, 
            TestManagementInvalidOperationException will be thrown. 
            </summary>
            <param name="testControllers">The test controllers to be registered.</param> 
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper.Unregister(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestController})">
            <summary>
            Unregisters the test controllers and their test environments from the 
            team project collection.
            </summary>
            <param name="testControllers">The test controllers to be unregistered. 
            They must belong to the team project collection that owns this
            test controller helper.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper.Update(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestController})">
            <summary>
            Perists the updated properties of the test controllers. If any of the 
            test controllers is not registered, TestManagementInvalidaOperationException
            will be thrown. Update is always performed even the properties are not 
            changed.
            </summary>
            <param name="testControllers">The test controllers to be updated.  
            They must belong to the team project collection that owns this
            test controller helper.</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment">
            <summary>
            Represents the test environment in Test Management client OM.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.Id">
            <summary>
            The identifier of the test environment registered in Team 
            Foundation Server. A test environment with Guid.Empty as
            Id has not been registered, and calling Register() method
            gives it a new Guid for Id.
            </summary>
            <remarks>TODO : The set will move off when TestEnvironment Query looks into
            LabEnvironments to construct rather than TCM catalog</remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.Name">
            <summary>
            Name is unique for test environments under a team project 
            or a test controller. Thus if name is modified, the environment
            should not be expected to stay the same.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.DisplayName">
            <summary>
            Test environment display name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.Description">
            <summary>
            Description of the test environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.TeamProject">
            <summary>
            The team project that owns the test environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.ControllerName">
            <summary>
            The name of the test controller that owns the test environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.ControllerDisplayName">
            <summary>
            The display name of the test controller that owns the test environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.TestController">
            <summary>
            The test controller that owns the test environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.EnvironmentType">
            <summary>
            Test environment type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.Owner">
            <summary>
            Test environment owner
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.DateCreated">
            <summary>
            Date/time when the test environment was created
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.LabEnvironmentUri">
            <summary>
            URI of the corresponding lab environment, or null if this is not a virtual environment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.LabServerUri">
            <summary>
            Uri of the lab server on which the correspondinding lab environment belongs, or null if this is not a lab environment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.ControllerEnvironmentId">
            <summary>
            Id of the test environment object on the controller
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.MachineRoles">
            <summary>
            The machine roles in this test environment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.Properties">
            <summary>
            Property bag of the test controller. Prefix "TcmInternal_" for
            property keys should be preserved for internal properties.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.Register">
            <summary>
            Registers the test environment to the team project collection. If 
            the test environment was already registered, or missing 
            either the team project or test controller properties,
            TestManagementInvalidOperationException will be thrown. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.Unregister">
            <summary>
            Unregisters the test environment and its test environments from the 
            team project collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.Update">
            <summary>
            Perists the updated properties of the test environment. If the test
            environment is not registered, TestManagementInvalidaOperationException
            will be thrown. Update is always performed even the properties are not 
            changed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper">
            <summary>
            Helper interface that provides create, query, bulk register, 
            bulk unregister and bulk update methods for test environments.
            
            This helper interface is a property of the ITestManagementProject
            and ITestController interfaces. Except for the factory method, 
            all other methods act only on the test environments that belong 
            to the helper's owner (i.e. controller or team project).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper.Parent">
            <summary>
            The type of the owner can only be ITestManagementProject
            or ITestController.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper.Create">
            <summary>
            Creates an empty test environment.
            </summary>
            <returns>The test environment.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper.Create(Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject,Microsoft.TeamFoundation.TestManagement.Client.ITestController)">
            <summary>
            Creates a test environment. User must provide both team project
            and test controller for the test environment to be registered.
            </summary>
            <param name="teamProject">Team project of the test environment.</param>
            <param name="testController">Test controller of the test environment.</param>
            <returns>The test environment.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper.Query">
            <summary>
            Queries all the test environments that belong to the helper's owner.
            </summary>
            <returns>The collection of the test environments. Empty collection
            if no environments are returned.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper.Find(System.Guid)">
            <summary>
            Find a specific test environment.
            </summary>
            <param name="environmentId">The test environment Id.</param>
            <returns>The test environment object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper.Register(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment})">
            <summary>
            Registers the test environments to the team project collection.  
            If any of the test environments was already registered, or missing 
            either the team project or test controller properties,
            TestManagementInvalidOperationException will be thrown. 
            </summary>
            <param name="testEnvironments">The test environments to be registered. 
            If the owner if this helper is a team project/test controller, all 
            test environments must be under that team project/test controller.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper.Unregister(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment})">
            <summary>
            Unregisters the test environments and their test environments from the 
            team project collection.
            </summary>
            <param name="testEnvironments">The test environments to be unregistered.
            If the owner if this helper is a team project/test controller, all 
            test environments must be under that team project/test controller.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper.Update(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment})">
            <summary>
            Perists the updated properties of the test environments. If any of the 
            test environments is not registered, TestManagementInvalidaOperationException
            will be thrown. Update is always performed even the properties are not 
            changed.
            </summary>
            <param name="testEnvironments">The test environments to be updated.
            If the owner if this helper is a team project/test controller, all 
            test environments must be under that team project/test controller.</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestExternalLink">
            <summary>
            Represents a link to an external object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestExternalLink.Uri">
            <summary>
            Uri of the object linked to.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestExternalLink.Description">
            <summary>
            Free-form description of the link.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType">
            <summary>
            Represents the failure type of a test case result
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType.Name">
            <summary>
            Name of Test Failure Type.  
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType.Project">
            <summary>
             The team project of this failure type
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType.Delete">
            <summary>
            Removes the given test failure type from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType.Refresh">
            <summary>
            Updates the test failure type with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType.Save">
            <summary>
            Writes the new or updated test failure type to the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestImplementation">
            <summary>
            Represents a link to an automated test's implementation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestImplementation.DisplayText">
            <summary>
            A user-friendly string representation of the test link.
            Displayed in the GUI.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITmiTestImplementation">
            <summary>
            Represents a link to an automated test in Orcas unit test infrastructure.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITmiTestImplementation.Storage">
            <summary>
            Name of the DLL or file containing the test.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITmiTestImplementation.TestId">
            <summary>
            Guid of the test.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITmiTestImplementation.TestName">
            <summary>
            The name of the test method
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITmiTestImplementation.TestType">
            <summary>
            The type of test
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITmiTestImplementation.TestTypeId">
            <summary>
            Guid of the test.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult">
            <summary>
            Represents the result of executing a test case against
            a row of data.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult.Actions">
            <summary>
            Detailed results for each test step/component.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult.CreateStepResult(System.Int32)">
            <summary>
            Creates a new test step result.  This result must be added to Actions
            before saving.
            </summary>
            <param name="actionId">ActionId of the step executed.</param>
            <returns>New object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult.CreateSharedStepResult(System.Int32,System.Int32)">
            <summary>
            Creates a new shared step result.  This result must be added to Actions
            before saving.
            </summary>
            <param name="actionId">ActionId of the shared step reference calling the shared step.</param>
            <param name="sharedStepId">ID of the shared step being executed.</param>
            <returns>New object.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult.IterationId">
            <summary>
            Numerical sequence identifier of the iteration that produced these results.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult.FindActionResult(Microsoft.TeamFoundation.TestManagement.Client.ITestAction)">
            <summary>
            Returns the result for the given test action.
            </summary>
            <param name="action">Action to look up.</param>
            <returns>ITestActionResult-derived object or null if not found.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult.Parameters">
            <summary>
            Parameters extracted from test results with values.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService">
            <summary>
            The main object for the test management client library.
            </summary>
            <remarks>
            Applications can retrieve an instance of this object by using TeamFoundationServer.GetInstance
            as demonstrated below:
            <code>
            tfs = new TeamFoundationServer("http://myserver:8080/tfs");
            testManagementService = tfs.GetService&lt;ITestManagementService&gt;());
            </code>
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.AuthorizedIdentity">
            <summary>
            The authorized user of the team foundation server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.DataCollectors">
            <summary>
            Contains create, query, register, unregister and update
            methods for data collectors of the team project collection.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.TestControllers">
            <summary>
            Contains create, query, register, unregister and update
            methods for test controllers of the team project collection.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.TfsIdentityStore">
            <summary>
            The Team Foundation Identity cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.GetTeamProject(System.String)">
            <summary>
            Retrieves the ITestManagementTeamProject object for the named
            team project.
            </summary>
            <param name="projectName">TFS team project name to look up.</param>
            <returns>ITestManagementTeamProject object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.GetTeamProject(Microsoft.TeamFoundation.WorkItemTracking.Client.Project)">
            <summary>
            Retrieves the ITestManagementTeamProject object given a Wit project. 
            </summary>
            <param name="project"></param>
            <returns>ITestManagementTeamProject object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.QueryTestRuns(System.String)">
            <summary>
            Queries the server to find all test runs matching the given query.
            </summary>
            <param name="queryText">WIQL query to execute.</param>
            <returns>List of test runs.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.FindTestRunByTmiRunId(System.Guid)">
            <summary>
            Retrieves the test run from the server that contains the given tmi run.
            </summary>
            <param name="tmiRunId">The tmi run Id.</param>
            <returns>The test run that contains the tmi run.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.FindTestResultByLink(System.Uri,Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment@)">
            <summary>
            Finds a test result, and optionally a test result attachment, from an artifactUri
            The Uri must be for a TestResult or a TestResultAttachment
            </summary>
            <param name="testAttachment">set to null if not TestAttachmentUri, or if attachment not found</param>
            <returns>TestCaseResult, or null if result no found</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService.IsSupported">
            <summary>
            Returns true if the current server supports Test Management Services.
            </summary>
            <returns>True if Test Management is supported.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService2.GetTeamProject(System.String)">
            <summary>
            Retrieves the ITestManagementTeamProject2 object for the named
            team project.
            </summary>
            <param name="projectName">TFS team project name to look up.</param>
            <returns>ITestManagementTeamProject object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService2.GetTeamProject(Microsoft.TeamFoundation.WorkItemTracking.Client.Project)">
            <summary>
            Retrieves the ITestManagementTeamProject2 object given a Wit project. 
            </summary>
            <param name="project"></param>
            <returns>ITestManagementTeamProject object</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject">
            <summary>
            Provides test case management functionality for a team project.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TeamProjectName">
            <summary>
            Gets the name of the team project.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestManagementService">
            <summary>
            Gets the Test Management Service corresponding to this instance.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.DefaultPageSize">
            <summary>
            Get or Set the default page size used when streaming object collections,
            no need to set this unless you are tuning
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.IsValid">
            <summary>
            Verifies if the team project still exists on the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.ActionRecordings">
            <summary>
            Manages action recordings for test cases
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.Queries">
            <summary>
            Returns a list of stored queries for this team project
            There is no means to add or remove these queries except
            through the user interface
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.QueryAttachments(System.String)">
            <summary>
            Returns a list of attachments matching the specified query.
            </summary>
            <remarks>
            This list is read-only.  Removing items from it will not cause them
            to be removed from the server
            </remarks>
            <param name="queryText">WIQL query to find attachments</param>
            <returns>List of matching attachments</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.QueryAttachmentsByLink(System.Uri,Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment@,System.Boolean)">
            <summary>
            Returns list of sibling attachments and the attachment itself for an attachment artifact uri.  
            </summary>
            <param name="artifactUri"></param>
            <param name="attachment">out param returnning actual attachment object corresponding to the id</param>
            <param name="getSiblingAttachments">Flag asking whether siblings should be returned or not</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.DeleteAttachments(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment})">
            <summary>
            Deletes the given attachments.
            </summary>
            <param name="attachments">List of attachments to delete</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.DownloadAttachments(System.Collections.Generic.IList{Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment},System.Collections.Generic.IList{System.String})">
            <summary>
            Downloads a set of attachments to the specified paths.
            </summary>
            <remarks>
            If an error occurs the method will be stopped and the local files
            will be left in an undefined state.  Do not assume that any files
            succeeded or that any local files created have the correct contents
            if this method throws an exception.
            </remarks>
            <param name="attachments">List of attachments to retrieve</param>
            <param name="localFiles">Filenames to place attachments in.  This list must be the same length as attachments.</param>
            <returns>List of matching attachments</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestCases">
            <summary>
            Contains create, find, query methods for test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.SharedSteps">
            <summary>
            Contains create, find, query methods for shared steps
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestPlans">
            <summary>
            Contains create, find, query methods for test plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestSuites">
            <summary>
            Contains create, find, query methods for test suite.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestRuns">
            <summary>
            Contains create, find, query methods for test run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestConfigurations">
            <summary>
            Contains create, find, query methods for test configuration.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestResolutionStates">
            <summary>
            Contains create, find, query methods for test resolution state.
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestFailureTypes">
            <summary>
            Contains create, find, query methods for test failure type.
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestVariables">
            <summary>
            Contains create, find, query methods for test variable.
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestSettings">
            <summary>
            Contains create, find, query methods for test settings.
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestResults">
            <summary>
            Contains create, find, query methods for test result.
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestEnvironments">
            <summary>
            Contains create, query, register, unregister and update
            methods for test environments of the team project.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.BugFieldMappings">
            <summary>
            Contains methods import, export, and get the
            Bug Field Mapping for this team project.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.Sessions">
            <summary>
            Contains methods to create, query, and delete sessions.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestPoints">
            <summary>
            Contains methods to block and unblock test points.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.CreateTestQuery(System.String)">
            <summary>
            Creates a new test case query based on a query string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.CreateTestQuery(System.Int32[])">
            <summary>
            Creates a new test case query based on a non-empty list of ids
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.CreateTestQuery(System.Int32[],System.String)">
            <summary>
            Creates a new test case query based on a non-empty list of ids
            and a hint on which fields of the test cases to be retrieved.
            
            The query hint is a WIQL query with no clauses. It is used to 
            specified the selected fields. For example:
            
            SELECT [System.Title], [System.AreaPath] FROM WorkItems
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.CreateTestQuery(System.Int32[],System.Int32[],System.String)">
            <summary>
            Creates a new test case query based on a non-empty list of ids,
            a list of revisions and a hint on which fields of the test cases to be retrieved.
            
            The query hint is a WIQL query with no clauses. It is used to 
            specified the selected fields. For example:
            
            SELECT [System.Title], [System.AreaPath] FROM WorkItems
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.CreateTmiTestImplementation(System.String,System.String,System.Guid,System.String,System.Guid)">
            <summary>
            Creates a ITestImplementation object to bind a test case to an automated test
            based on the TMI (unit test) framework.
            </summary>
            <param name="storage">Path to test DLL or source file.</param>
            <param name="tmiTestId">Guid of the test.</param>
            <param name="testTypeId">Guid of the test type.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.CreateTmiTestImplementation(System.String,System.String,System.String,System.Guid)">
            <summary>
            Creates a ITestImplementation object to bind a test case to an automated test
            based on the TMI (unit test) framework.
            </summary>
            <param name="storage">Path to test DLL or source file.</param>
            <param name="tmiTestId">Guid of the test.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.CreateFromWorkItem(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Create  a wrapper of the appropriate type for the given work item type.
            Will throw if the workitem type is not known.
            </summary>
            <param name="workItem"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.WorkItemTypesFor(System.String)">
            <summary>
            Provide access to the work item types that should be queried for, for
            any WIT category <see cref="T:Microsoft.TeamFoundation.TestManagement.Common.WitCategoryRefName"></see>
            </summary>
            <param name="categoryRefName">Wit category ref name (case insensitive)</param>
            <returns>An array of wit workitem type names, element 0 is the default used on creation</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.WitProject">
            <summary>
            Underlying workitem project
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.ServerVersion">
            <summary>
            The version of TFS server that the client is connected to
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TfsIdentityStore">
            <summary>
            The Team Foundation Identity cache
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.CoverageAnalysisManager">
            <summary>
            Contains query methods for coverage information pertaining to a build and test run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.FetchIdentitiesInline">
            <summary>
            Specifies where TeamFoundationIdentity objects needs to be fetched along with test artifacts.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.AttachmentDownloadUri">
            <summary>
            Returns the URI to the attachment download web service.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject2.SharedParameterDataSets">
            <summary>
            Contains methods to query for shared parameter data sets
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject2.HasSupportForSharedParameterDataSets">
            <summary>
            Returns whether the project supports Shared parameter data sets
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject2.TestManagementServiceVersion">
            <summary>
            Returns the version of the test management service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject3.CreateTestCaseProperties(System.String,System.String,System.String,System.String,System.Guid)">
            <summary>
            Creates a TestCaseProperties Object to bind the testcase to automated tests.
            </summary>
            <param name="testMethodName">Test Method Name</param>
            <param name="fullyQualifiedName"> Fully Qualified Name of Test</param>
            <param name="testType"> Type of test </param>
            <param name="storage"> Path of the dll or sourcefile </param>
            <param name="testId">Guid of the test.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry">
            <summary>
            Represents a log entry for an object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry.TestMessageLogId">
            <summary>
            LogId which uniquely identifies a log for a particular object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry.EntryId">
            <summary>
            Sequence for this entry within a LogId
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry.User">
            <summary>
            User who created the log entry
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry.UserName">
            <summary>
            User who created the log entry
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry.DateCreated">
            <summary>
            Date the entry was created
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry.LogLevel">
            <summary>
            Log level: Info, Warning or Error.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry.Message">
            <summary>
            Log Message
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogOwner.TestMessageLogEntries">
            <summary>
            List of log entries.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogOwner.CreateLogEntry(System.String,Microsoft.TeamFoundation.TestManagement.Client.TestMessageLogEntryLevel)">
            <summary>
            Creates a TestMessageLogEntry object and adds to collection.
            To save the log to server, call SaveLogEntries().
            </summary>
            <param name="message">Message for log entry</param>        
            <param name="level">Level of log entry</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogOwner.RefreshLogEntries">
            <summary>
            Syncs the collection from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogOwner.SaveLogEntries">
            <summary>
            Saves the changes made to the collection to the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestObject`1">
            <summary>
            Stored test object
            </summary>
            <typeparam name="T">Type of the object Id</typeparam>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestObject`1.Revision">
            <summary>
            As changes are saved, this increments, it is used to check that
            the object has not been updated from some other machine
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestObject`1.UserData">
            <summary>
            Allow the user to associate and retrieve an arbitrary object.  This
            value is not persisted. It is so that API objects can be dynamically
            extended
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.Create">
            <summary>
            Creates a new test case object.  The object will not be created on the server until testCase.Save() is called.
            </summary>
            <returns>New test case object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.Create(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItemType)">
            <summary>
            Creates a new test case object.  The object will not be created on the server until testCase.Save() is called.
            </summary>
            <param name="workItemType">Type of test case work item to create.</param>
            <returns>New test case object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test case from the server.
            </summary>
            <param name="testCaseId">ID of the test case.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.Find(System.Int32,System.Int32)">
            <summary>
            Retrieves a single test case with a specific version number from the server.
            </summary>
            <remarks>
            If the test case at the specific version is deleted, the method will return 
            the latest version.
            </remarks>
            <param name="id">ID of the test case.</param>
            <param name="revision">Version number of the test case.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.Query(System.String)">
            <summary>
            Performs a query of test cases using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.Query(System.String,System.Collections.IDictionary)">
            <summary>
            Performs a query of test cases using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <param name="context">Values to subsitute for WIQL parameters</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.Count(System.String)">
            <summary>
            Performs a query of the total number of test cases using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns>Total number of testcases</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.Count(System.String,System.Collections.IDictionary)">
            <summary>
            Performs a query of the total number of test cases using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <param name="context">Values to subsitute for WIQL parameters</param>
            <returns>Total number of testcases</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.InPlans(System.String,System.Boolean)">
            <summary>
            Performs a query of all test cases that are in plans or not in plans using 
            user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <param name="isInPlans">Indicate whether test cases should be in plans or not</param>
            <returns>An array of returning test case ids</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.IsWorkItemCompatible(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Test if some work item is in the category of types which are Test Cases
            </summary>
            <param name="workItem"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper.DoRequiredFieldsExist">
            <summary>
            Tells if the required Test Case Fields are defined for the Test Case
            Work Item
            </summary>
            <returns>True if all the required fields are present</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.Create">
            <summary>
            Creates a new shared step set object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.Find(System.Int32)">
            <summary>
            Retrieves a single shared step from the server.
            </summary>
            <param name="sharedStepId">ID of the shared step.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.Find(System.Int32,System.Int32)">
            <summary>
            Retrieves a single shared step from the server.
            </summary>
            <param name="sharedStepId">ID of the shared step.</param>
            <param name="revision">Revision of the shared step.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.Query(System.String)">
            <summary>
            Performs a query of shared step sets using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.Query(System.String,System.Collections.IDictionary)">
            <summary>
            Performs a query of shared step sets using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <param name="context">Values to subsitute for WIQL parameters</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.Count(System.String)">
            <summary>
            Performs a query of the total number of shared step sets using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns>Total number of shared step sets</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.Count(System.String,System.Collections.IDictionary)">
            <summary>
            Performs a query of the total number of shared step sets using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <param name="context">Values to subsitute for WIQL parameters</param>
            <returns>Total number of shared step sets</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.IsWorkItemCompatible(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Test if some work item is in the category of types which are Shared Step Sets
            </summary>
            <param name="workItem"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper.DoRequiredFieldsExist">
            <summary>
            Tells if the required Shared Steps Fields are defined for the Shared Steps
            Work Item
            </summary>
            <returns>True if all the required fields are present</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper.Create">
            <summary>
            Creates a new test plan.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test plan from the server.
            </summary>
            <param name="testCaseId">ID of the test plan.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper.Query(System.String)">
            <summary>
            Performs a query of test plans using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns>All test plans with valid root suite.</returns>
            /// <remarks>This API is needed for compat reasons. Older clients do not behave properly when test plans with no root suites are returned.</remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper.Query(System.String,System.Collections.IDictionary)">
            <summary>
            Performs a query of test plans using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <param name="context">Values to subsitute for WIQL parameters</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper.BeginCloneOperation(System.Int32,Microsoft.TeamFoundation.TestManagement.Client.ITestPlan,System.Collections.Generic.List{System.Int32},System.String,Microsoft.TeamFoundation.TestManagement.Client.CloneOptions)">
            <summary>
            Clones a plan
            </summary>
            <param name="sourcePlanId">source plan id</param>
            <param name="destinationPlan">destination plan</param>
            <param name="sourceSuiteIds">list of source suite ids</param>
            <param name="projectName">project name</param>
            <param name="options">clone options</param>
            <returns>operation id</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper.FetchCloneInformation(System.Int32)">
            <summary>
            Fetches clone information for a given test plan
            </summary>
            <param name="testPlanId">test plan id</param>
            <returns>clone information details for the given test plan</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper.GetCloneOperationInformation(System.Int32)">
            <summary>
            Gets information about a Clone operation
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper.FetchPlanIdsWithCloneHistory">
            <summary>
            Fetches plan ids for all test plans which has clone history in a team project
            </summary>
            <returns>list of plan ids</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper2.Find2(System.Int32,System.Boolean)">
            <summary>
            Retrieves a single test plan from the server.
            </summary>
            <param name="testCaseId">ID of the test plan.</param>
            <param name="excludePlansWithNoRootSuite">If true filters out test plans that have root suite as null.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper2.Query2(System.String,System.Boolean)">
            <summary>
            Performs a query of test plans using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <param name="excludePlansWithNoRootSuite">If true filters out test plans that have root suite as null.</param>
            <returns>Test plans that match the criteria.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper2.CreateFromWorkItem(System.Int32)">
            <summary>
            Creates a new test plan from an existing work item of type belonging to test plan category. 
            </summary>
            <param name="workItemId">The work item id of the work item belonging to test plan category.</param>
            <returns>The test plan object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.CreateStatic">
            <summary>
            Creates a new static test suite.
            </summary>
            <returns>New suite.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.FetchTestSuitesForPlan(Microsoft.TeamFoundation.TestManagement.Client.ITestPlan,System.Int32)">
            <summary>
            Returns the root suite object for given plan with entire hierarchy.
            </summary>
            <returns>Root suite of the plan.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.CreateDynamic">
            <summary>
            Creates a new query-based test suite.
            </summary>
            <returns>New suite.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.CreateRequirement(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem)">
            <summary>
            Creates a new suite associated with a requirement.
            </summary>
            <param name="requirementWorkItem">Requirement to associate with.</param>
            <returns>New suite.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.CreateEntry(Microsoft.TeamFoundation.TestManagement.Client.ITestCase)">
            <summary>
            Create an entry, which is a wrapper around a test case or a test suite
            </summary>
            <param name="testCase"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.CreateEntry(Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase)">
            <summary>
            Create an entry, which is a wrapper around a test case or a test suite
            </summary>
            <param name="testCase"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test suite from the server.
            </summary>
            <param name="testSuiteId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.Query(System.String)">
            <summary>
            Performs a query of test suites using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.Query(System.String,System.Collections.IDictionary)">
            <summary>
            Performs a query of test suites using user-provided constraints.
            </summary>
            <remarks>
            This does not return a list, and there is no way to obtain a count
            of how many suites are returned without enumerating them 
            </remarks>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.ReferencingTestCase(System.Int32)">
            <summary>
            Returns the test suites that include the given test case.
            </summary>
            <param name="testCaseId">ID of test case to look for.</param>
            <returns>Test suites.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.BeginCloneOperation(Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase,Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite,Microsoft.TeamFoundation.TestManagement.Client.CloneOptions)">
            <summary>
            Performs a Clone operation of the source suite under the specified target suite
            </summary>
            <returns>clone operation id</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.BeginCloneOperation(System.Int32,System.Int32,Microsoft.TeamFoundation.TestManagement.Client.CloneOptions,System.String)">
            <summary>
            Performs a Clone operation of the source suite under the specified target suite
            </summary>
            <returns>clone oepration id</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper.GetCloneOperationInformation(System.Int32)">
            <summary>
            Gets information about a Clone operation
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.Create">
            <summary>
            Creates a new test run.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test run from the server.
            </summary>
            <param name="testRunId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.Query(System.String)">
            <summary>
            Queries the server to find all test runs matching the given query.
            </summary>
            <param name="queryText">WIQL query to execute.</param>
            <returns>List of test runs.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.Query(System.String,System.Boolean)">
            <summary>
            Queries the server to find all test runs matching the given query. Also providing option for including statistics
            </summary>
            <param name="queryText">WIQL query to execute.</param>
            <param name="includeStats">Include Statistics associated with test run</param>
            <returns>List of test runs.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.Count(System.String)">
            <summary>
            Queries the server to find the number of test runs matching the given query.
            </summary>
            <param name="queryText">WIQL query to execute.</param>
            <returns>List of test runs.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.ByOwner(Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
            <summary>
            Queries the server to find all test runs with the given owner.
            </summary>
            <param name="owner">Owner to find</param>
            <returns>List of test runs.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.ByBuild(System.Uri)">
            <summary>
            Queries the server to find all test runs against the given build.
            </summary>
            <param name="build">build uri</param>
            <returns>List of test runs.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.Delete(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestRun})">
            <summary>
            Delete specified runs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper.DeleteByBuild(System.Uri)">
            <summary>
            Deletes all run information and build-level coverage data stored for the given
            build URI.
            </summary>
            <param name="buildUri">build uri</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultHelper.CreateForUpdate(System.Int32,System.Int32)">
            <summary>
            Creates an ITestCaseResult object used for efficiently writing changed properties to
            the server.  Unlike FindTestResult(), this object does not reflect the current state
            of the object.  Instead, it contains empty values.  You should modify the values you
            wish to change and save the changes using ITestResult.Save() or SaveResults().
            </summary>
            <param name="testResultId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultHelper.Find(System.Int32,System.Int32)">
            <summary>
            Retrieves a single test case result.
            </summary>
            <param name="testRunId"></param>
            <param name="testResultId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultHelper.FindByLink(System.Uri,Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment@)">
            <summary>
            Finds a test result, and optionally a test result attachment, from an artifactUri
            The Uri must be for a TestResult or a TestResultAttachment
            </summary>
            <param name="artifactUri"></param>
            <param name="testAttachment">set to null if not TestAttachmentUri, or if attachment not found</param>
            <returns>TestCaseResult, or null if result no found</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultHelper.Query(System.String)">
            <summary>
            Performs a query of test case results using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultHelper.ByTestId(System.Int32)">
            <summary>
            Queries the server to find all results from all runs of the given test.
            </summary>
            <param name="testCaseId">Id of test case to find results for.</param>
            <returns>Array of test results</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultHelper.Reset(Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult[])">
            <summary>
            Clears any test case result information and causes the tests to be re-run.
            </summary>
            <param name="results">Array of results to reset.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultHelper.Save(Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult[],System.Boolean)">
            <summary>
            Updates the server with a collection of ITestCaseResult objects.
            </summary>
            <param name="results">Array of results to update.</param>
            <param name="uploadInBackground">Use background processing to upload attachments.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateHelper.Create">
            <summary>
            Creates a new test resolution state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test resolution state from the server.
            </summary>
            <param name="testCaseId">ID of the test resolution state.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateHelper.Query">
            <summary>
            Returns all test resolution states defined for this team project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateHelper.ImportFromFile(System.String)">
            <summary>
            Imports test resolution states from an Xml file into the project.
            </summary>
            <param name="fileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateHelper.CreateFromFile(System.String)">
            <summary>
            Creates test resolution states from an XML file.
            </summary>
            <remarks>
            This method does both validation the xml file against a schema
            and creation of test resolution states in TCM Server. 
            
            If the schema validation fails, the XmlSchemaValidationException will
            be thrown, and for other validation, TestManagementValidationException.
            </remarks>
            <param name="fileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateHelper.Export(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState},System.String)">
            <summary>
            Writes given test resolution states to the given xml file.
            </summary>
            <param name="testResolutionStates">Test resolutions states to be written in the file</param>
            <param name="fullFileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureTypeHelper.Create">
            <summary>
            Creates a new test failure type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureTypeHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test failure type from the server.
            </summary>
            <param name="testCaseId">ID of the test failure type.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureTypeHelper.Query">
            <summary>
            Returns all test failure types defined for this team project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureTypeHelper.ImportFromFile(System.String)">
            <summary>
            Imports test failure types from an XML file.
            </summary>
            <remarks>
            This method does both validation the xml file against a schema
            and creation of test failure types in TCM Server. 
            
            If the schema validation fails, the XmlSchemaValidationException will
            be thrown, and for other validation, TestManagementValidationException.
            </remarks>
            <param name="fileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureTypeHelper.CreateFromFile(System.String)">
            <summary>
            Creates test failure type objects from an XML file.
            </summary>
            <remarks>
            This method does validation of the xml file against a schema
            
            If the schema validation fails, the XmlSchemaValidationException will
            be thrown, and for other validation, TestManagementValidationException.
            </remarks>
            <param name="fileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestFailureTypeHelper.Export(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType},System.String)">
            <summary>
            Writes given test failure states to the given xml file.
            </summary>
            <param name="testFailureTypes">Test failure states to be written in the file</param>
            <param name="fullFileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsHelper.Create">
            <summary>
            Creates a new test settings object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test settings.
            </summary>
            <param name="settingId">ID of the test resolution state.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsHelper.Query(System.String)">
            <summary>
            Query for test settings.
            </summary>
            <param name="queryText">wiql query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsHelper.Count(System.String)">
            <summary>
            Performs a query of the number of test settings using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsHelper.CreateFromFile(System.String)">
            <summary>
            Creates test settings from an XML file.
            </summary>
            <remarks>
            This method does both validation the xml file against a schema
            and creation of test settings. 
            
            Each test settings have name and an optional description with one 
            .testsettings file to be uploaded. If the file in the xml has a full path,
            the path will be used; otherwise the path is combined by the xml file's 
            directory and the partial path in the xml file.
            
            If the schema validation fails, the XmlSchemaValidationException will
            be thrown, and for other validation, TestManagementValidationException.
            </remarks>
            <param name="fileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationHelper.Create">
            <summary>
            Creates a new test confguration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test configuration from the server.
            </summary>
            <param name="testConfigurationId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationHelper.Query(System.String)">
            <summary>
            Performs a query of test configurations using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationHelper.Query(System.String,System.Int32)">
            <summary>
            Performs a query of test configurations using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationHelper.Query(System.String,System.Collections.IDictionary)">
            <summary>
            Performs a query of test configurations using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationHelper.Count(System.String)">
            <summary>
            Performs a query of the number of test configurations using user-provided constraints.
            </summary>
            <param name="queryText">WIQL query to execute</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationHelper.CreateFromFile(System.String)">
            <summary>
            Creates test configuration from an XML file.
            </summary>
            <remarks>
            This method does both validation the xml file against a schema
            and creation of test configurations. 
            
            If the schema validation fails, the XmlSchemaValidationException will
            be thrown, and for other validation, TestManagementValidationException.
            </remarks>
            <param name="fileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestVariableHelper.Create">
            <summary>
            Creates a new variable to be used in test configurations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestVariableHelper.Query">
            <summary>
            Returns all test variables defined for this team project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestVariableHelper.CreateFromFile(System.String)">
            <summary>
            Creates test variables from an XML file.
            </summary>
            <remarks>
            This method does both validation the xml file against a schema
            and creation of test variables. 
            
            If the schema validation fails, the XmlSchemaValidationException will
            be thrown, and for other validation, TestManagementValidationException.
            </remarks>
            <param name="fileName">The path of the xml file</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestVariableHelper.CreateVariableValue(System.String)">
            <summary>
            Wraps the string value in a TestConfigurationValue instance.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISessionHelper.Create">
            <summary>
            Creates a new test sesion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISessionHelper.Create(System.Int32)">
            <summary>
            Creates a new test sesion and sets the plan id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISessionHelper.Find(System.Int32)">
            <summary>
            Retrieves a single test session from the server based on its unique Id .
            </summary>
            <param name="SessionId">The id of the session to be retrived.</param>
            <returns>The session object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISessionHelper.FindByLink(System.Uri)">
            <summary>
            Retrieves a single test session from the server based on its unique Url.
            </summary>
            <param name="SessionId">The id of the session to be retrived.</param>
            <returns>The session object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISessionHelper.Query(System.String)">
            <summary>
            Queries the server to find all test sessions matching the given query.
            </summary>
            <param name="queryText">WIQL query to execute.</param>
            <returns>List of test sessions.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISessionHelper.Count(System.String)">
            <summary>
            Queries the server to find the number of test sessions matching the given query.
            </summary>
            <param name="queryText">WIQL query to execute.</param>
            <returns>List of test sessions.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ISessionHelper.Delete(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ISession})">
            <summary>
            Delete specified sessions.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPointHelper.BlockTestPoints(Microsoft.TeamFoundation.TestManagement.Client.ITestPoint[])">
            <summary>
            Blocks given test points. This means for these test points,
            the TestPointState will be NotReady, the most recent test result
            will have the outcome as Blocked and state as Completed.
            The TestPointHistory will be updated.
            </summary>
            <param name="pointsToBlock">The points to block.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPointHelper.UnblockTestPoints(Microsoft.TeamFoundation.TestManagement.Client.ITestPoint[])">
            <summary>
            Unblocks given test points. This means for these test points,
            the TestPointState will be Ready. The TestPointHistory will be updated.
            </summary>
            <param name="pointsToUnblock">The points to unblock.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPointHelper.SaveTestPoints(Microsoft.TeamFoundation.TestManagement.Client.ITestPoint[])">
            <summary>
            Saves given test points.
            </summary>
            <param name="pointsToSave">The points to save.</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestParameter">
            <summary>
            Represents the definition of a parameter used in a test step.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestParameter.Name">
            <summary>
            Name of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestParameter.Tags">
            <summary>
            A dictionary for holding caller-defined metadata.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestParameter.IsDataBound">
            <summary>
            Return true if this is a databound parameter
            In the databound case any attempt to set the value
            will throw, and getting the value will silently return null
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestParameter.IsReference">
            <summary>
            Return true if this parameter is a reference to a parameter
            in a Shared Step Set.  Any attempt to modify a reference 
            parameter will result in a new parameter being created in 
            the Test Case's parameter list.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestParameter.IsOverridden">
            <summary>
            Return true if this parameter overrides the default value of
            a Shared Step Set Parameter. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestParameter.IsOutput">
            <summary>
            Return true if this parameter is an output parameter.  A parameter
            is an output parameter is it is defined with "@?[name]".
            /// </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestParameter.Value">
            <summary>
            Value of the parameter or null for no value.
            A null value is ok, will be preserved through
            save, and says that the parameter will need to be
            specified before usage
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.Owner">
            <summary>
            User who owns the plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.OwnerTeamFoundationId">
            <summary>
            TeamFoundationId of the user who owns the plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.OwnerName">
            <summary>
            User who owns the plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.StartDate">
            <summary>
            Start date of a test plan has only Date component. Its default 
            value is the day of creation. Start date must always occur before
            end date.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.EndDate">
            <summary>
            End date of a test pass has only Date component. Its default 
            value is 7 days after the day of creation. End date must always
            occur after start date.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.ManualTestSettingsId">
            <summary>
            Test settings Id for manual testing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.ManualTestEnvironmentId">
            <summary>
            Test environment Id for manual testing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.AutomatedTestSettingsId">
            <summary>
            Test settings Id for automated testing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.AutomatedTestEnvironmentId">
            <summary>
            Test environment Id for automated testing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.RootSuite">
            <summary>
            The root suite for this test plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.AreaPath">
            <summary>
            Area path of test plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.Iteration">
            <summary>
            TFS iteration this plan is associated with.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.BuildFilter">
            <summary>
            Contains a set of criteria that restrict the builds
            that can be associated with this plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.BuildUri">
            <summary>
            Returns the URI of the build currently associated with this plan
            or null if none is currently associated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.BuildNumber">
            <summary>
            Returns the name of the build currently associated with this plan
            or null if none is currently associated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.BuildDirectory">
            <summary>
            Returns the Directory of the build currently associated with this plan
            or null if none is currently associated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.PreviousBuildUri">
            <summary>
            Returns the URI of the previous build associated with this plan. 
            PrevousBuildUri is cleared when the BuildUri is cleared.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.BuildTakenDate">
            <summary>
            Returns the date when the current build is associated with this plan.
            BuildTakenDate is cleared when the BuildUri is cleared.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.NewBuildStatistics">
            <summary>
            Returns information about what has changed since the build currently
            associated with this plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.Links">
            <summary>
            A collection of links to sharepoint documents associated with this plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.LastUpdatedBy">
            <summary>
            Last person to update plan
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.LastUpdatedByName">
            <summary>
            Last person to update plan
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.LastUpdated">
            <summary>
            Date the plan was last updated
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.CreateLink">
            <summary>
            Creates a new, empty IExternalLink.  Caller must add this to the Links collection
            before saving.
            </summary>
            <returns>Newly created IExternalLink</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.CreateTestRun(System.Boolean)">
            <summary>
            Creates a new test run associated with this plan
            </summary>
            <returns>ITestRun</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.Clone">
            <summary>
            Creates a copy of this test plan and returns it.
            </summary>
            <returns>The cloned plan.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.CopyPropertiesFrom(Microsoft.TeamFoundation.TestManagement.Client.ITestPlan)">
            <summary>
            Copies the properties of the parameter test plan into the current plan.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.RefreshTestCase(System.Int32)">
            <summary>
            Refreshes all instances of the test case in the plan
            </summary>
            <param name="testCaseId">Test Case Id</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryImpactedPoints(System.Uri)">
            <summary>
            Retrieves the test cases impacted by the given build for this plan.
            This includes all builds since the ITestPlan.CurrentBuild up to
            the build uri specified.
            </summary>
            <param name="buildUri">URI of build.</param>
            <returns>Collection of points impacted by the build.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryImpactedPoints(System.Uri,System.String)">
            <summary>
            Retrieves the test cases impacted by the given build for this plan.
            This includes all builds since the ITestPlan.CurrentBuild up to
            the build uri specified.
            </summary>
            <param name="buildUri">URI of build.</param>
            <param name="testCaseFieldText">WIQL string for retrieving the embedded test case.</param>
            <returns>Collection of points impacted by the build.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.FindTestPoint(System.Int32)">
            <summary>
            Returns a single ITestPoint object from this plan with ID testPointId
            or null if not found.
            </summary>
            <param name="testPointId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.FindTestPoint(System.Int32,System.String)">
            <summary>
            Returns a single ITestPoint object from this plan with ID testPointId
            or null if not found.
            </summary>
            <param name="testPointId"></param>
            <param name="testCaseFieldText">WIQL string for retrieving the embedded test case.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryTestPoints(System.String)">
            <summary>
            Finds all points that belong to this plan and match the given WIQL conditions.
            </summary>
            <param name="queryText">WIQL query string for retrieving points.</param>
            <remarks>
             Here are some of the WIQL fields that can be used in this query:
                SuiteId
                ConfigurationId
                TestCaseId
                PointState
                AreaPath
                
                RecursiveSuiteId: to query all points in the suite hierarchy starting 
                                  with RecursiveSuiteId.
            </remarks>
            <returns>Collection of points matching query.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryTestPointsAndStatistics(System.String,System.String,Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics@)">
            <summary>
            Finds all points that belong to this plan and match the given WIQL conditions.
            </summary>
            <param name="queryText">WIQL query string for retrieving points.</param>
            <param name="testCaseFieldText">WIQL string for retrieving the embedded test case.</param>
            <param name="statistics">Statistics for points queried.</param>
            <remarks>
             Here are some of the WIQL fields that can be used in this query:
                SuiteId
                ConfigurationId
                TestCaseId
                PointState
                AreaPath
                
                RecursiveSuiteId: to query all points in the suite hierarchy starting 
                                  with RecursiveSuiteId.
            </remarks>
            <returns>Collection of points matching query.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryTestPointsAndStatistics(System.String,System.String,System.String[],Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics@)">
            <summary>
            Finds all points that belong to this plan and match the given WIQL conditions.
            </summary>
            <param name="queryText">WIQL query string for retrieving points.</param>
            <param name="testCaseFieldText">WIQL string for retrieving the embedded test case.</param>
            <param name="testCaseProperties">Array of properties of the associated test case, to pre-fetch and cache</param>
            <param name="statistics">Statistics for points queried.</param>
            <remarks>
             Here are some of the WIQL fields that can be used in this query:
                SuiteId
                ConfigurationId
                TestCaseId
                PointState
                AreaPath
                
                RecursiveSuiteId: to query all points in the suite hierarchy starting 
                                  with RecursiveSuiteId.
            </remarks>
            <returns>Collection of points matching query.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryTestPoints(System.String,System.String)">
            <summary>
            Finds all points that belong to this plan and match the given WIQL conditions.
            </summary>
            <param name="pointQueryText">WIQL query string for retrieving points.</param>
            <param name="testCaseFieldText">WIQL string for retrieving the embedded test case.</param>
            <remarks>
             Here are some of the WIQL fields that can be used in this query:
                SuiteId
                ConfigurationId
                TestCaseId
                PointState
                AreaPath
                
                RecursiveSuiteId: to query all points in the suite hierarchy starting 
                                  with RecursiveSuiteId.
            </remarks>
            <returns>Collection of points matching query.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryTestPoints(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Finds all points that belong to this plan and match the given WIQL conditions.
            </summary>
            <param name="pointQueryText">WIQL query string for retrieving points.</param>
            <param name="testCaseFieldText">WIQL string for retrieving the embedded test case.</param>
            <param name="testCaseProperties">Array of properties of the associated test case, to pre-fetch and cache</param>
            <param name="fetchFirstPage">If true, the call also fetches the first page from the server.</param>
            <remarks>
             Here are some of the WIQL fields that can be used in this query:
                SuiteId
                ConfigurationId
                TestCaseId
                PointState
                AreaPath
                
                RecursiveSuiteId: to query all points in the suite hierarchy starting 
                                  with RecursiveSuiteId.
            </remarks>
            <returns>Collection of points matching query.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryTestPointStatistics(System.String)">
            <summary>
            Returns statistics of points that belong to this plan and match the given WIQL conditions.
            </summary>
            <param name="queryText">WIQL query string for retrieving points.</param>
            <remarks>
             Here are some of the WIQL fields that can be used in this query:
                SuiteId
                ConfigurationId
                TestCaseId
                PointState
                AreaPath
                
                RecursiveSuiteId: to query all points in the suite hierarchy starting 
                                  with RecursiveSuiteId.
            </remarks>
            <returns>Statistics object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryTestPointStatisticsByPivot(System.String,System.Collections.Generic.List{Microsoft.TeamFoundation.TestManagement.Client.TestPointStatisticsQueryPivotType})">
            <summary>
            Returns statistics of points by pivot that belong to this plan and match the given WIQL conditions.
            </summary>
            <param name="queryText">WIQL query string for retrieving points.</param>
            <param name="pivotList">List of pivots for retrieving statistics by pivot.</param>
            <remarks>
             Here are some of the WIQL fields that can be used in this query:
                SuiteId
                ConfigurationId
                TestCaseId
                PointState
                AreaPath
                AssignedTo
                
                RecursiveSuiteId: to query all points in the suite hierarchy starting 
                                  with RecursiveSuiteId.
            </remarks>
            <returns>Statistics by Pivot object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan.QueryTestPointHierarchy(System.String)">
            <summary>
            Returns the hierarchy of suites that contain points matching the WIQL query
            </summary>
            <param name="queryText">WIQL query string for retrieving points.</param>
            <remarks>
             Here are some of the WIQL fields that can be used in this query:
                SuiteId
                ConfigurationId
                TestCaseId
                PointState
                AreaPath
                
             SuiteId = X will retrieve all children of point X
             SuiteId UNDER X will retrieve all descendants of point X
            </remarks>
            <returns>Root of hierarchy</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPlan2.Status">
            <summary>
            State of the test plan.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestPointProperties">
            <summary>
            Represents the mutable properties of a test point.  These are tracked historically.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointProperties.Revision">
            <summary>
            Concurrency control for Test Point
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointProperties.LastUpdatedBy">
            <summary>
            Last person to update point
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointProperties.LastUpdatedByName">
            <summary>
            Last person to update point
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointProperties.LastUpdated">
            <summary>
            Date the point was last updated
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint">
            <summary>
            A test point represents the execution state of a test case in a suite against a configuration as
            part of a plan.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.Plan">
            <summary>
            The test plan this point belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.SuiteId">
            <summary>
            ID of the suite containing this test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.ConfigurationId">
            <summary>
            ID of the TestConfiguration this point represents.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.ConfigurationName">
            <summary>
            Name of the TestConfiguration this point represents.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.AssignedTo">
            <summary>
            User this point is assigned to.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.AssignedToTeamFoundationId">
            <summary>
            User this point is assigned to.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.AssignedToName">
            <summary>
            User this point is assigned to.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.IsTestCaseAutomated">
            <summary>
            Returns the same result as TestCaseWorkItem.IsAutomated, but may use cached properties
            to answer the question
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.HasCachedProperties">
            <summary>
            Has the Point object got any cached properties from the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.Item(System.String)">
            <summary>
            Access the properties of the test case of the point, possibly from the 
            internal cached-properties table
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.UserData">
            <summary>
            Allow the user to associate and retrieve an arbitrary object.  This
            value is not persisted. It is so that API objects can be dynamically
            extended
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.Block">
            <summary>
            Blocks this TestPoint, the TestPointState will be NotReady. The most
            recent test result will have the outcome Blocked and state Completed.
            The TestPointHistory will be updated.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.Unblock">
            <summary>
            Unblock this TestPoint, The TestPointState will be Ready. The 
            TestPointHistory will be updated.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPoint.QueryAssociatedWorkItemsFromResults">
            <summary>
            Retrieves the integer ids for the workitems associated with all the corresponding 
            results of the test point.
            </summary>
            <remarks>
            This method goes directly to the server, and is not subject to refresh.
            </remarks>
            <returns>Work item IDs of associated work items.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics">
            <summary>
            Represents counts of points in various states as selected by
            ITestPlan.QueryTestPointStatistics()
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.Item(Microsoft.TeamFoundation.TestManagement.Client.TestPointState)">
            <summary>
            The number of points that have the specified value of TestPoint.State
            </summary>
            <param name="state">Point state.</param>
            <returns>Number of points.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.Item(Microsoft.TeamFoundation.TestManagement.Client.TestResultState)">
            <summary>
            The number of points that have the specified value of TestPoint.MostRecentResultState
            </summary>
            <param name="state">Result state.</param>
            <returns>Number of points.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.Item(Microsoft.TeamFoundation.TestManagement.Client.TestOutcome)">
            <summary>
            The number of points that have the specified value of TestPoint.MostRecentResultOutcome
            </summary>
            <param name="state">Result outcome.</param>
            <returns>Number of points.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.Item(Microsoft.TeamFoundation.TestManagement.Client.FailureType)">
            <summary>
            The number of points that have the specified value of TestPoint.MostRecentFailureType
            </summary>
            <param name="state">Failure Type</param>
            <returns>Number of points.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.FailureTypeStatistics">
            <summary>
            Returns a mapping of the failure type to the number of test points for that type
            </summary>
            <returns>Dictionary of failure type id and test point count for each type</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.Item(System.Int32)">
            <summary>
            The number of points that have the specified value of TestPoint.MostRecentResolutionState
            </summary>
            <param name="state">Resolution State Id</param>
            <returns>Number of points.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.TotalCount">
            <summary>
            Returns the total number of test points represented by this statistic set.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.Refresh">
            <summary>
            Requeries the server and computes new statistics.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics.GetStatistics">
            <summary>
            Get the array of ITestPointStatistic objects.
            </summary>
            <returns>Array of statistics.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistic">
            <summary>
            Represent a count of test points per test plan for a combination of 
            TestPointState, TestResultState and TestOutcome.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestRequirement">
            <summary>
            Represents a requirement work item and additional computed information
            not available from the work item.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRequirement.WorkItemId">
            <summary>
            ID of the requirement work item
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRequirement.WorkItem">
            <summary>
            The requirement work item.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRequirement.TestCaseCount">
            <summary>
            Number of test cases linked to the requirement work item with a "Tested By" link.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRequirement.Plans">
            <summary>
            The list of test plans containing passes associated with this requirement.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState">
            <summary>
            Represents the resolution status of a test case result
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState.Name">
            <summary>
            Name of TestResolution state.  
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState.Project">
            <summary>
             The team project of this state
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState.Delete">
            <summary>
            Removes the given test resolution state from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState.Refresh">
            <summary>
            Updates the test resolution state with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState.Save">
            <summary>
            Writes the new or updated test resolution state to the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateStatistic">
            <summary>
            Represents the statistics for a particular resolution state within a run
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateStatistic.Count">
            <summary>
            Total number test with this resolution
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateStatistic.State">
            <summary>
            Resolution state associated with this statistic
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestResult">
            <summary>
            Base interface for test case, action, and iteration results.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResult.DateCreated">
            <summary>
            Date the test result was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResult.DateCompleted">
            <summary>
            Date the test completed. Must always occur after date
            the test started.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResult.DateStarted">
            <summary>
            Date the test was started. Must always occur before date 
            the test completed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResult.Duration">
            <summary>
            Time spent executing the test, not including
            times the execution was paused.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResult.CollectorsEnabled">
            <summary>
            What collectors (Action, Video Recording etc) were
            enabled for the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResult.Outcome">
            <summary>
            The outcome of the test case
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResult.ErrorMessage">
            <summary>
            Short string description of the failure.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResult.Comment">
            <summary>
            A historical collection of comments entered by those analyzing the result.
            TODO: Do this like a WIT discussion field
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestResultParameter">
            <summary>
            Represents the expected and actual values of a parameter during an execution.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResultParameter.Name">
            <summary>
            Parameter name.  Must be unique within the collection.  Case-insensitive.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResultParameter.ExpectedValue">
            <summary>
            The value expected.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestResultParameter.ActualValue">
            <summary>
            The value actually observed when the test was executed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestRun">
            <summary>
            Represents an execution of a set of tests against a specific build.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.BuildDirectory">
            <summary>
            Path to the output of the build.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.BuildPlatform">
            <summary>
            Platform of the build.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.BuildFlavor">
            <summary>
            Build flavor such as 'Release' or 'Debug'.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Project">
            <summary>
             The team project of this run
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.State">
            <summary>
            State of the run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.PostProcessState">
            <summary>
            State of any post-process activities occurring on the
            server (e.g. Code Coverage Analysis)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.ErrorMessage">
            <summary>
            Short string description of the failure.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.DateDue">
            <summary>
            Date the run is due.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Statistics">
            <summary>
            Returns statistics about the number of test cases in the run
            in various states.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Iteration">
            <summary>
            Iteration of the test run
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.BuildConfigurationId">
            <summary>
            Returns the ID of the build configuration for this run or 0 if no id exists
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Type">
            <summary>
            Type of the run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.IsAutomated">
            <summary>
            Returns true if the test run contains test that should be executed
            automated.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Version">
            <summary>
            Returns the client version that ran the test. Used for Orcas forward compat.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.IsBvt">
            <summary>
            Is this a Build Verification Test Run?
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.TotalTests">
            <summary>
            The total number of tests in this run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.IncompleteTests">
            <summary>
            The number of tests that are not completed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.NotApplicableTests">
            <summary>
            The number of tests that are not applicable.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.PassedTests">
            <summary>
            The number of tests that passed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.UnanalyzedTests">
            <summary>
            The number of tests that are not analyzed.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.AddTest(System.Int32,System.String,System.String,Microsoft.TeamFoundation.TestManagement.Client.ITmiTestImplementation)">
            <summary>
            Creates a new test result in the test run against a test configuration. Does
            not require an existing test case for the test result. 
            Must be followed by a Save().
            </summary>
            <param name="configurationId">ID of configuration to test against.</param>
            <param name="testCaseTitle">Title of the pseudo test case</param>
            <param name="testCaseAreaUri">Area path where the pseudo test case should be. Default is the root area path.</param>
            <param name="implementation">The test implementation for the test result.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.AddTest(System.String)">
            <summary>
            Adds a new test with given name.
            Must be followed by a Save()
            </summary>
            <param name="testName">Name of the test</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.AddTest(System.Int32,System.Int32,Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
            <summary>
            Adds a new test case/configuration pair to the test run.
            Must be followed by a Save()
            </summary>
            <param name="testCaseId">ID of test case to add.</param>
            <param name="configurationId">ID of configuration to test against.</param>
            <param name="owner">Owner to assign the test to or null to inherit owner from the test case.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.AddTestPoint(Microsoft.TeamFoundation.TestManagement.Client.ITestPoint,Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
            <summary>
            Adds a new test point to the test run.
            Must be followed by a Save()
            </summary>
            <param name="point">test point to add.</param>
            <param name="owner">Owner to assign the test to or null to inherit owner
            from the test points "AssignedTo".</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.AddTestPoints(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestPoint},Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
            <summary>
            Adds new test points to the test run.
            Must be followed by a Save().
            The test result objects returned by this call are not usable until after the save.
            </summary>
            <param name="points">test points to add.</param>
            <param name="owner">Owner to assign the tests to or null to inherit owner
            from the test points "AssignedTo".</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.QueryResultsByOwner(Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
            <summary>
            Returns a collection of results owned by a given user.
            </summary>
            <param name="owner">User to find results belonging to.</param>
            <returns>An enumerable list of matching results.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.QueryResults">
            <summary>
            Returns all test results for this run.
            </summary>
            <returns>An enumerable list of matching results.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.QueryResults(System.Boolean)">
            <summary>
            Returns all test results for this run.
            </summary>
            <param name="includeActionResults">Optional parameter indicating whether actions results will be fetched along with results.</param>
            <returns>An enumerable list of matching results.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.QueryResultsByOutcome(Microsoft.TeamFoundation.TestManagement.Client.TestOutcome)">
            <summary>
            Returns all test results with the given outcome.
            </summary>
            <param name="status">Outcome to look for.</param>
            <returns>An enumerable list of matching results.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.QueryResultsByStatus(Microsoft.TeamFoundation.TestManagement.Client.TestResultState)">
            <summary>
            Returns all test results with the given status.
            </summary>
            <param name="status">Status to look for.</param>
            <returns>An enumerable list of matching results.</returns>
            <param name="refresh">indicates should refresh from server or pull from cache</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Abort(Microsoft.TeamFoundation.TestManagement.Client.TestRunAbortOptions)">
            <summary>
            Aborts the given test run
            </summary>
            <param name="options">Flags to control behavior.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Abort">
            <summary>
            Aborts the given test run.
            </summary>
            <remarks>Equivalent to Abort(TestRunAbortOptions.None)</remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Refresh(System.DateTime)">
            <summary>
            Updates the test run with the new data from the server
            only if there exists a test run with newer timestamp than lastUpdated parameter
            Returns true if test run was updated with the new data and false otherwise
            </summary>
            <param name="lastUpdated">Timestamp to compare the test run with</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics">
            <summary>
            Represents the various counts of test results for a run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.Item(Microsoft.TeamFoundation.TestManagement.Client.TestResultState)">
            <summary>
            The number of points that have the specified value of TestPoint.MostRecentResultState
            </summary>
            <param name="state">Result state.</param>
            <returns>Number of points.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.Item(Microsoft.TeamFoundation.TestManagement.Client.TestOutcome)">
            <summary>
            The number of points that have the specified value of TestPoint.MostRecentResultOutcome
            </summary>
            <param name="state">Result outcome.</param>
            <returns>Number of points.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.TotalTests">
            <summary>
            Returns the total number of test points represented by this statistic set.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.PassedTests">
            <summary>
            Number of tests where Outcome == TestOutcome.Passed
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.FailedTests">
            <summary>
            Number of tests where Outcome == TestOutcome.Failed
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.InconclusiveTests">
            <summary>
            Number of tests where Outcome == TestOutcome.Inconclusive
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.CompletedTests">
            <summary>
            Number of tests that have finished executing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.InProgressTests">
            <summary>
            Number of tests that are currently running.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.PendingTests">
            <summary>
            Number of tests that have not yet run.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.Refresh">
            <summary>
            Updates the statistics with new values from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics.GetStatistics">
            <summary>
            Get the array of ITestRunStatistic objects.
            </summary>
            <returns>Array of statistics.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistic">
            <summary>
            Represent a count of test results per test run for a combination of 
            TestResultState, TestOutcome and ResolutionState.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRun2.AddTests(System.Collections.Generic.IList{Microsoft.TeamFoundation.TestManagement.Client.ITestCaseProperties},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a list of Automated testcases , configuration pair to the test run.
            </summary>
            <param name="testCaseProperties">List of Automated TestCases</param>
            <param name="configurationIds"> List Of configuration in which specified testcases will be run</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.Title">
            <summary>
            Title of the associated run template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.BuildUri">
            <summary>
            Name (as a URI) of the build the run was executed against.
            As an example: new Uri("vstfs:///Build/Build/1")
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.BuildNumber">
            <summary>
            Name of the build.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.BuildPlatform">
            <summary>
            Platform of the build.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.BuildFlavor">
            <summary>
            Build flavor such as 'Release' or 'Debug'.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.BuildConfigurationId">
            <summary>
            Returns the ID of the build configuration for this run or 0 if no id exists
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.DateCreated">
            <summary>
            Date the run was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.DateStarted">
            <summary>
            Date the run was started.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.DateCompleted">
            <summary>
            Date the last test completed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.LastUpdated">
            <summary>
            Date the run was last modified (title or owner set).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.LastUpdatedBy">
            <summary>
            Last person to update run 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.LastUpdatedByName">
            <summary>
            Last person to update run 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.Owner">
            <summary>
            User who started the run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.OwnerTeamFoundationId">
            <summary>
            User who started the run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.OwnerName">
            <summary>
            User who started the run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.Controller">
            <summary>
            The name of the controller of this run
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.TestSettingsId">
            <summary>
             ID of the public test settings being used for this test run.
            </summary>
            <remarks>
            See CopyTestSettings method remarks.
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.TestEnvironmentId">
            <summary>
             The test environment for this run
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.Revision">
            <summary>
            Revision number of TestRun for concurrency control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.TestPlanId">
            <summary>
            Returns the ID of the test plan containing this run or 0 if this is an
            ad-hoc run.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.IsDirty">
            <summary>
            Returns true if the test run has been changed since the last Save().
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.TestSettings">
            <summary>
            The test settings being used for this test run execution. Null if 
            the run has no test settings.
            </summary>
            <remarks>
            See CopyTestSettings method remarks.
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.LinkedWorkItemCount">
            <summary>
            The total number of bugs associated with the test results.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.Comment">
            <summary>
            Comments entered by those analyzing the run.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.CopyTestSettings(Microsoft.TeamFoundation.TestManagement.Client.ITestSettings)">
            <summary>
            Copy the test settings and associate it to the test run.
            </summary>
            <param name="settings">Test Settings to save with run.</param>     
            <remarks>
            This method copies settings object to the TestSettings property and set
            TestSettingsId to settings.Id. If settings.Id is zero, TestSettingsId 
            will be zero, which means the run does not use a public test settings.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.CreateAttachment(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates an attachment for a Test Result from a byte array.
            </summary>
            <remarks>When the object owning this attachment is saved, the contents will be
            uploaded to the TCM server.  The array should not be modified before then.</remarks>
            <param name="contents">Byte array containing attachment contents.</param>
            <param name="offset">Index of the first byte to be used as attachment content, usually 0.</param>
            <param name="length">Number of bytes in the attachment.</param>
            <returns>New attachment object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.Delete">
            <summary>
            Removes the given test run and its results from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.Refresh">
            <summary>
            Updates the run with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.Save">
            <summary>
            Writes the new or updated test run to the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings">
            <summary>
            Test settings for plans, passes and runs.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.Name">
            <summary>
            Name of TestSettings object.  
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.Description">
            <summary>
            Description of test settings.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.CreatedBy">
            <summary>
            User who created the test settings.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.CreatedByName">
            <summary>
            User who created the test settings.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.CreatedDate">
            <summary>
            Date and time when the test settings is created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.Settings">
            <summary>
            <see cref="T:System.Xml.XmlElement"/> containing test settings
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.MachineRoles">
            <summary>
            A list of machine roles used by this test settings object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.AreaPath">
            <summary>
            Area path of test settings.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.IsAutomated">
            <summary>
            Is this test settings for running automated tests?
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.Revision">
            <summary>
            Revision number of TestSettings for concurrency control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.LastUpdatedBy">
            <summary>
            Last person to update settings 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.LastUpdatedByName">
            <summary>
            Last person to update settings 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.LastUpdated">
            <summary>
            Date the Settings was last updated
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.Delete">
            <summary>
            Removes the given test settings from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.Refresh">
            <summary>
            Updates the test settings with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSettings.Save">
            <summary>
            Writes the new or updated test settings to the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestStep">
            <summary>
            Represents a single action and expected result
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestStep.Title">
            <summary>
            One-line description of the action to perform.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestStep.ExpectedResult">
            <summary>
            One-line description of the expected result of this action.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestStep.Description">
            <summary>
            Longer description of the step (optional).
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestStep.TestStepType">
            <summary>
            Type of step.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestStep.CreateAttachment(System.String)">
            <summary>
            Creates an attachment from a file on disk.
            </summary>
            <remarks>When the object owning this attachment is saved,
            the specified file will be uploaded to the TCM server,
            or queued for upload. It must continue to be readable
            until uploads are complete.
            </remarks>
            <param name="localFileName">
            File containing the contents of the attachment.
            </param>
            <returns>a new attachment</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestStep.Attachments">
            <summary>
            Attachments to the step.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestStepResult">
            <summary>
            Represents the result for a single action
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestStepResult.Parameters">
            <summary>
            Parameters extracted from test results with values.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase">
            <summary>
            Generic notion of a Test Suite, 
            Test suites may be based on Queries <see cref="T:Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuite"/>
            or on an explicit list of ids of TestCases or other TestSuites <see cref="T:Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite"/>
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.Plan">
            <summary>
            The test plan that owns this suite.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.Description">
            <summary>
            Arbitrary non-null string
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.Parent">
            <summary>
            Parent suite this suite is in. This property will be null if the suite is 
            not retrieved from the suite hierarchy with the root suite in ITestPlan.RootSuite. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.IsRoot">
            <summary>
            Returns true if this is the projects root suite
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.DefaultConfigurations">
            <summary>
            When test cases are added to this suite, this is the list of configurations
            that points will be created for unless the test case overrides it. If this 
            property returns null, the list is inherited from the parent.
            </summary>
            <remarks>
            This list is read-only.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.CreateTestPointAssignment(System.Int32,Microsoft.TeamFoundation.TestManagement.Client.IdAndName,Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
            <summary>
            Creates a TestPointAssignment object for later use in AssignTestPoints()
            </summary>
            <param name="testCaseId">Test case ID of point to reassign.</param>
            <param name="configuration">Configuration ID and Name of point to reassign.</param>
            <param name="assignedTo">Identity to assign point to</param>
            <returns>New ITestPointAssignment object</returns>
            <see>AssignTestPoints()</see>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.CreateTestPointAssignment(System.Int32,Microsoft.TeamFoundation.TestManagement.Client.IdAndName,System.Guid)">
            <summary>
            Creates a TestPointAssignment object for later use in AssignTestPoints()
            </summary>
            <param name="testCaseId">Test case ID of point to reassign.</param>
            <param name="configuration">Configuration ID and Name of point to reassign.</param>
            <param name="assignedTo">Identity to assign point to</param>
            <returns>New ITestPointAssignment object</returns>
            <see>AssignTestPoints()</see>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.AssignTestPoints(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestPointAssignment})">
            <summary>
            Changes the AssignedTo property for a set of test points.
            </summary>
            <remarks>Operation is performed in bulk.  Any assignments for test case ID/configuration
            pairs that are not in this suite will be ignored.</remarks>
            <param name="assignments">Assignments to make.</param>
            <see>CreateTestPointAssignment()</see>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.ClearDefaultConfigurations">
            <summary>
            Removes the list of default configurations from the suite so that it will
            inherit the list from its parent.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.SetDefaultConfigurations(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.IdAndName})">
            <summary>
            Sets the list of default configurations for this suite.  After calling this,
            the list will no longer be inherited.
            </summary>
            <param name="configurations"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.SetEntryConfigurations(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry},System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.IdAndName})">
            <summary>
            Sets the configurations associated with the given list of test cases
            </summary>
            <param name="entries">Suite entries to change associations of (must be test cases)</param>
            <param name="configurations">Configuration Ids to associate with.</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.TestCases">
            <summary>
            A read-only collection of testcases
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.TestCaseCount">
            <summary>
            Count of test case inside suite
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.AllTestCases">
            <summary>
            A read-only collection of testcases for this suite and all children
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.LastUpdatedBy">
            <summary>
            Last person to update suite 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.LastUpdatedByName">
            <summary>
            Last person to update suite 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.LastUpdated">
            <summary>
            Date the suite was last updated
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.TestSuiteType">
            <summary>
            What sort of test suite is this?
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.Refresh">
            <summary>
            Refresh any suite in the suite hierarchy that is out of date.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.Refresh(System.Boolean)">
            <summary>
            Force refresh all suites in the suite hierarchy.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.TestSuiteEntry">
            <summary>
            Create an entry suitable for use in a static test suite
            from a test suite
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase2.Status">
            <summary>
            State of the test plan. Represents whether or not the test cases in this suite are done
            being planned.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestPointAssignment">
            <summary>
            Helper for ITestSuiteBase.AssignPoints().
            Represents a point assignment to be made.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointAssignment.TestCaseId">
            <summary>
            Test case ID of the point to reassign.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointAssignment.ConfigurationId">
            <summary>
            Configuration ID of the point to reassign
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointAssignment.AssignedTo">
            <summary>
            Identity to reassign the point to
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointAssignment.AssignedToTeamFoundationId">
            <summary>
            Identity to reassign the point to
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestPointAssignment.AssignedToName">
            <summary>
            Identity to reassign the point to
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry">
            <summary>
            An entry, which would be contained in a ITestSuiteEntryCollection
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.Title">
            <summary>
            The title of the suite or case
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.EntryType">
            <summary>
            This property returns the same value as Id.TestSuiteEntryType
            so this is just for convenience
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.TestObject">
            <summary>
            The thing the entry refers to, no matter what it is
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.Id">
            <summary>
            The id of the thing the entry refers to, no matter what it is
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.TestCase">
            <summary>
            The referred to test case (or null)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.TestSuite">
            <summary>
            The referred to test suite (or null)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.ParentTestSuite">
            <summary>
            The parent test suite
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.Configurations">
            <summary>
            The list of configurations this entry will be tested against.
            For test cases, returns the configurations that points exist for.
            For test suites, calls through to suite.DefaultConfigurations.
            </summary>
            <remarks>
            This list is read-only.
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.PointAssignments">
            <summary>
            The list of configurations this test case entry will be tested against and their associated
            assigned to users.
            For test suites, returns null.
            </summary>
            <remarks>
            This list is read-only.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.UseDefaultConfigurations">
            <summary>
            This will reset the entry's list of configurations.
            For test cases, this will reset the case to the parent suite's
            DefaultConfigurations list.
            For test suites, this will call through to ClearDefaultConfigurations().
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.SetConfigurations(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.IdAndName})">
            <summary>
            Sets the list of configurations for this entry.  For test case entries, this
            will add/remove test points.  For subsuites, this will call through to 
            suite.SetDefaultConfigurations().
            </summary>
            <param name="configurations">List of configurations to support.</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry.UserData">
            <summary>
            A way to extend built in ojects with extra information
            This data is not persisted
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestVariable.Name">
            <summary>
            Name of variable.  Must be unique
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestVariable.Description">
            <summary>
            Description of variable
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestVariable.Revision">
            <summary>
            Revision number for concurrency control
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITestVariable.AllowedValues">
            <summary>
            List of legal values for this variable.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestVariable.Delete">
            <summary>
            Removes the given variable from the server.  What happens to configurations that get deleted
            who use this?
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestVariable.Refresh">
            <summary>
            Updates the variable with new data from the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITestVariable.Save">
            <summary>
            Writes the new or updated test variable to the server.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITestVariableValue">
            <summary>
            A wrapper of the string value of AllowedValues collection that 
            make inline error validation possible.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore">
            <summary>
            Manages an identity cache which is loaded from disk and periodically
            refreshed from the identity management service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.Refresh">
            <summary>
            Causes a synchronous refresh of the identity cache.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.FindByDisplayName(System.String)">
            <summary>
            Finds the TeamFoundationIdentity associated with the unqiue display name.
            </summary>
            <param name="displayName">The display name of the identity sought.</param>
            <returns>Returns an instance to a TeamFoundationIdentity.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.FindTeamFoundationIdByDisplayName(System.String)">
            <summary>
            Finds the TeamFoundationIdentity associated with the unqiue display name.
            </summary>
            <param name="displayName">The display name of the identity sought.</param>
            <returns>TeamFoundationId of the user</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.FindByAccountName(System.String)">
            <summary>
            Finds the TeamFoundationIdentity associated with the unqiue account name.
            </summary>
            <param name="accountName">The account name of the user or group.</param>
            <returns>Returns an instance to a TeamFoundationIdentity.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.FindByTeamFoundationId(System.Guid)">
            <summary>
            Finds the TeamFoundationIdentity associated with the unique
            team foundation id
            </summary>
            <param name="displayName">The team foundation id of the identity sought.</param>
            <returns>A TeamFoundationIdentity.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.GetDisplayName(System.Guid)">
            <summary>
            Gets the display name of user associated with the unique foundation id
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.AddDisplayNames(System.Collections.Generic.Dictionary{System.Guid,System.String})">
            <summary>
            Adds the given TeamFoundationId,DisplayName pair to cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.AddDisambiguousDisplayName(System.Guid,System.String)">
            <summary>
            Adds disambiguous display name by parsing identity
            </summary>
            <param name="identity">GUID of TeamFoundation identity to look up</param>
            <param name="disambiguousName">Disambiguous name if available</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.AddDisplayName(System.Guid,System.String)">
            <summary>
            Adds the given TeamFoundationId,DisplayName pair to cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.EnsureIdentitiesById(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Ensures the cache has the TeamFoundationIdentity objects for the given set of TeamFoundationIdentity identifiers.
            </summary>
            <param name="teamFoundationIds">Set of TeamFoundationIdentity identifiers.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.EnsureIdentitiesByAccountName(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Ensures the cache has the TeamFoundationIdentity objects for the given set of TeamFoundationIdentity identifiers.
            </summary>
            <param name="teamFoundationIds">Set of TeamFoundationIdentity identifiers.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.AddRecentUser(Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
            <summary>
            Add the given user to RecentUsers
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.AddRecentUser(System.Guid)">
            <summary>
            Add the given user to RecentUsers
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.AllUserIdentities">
            <summary>
            Get all user identities cached locally.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.AllUserIdentityNames">
            <summary>
            Get all user identities cached locally.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.RecentUserNames">
            <summary>
            Get recently used users from TFS
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore.AllGlobalAndProjectGroupIdentities">
            <summary>
            Returns all TeamFoundationIdentities associated with global and project groups.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString">
            <summary>
            A "ParameterString" is a string with embedded parameters
            Developers Note: This must be immutable
            </summary>
            <remarks>
            There are two ways to look at such a string... one is as
            a flat string with embedded parameters, another is as a
            list of strings and parameter references (names)
            
            Rule 1: There is no such thing as an illegal string
            the parsing rules are intentionally generous
            
            Here are some example string forms, along with what they
            will parse to
            
            "Put the @@object on the @@support"
            -> "Put the ", object, " on the ", support
            
            Escaping is optional, if the character following
            the @ is not a valid identifier lead character,
            or the string ends in an @ sign, the text is treated
            as a literal
            "An @ sign on it's own may be OK"
            -> "An @ sign on it's own may be OK"
            
            A parameter name must conform to C# identifier rules
            so for example when parsing a parameter, we stop after
            the first space:
            "Log in with @@domain @@user"
            -> "Log in with ", domain, " ", user
            
            If there is literal text immediately following
            a parameter name, then it may need to be separated
            
            "The plural of @@WORD is @@WORD@@s"
            -> "The plural of ", WORD, " is", WORD, "s"
            
            Juxtaposing two parameters with no intervening space also
            requires the terminating @@ sign
            Enter the compound word @@prefix@@suffix
            -> "Enter the compound word ", prefix, suffix
            
            After the parameter, a ? indicates that the parameter value
            to be treated as if it were null (even it has been
            previously set) In a manual test context, this means that
            in the next example SessionId will always be requested
            and the new value used, even if it had an old value
            
            "Check the value of the @?SessionId"
            
            Case is not significant for parameters names, in the following
            string the parameter called "TESTVALUE" is used twice
            
            "Enter the test @@TESTVALUE @@testvalue
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString.#ctor(System.String)">
            <summary>
            Construct with a flat string
            </summary>
            <param name="text">Paramterized string as plain text or html text.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString.#ctor(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.TestManagement.Client.ParameterizedStringPart})">
            <summary>
            Construct from Parts
            </summary>
            <param name="parts"></param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString.Count">
            <summary>
            Count of Parts
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString.Item(System.Int32)">
            <summary>
            Indexer into the list of parts
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString.ParameterNames">
            <summary>
            Returns an array of unique parameter names
            </summary>
            <returns>Array of parameter names</returns>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString.m_flowDocumentFormattedString">
            <summary>
            Flow document representation of the formatted string. 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedStringPart">
            <summary>
            Represents one part of a ParameterizedString, each part can be
            either a literal or a parameter reference. If a parameter reference,
            then it has an "IgnoreValue" property, which may be true or false
            
            Developers Note: This must be immutable
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedStringPart.#ctor(System.String)">
            <summary>
            Construct a Part which represents literal text
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.ParameterizedStringPart.#ctor(System.String,System.Boolean)">
            <summary>
            Construct a Part which represents a Parameter usage
            </summary>
            <param name="name"></param>
            <param name="ignoreValue"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.IdAndName">
            <summary>
            Represents a thin version of a test object that has only Id and Name.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IdAndName.Id">
            <summary>
            Id of a test object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.IdAndName.Name">
            <summary>
            Name of a test object.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.BuildCoverageCompat">
            <summary>
            FOR INTERNAL USE ONLY.
            This class helps in getting the Build Coverage on servers prior to TFS 2010.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal">
            <summary>
            FOR INTERNAL USE ONLY.
            Various methods used internally by Test Management.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementServerArtifact">
            <summary>
            FOR INTERNAL USE ONLY.
            The Test Management server artifact.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestResultAttachment">
            <summary>
            FOR INTERNAL USE ONLY.
            Various methods used internally by Test Management.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator">
            <summary>
            FOR INTERNAL USE ONLY.
            Implements helper methods to validate property values and set\clear errors.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.ProjectCreationHelper">
            <summary>
            FOR INTERNAL USE ONLY.
            Helper class for methods needed for Team Project creation plugin.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.PropertyOwner">
            <summary>
            FOR INTERNAL USE ONLY.
            Owner of one or more properties that can be validated.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.PropertyOwner.NotifyPropertyChanged``1(System.String,``0,``0)">
            <summary>
            Conditionally notify
            </summary>
            <typeparam name="P"></typeparam>
            <param name="property"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.PropertyOwner.NotifyPropertyChanged(System.String)">
            <summary>
            Unconditionally notify for a property
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.PropertyOwner.SetFromDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String@)">
            <summary>
            Copies a pre-defined property from the dictionary to a field and removes the dictionary entry.
            </summary>
            <param name="dict">Property dictionary to use.</param>
            <param name="propertyName">Name of the OM property.</param>
            <param name="keyName">Key value to find in the dictionary.</param>
            <param name="property">Field to contain value</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.RichTextRangeFormattingInfo">
            <summary>
            FOR INTERNAL USE ONLY.
            Utility class for capturing the rich text formatting inforamtion of a range.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.RichTextUtilities">
            <summary>
            FOR INTERNAL USE ONLY.
            Utility class used internally for managing Rich Text contained in Test Steps.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.TestManagementConstants">
            <summary>
            FOR INTERNAL USE ONLY.
            Various constants used by Test Management.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator">
            <summary>
            FOR INTERNAL USE ONLY.
            Utility methods for various validation of input parameters.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckId(System.Int32,System.String)">
            <summary>
            Check that an object id is valid (> 0)
            </summary>
            <param name="id"></param>
            <param name="argumentName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.Check(System.Boolean,System.String,System.Object[])">
            <summary>
            Arbitrary validation
            </summary>
            <param name="condition">Will throw if false</param>
            <param name="message">Format string</param>
            <param name="parameters">Parameters</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckId(System.Int32,System.String,Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator)">
            <summary>
            Inline validation method for ID properties. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckAndTrimString(System.String@,System.String,Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator,System.Int32)">
            <summary>
            Inline validation method for string properties that cannot be empty nor too long.
            This method trims the string and do comparison.
            </summary>
            <returns>True if the validation was successful and false if any portion of the validation failed.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckAndTrimString(System.String@,System.String,System.String,Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator,System.Int32)">
            <summary>
            Inline validation method for string properties that cannot be empty nor too long.
            This method trims the string and do comparison.
            </summary>
            <returns>True if the validation was successful and false if any portion of the validation failed.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckAndTrimString(System.String@,System.String,System.String,Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator,System.Int32,System.Boolean)">
            <summary>
            Inline validation method for string properties that cannot be too long. Whether it can be empty or not can be
            configured. This method trims the string and do comparison.
            </summary>
            <returns>True if the validation was successful and false if any portion of the validation failed.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckString(System.String,System.String,Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator,System.Int32)">
            <summary>
            Inline validation method for string properties that cannot be empty nor too long.
            </summary>
            <returns>True if the validation was successful and false if any portion of the validation failed.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckString(System.String,System.String,System.String,Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator,System.Int32)">
            <summary>
            Inline validation method for string properties that cannot be empty nor too long.
            </summary>
            <returns>True if the validation was successful and false if any portion of the validation failed.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckString(System.String,System.String,System.String,Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator,System.Int32,System.Boolean)">
            <summary>
            Inline validation method for string properties that cannot be too long. Whether it can be empty or not can be
            configured.
            </summary>
            <returns>True if the validation was successful and false if any portion of the validation failed.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckFileName(System.String)">
            <summary>
            Validate if the file name is proper.
            </summary>
            <param name="fileName">The name of the file to be validated.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckIds(System.Collections.Generic.IList{System.Int32},System.String)">
            <summary>
            Check that List of ids is valid (not null and each id > 0)
            </summary>
            <param name="id"></param>
            <param name="argumentName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckResultId(System.Int32,System.String)">
            <summary>
            Check that a result id is valid (>= TestCaseResult.FirstResultId)
            </summary>
            <param name="id"></param>
            <param name="argumentName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckSaved(System.Int32)">
            <summary>
            Validate that an object has been saved
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.QualifyDateTime(System.DateTime@,System.String,System.Boolean)">
            <summary>
            Forces any unspecified kind DateTime to be local time to prevent unpredictable
            behavior when passing it to the server.
            </summary>
            <param name="datetime"></param>
            <param name="memberName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckForLegalXmlCharacters(System.String)">
            <summary>
            Throws an exception if the given string is not-null and contains invalid XML characters
            </summary>
            <param name="argument">The string to check</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.PreventUpdateAfterSave(System.Int32,System.String)">
            <summary>
            Throws an exception if id is non-zero.  Used to prevent a property from
            being modified once the object is saved.
            </summary>
            <param name="id"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.PreventUpdateBeforeSave(System.Int32,System.String)">
            <summary>
            Throws an exception if id is zero.  Used to prevent a property from
            being modified before the object is saved.
            </summary>
            <param name="id"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator.CheckPlanDates(System.String,System.Boolean,Microsoft.TeamFoundation.TestManagement.Client.TestPlan)">
            <summary>
            Validation method for TestPlan Start/EndDate. This method validates:
                - Date is in correct range of sql database.
                - Start and end dates are in order.
                - Plan's passes are not out of plan's date range.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.MeasurementBlockProxyFactory">
            <summary>
            FOR INTERNAL USE ONLY.
            Factory for creating IMeasureBlockProxy.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.NullMeasurementBlockProxy">
            <summary>
            Special implementation of the IMeasurementBlockProxy that does nothing
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.BlockedPointProperties">
            <summary>
            Derived from the UpdateProperties class to hold two extra updated properties
            for TestPoint.Block() method: LastTestResultId and LastTestRunId.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.CloneOptions">
            <summary>
            Options that can be specified during a Clone operation
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOptions.CloneRequirements">
            <summary>
            If set to true requirements will be cloned
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOptions.CopyAllSuites">
            <summary>
            copy all suites from a source plan
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOptions.CopyAncestorHierarchy">
            <summary>
            copy ancestor hieracrchy
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOptions.DestinationWorkItemType">
            <summary>
            Name of the workitem type of the clone
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOptions.OverrideFieldName">
            <summary>
            The name of any Field that needs to be overridden with the supplied <cref name="OverrideFieldValue" /> 
            during Clone operation.
            You can pass the Field's ReferenceName, like System.IterationPath, or the normal name, like IterationPath
            Set null for no override
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOptions.OverrideFieldValue">
            <summary>
            The value with which the the Field specified in <cref name="OverrideFieldName" />
            needs to be overridden.
            Must be defined if <cref name="OverrideFieldName" /> is not null.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.CloneOptions.RelatedLinkComment">
            <summary>
            Comment on the link that will link the new clone  test case to the original
            Set null for no comment
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.CloneOperationState">
            <summary>
            The State of a CloneOperation
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.EnvironmentParentTypes">
            <summary>
            Types of the parent (owner) of the test environments.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ResultObjectType">
            <summary>
            The top level entity that is being cloned as part of a Clone operation
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ResultUpdateResponse">
            <summary>
            Store revision number and the ids of created attachments of a result. The 
            array of ResultUpdateResponse objects should be in respective to the array of 
            ResultUpdateRequest objects.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SkinnyPlan">
            <summary>
            Used to return query results for plans
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SuitePointCount">
            <summary>
            Represents a suite ID found from the QuerySuitePointCounts() API.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SuitePointCount.PointCount">
            <summary>
            Number of direct child points of this suite matching the
            query expression.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.SuitePointCount.SuiteId">
            <summary>
            ID of the suite.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestCaseAndOwner">
            <summary>
            Used to pass a test case ID and owner pair to the database.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCaseAndOwner.Id">
            <summary>
            ID of the test case.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.TestCaseAndOwner.Owner">
            <summary>
            Team foundation ID of the test case owner.  Used to initialize the TestPoint.AssignedTo value.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ArgumentIncorrectType">
            <summary>
              Looks up a localized string similar to Incorrect type was specified for this argument..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ArgumentLessThanZero">
            <summary>
              Looks up a localized string similar to The following argument cannot be less than zero: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ArgumentNull">
            <summary>
              Looks up a localized string similar to The following argument cannot be null: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ArgumentNullOrBlank">
            <summary>
              Looks up a localized string similar to The following argument cannot be null or empty: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ArrayLengthsMustMatch">
            <summary>
              Looks up a localized string similar to The parameters {0} and {1} must have the same length..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.AttachmentDefaultFilename">
            <summary>
              Looks up a localized string similar to Untitled.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.AttachmentDownloadError">
            <summary>
              Looks up a localized string similar to The following attachment cannot be downloaded: {0}. The following error occurred: {1}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.AttachmentDownloadNotComplete">
            <summary>
              Looks up a localized string similar to An error occurred when the following attachment for this test case  was downloaded: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.AttachmentDownloadNoUri">
            <summary>
              Looks up a localized string similar to The attachment cannot be downloaded. It has not been saved to the server..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.AttachmentFileNameError">
            <summary>
              Looks up a localized string similar to The file name {0} contains invalid characters..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.AttachmentLengthError">
            <summary>
              Looks up a localized string similar to Could not download attachments from server.  An attachment may have been deleted or changed..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.AttachmentNotFound">
            <summary>
              Looks up a localized string similar to The following attachment cannot be located: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.AttachmentUploadError">
            <summary>
              Looks up a localized string similar to The following error occurred while  uploading the attachment: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.BugFieldMappingNotFoundError">
            <summary>
              Looks up a localized string similar to The bug field mapping cannot be found for the project: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.BugFieldMappingUpdateConflict">
            <summary>
              Looks up a localized string similar to The bug field mapping has been modified by another user or session. You must reload the bug field mapping and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.BugWorkItemTypeDoesNotExist">
            <summary>
              Looks up a localized string similar to The bug type {0} is not a defined type for Bug Work Items.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotAddAction">
            <summary>
              Looks up a localized string similar to This action cannot be added, because it already has a parent. It cannot have multiple parents..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotAddCasesToRun">
            <summary>
              Looks up a localized string similar to This test run cannot be created with the test cases..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotAddPointsToRun">
            <summary>
              Looks up a localized string similar to This test run cannot be created with the test points..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotLoadTestSettingsFromFile">
            <summary>
              Looks up a localized string similar to Test settings cannot be loaded from the following file {0}. Verify that the path and the content of the file are correct..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotMoveSuiteBelowItsChildren">
            <summary>
              Looks up a localized string similar to A test suite cannot be moved to be a child of itself or a child of its children..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotResetLinkedResult">
            <summary>
              Looks up a localized string similar to Test results that are associated with work items cannot be reset..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotSetDataBoundParameterValue">
            <summary>
              Looks up a localized string similar to The data bound parameter value cannot be set..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotSetPropertyAfterCreation">
            <summary>
              Looks up a localized string similar to The following property cannot be changed after the object has been saved: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotSetPropertyBeforeCreation">
            <summary>
              Looks up a localized string similar to The following property cannot be changed before the object has been saved: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CannotSetRootSuiteName">
            <summary>
              Looks up a localized string similar to The title of a root suite is not settable because it inherits the name of the test plan..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CategoryNotFound">
            <summary>
              Looks up a localized string similar to The work item store is not configured correctly. It must have a category with reference name {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.CloneRequirementsNotSupported">
            <summary>
              Looks up a localized string similar to Cloning of requirements is not supported in the version of server being used. Please upgrade the server to latest version or remove the clonerequirements option..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DataCollectorMustExistError">
            <summary>
              Looks up a localized string similar to The diagnostic data adapter {0} has not been registered..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DataCollectorMustNotExistError">
            <summary>
              Looks up a localized string similar to The diagnostic data adapter {0} has already been registered..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DateOrderInlineValidation">
            <summary>
              Looks up a localized string similar to The start date {0} cannot occur after the end date {1}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DeepCopyAcrossProjectsNotSupportedByServer">
            <summary>
              Looks up a localized string similar to Cloning of suites across team projects is not supported in the version of server being used. Please upgrade the server to latest version..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DestinationWorkItemTypeNotSupported">
            <summary>
              Looks up a localized string similar to Destination workitem type is not supported in the version of server being used. Please upgrade the server to latest version or remove the destinationworkitemtype option..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DisposedTestEntryCollection">
            <summary>
              Looks up a localized string similar to Test suite entry collection has been disposed. Therefore, it cannot be modified..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DuplicatePivotTypeExceptionMessage">
            <summary>
              Looks up a localized string similar to Duplicate pivot type returned by server..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DynamicSuiteQueryNeeded">
            <summary>
              Looks up a localized string similar to The query-based test suite must have a valid query for test cases..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.DynamicSuiteQueryNeedsCategoryCondition">
            <summary>
              Looks up a localized string similar to The query-based test suite query must specify the test case category condition to guarantee only test cases are returned..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.EmptyFieldInlineValidation">
            <summary>
              Looks up a localized string similar to The field &apos;{0}&apos; cannot be empty..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.EmptyTestRun">
            <summary>
              Looks up a localized string similar to A test run must be created with at least one test case..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.FieldDoesNotExistInBugWorkItem">
            <summary>
              Looks up a localized string similar to The field {0} is not a defined for Bug Work Item Type {1}.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ImportEmptyTesResolutionStateXmlListError">
            <summary>
              Looks up a localized string similar to Specify at least one &apos;TestResolutionState&apos; element in the mapping file..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ImportEmptyTestFailureTypeXmlListError">
            <summary>
              Looks up a localized string similar to Specify at least one &apos;TestFailureType&apos; element in the mapping file..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidDateInlineValidation">
            <summary>
              Looks up a localized string similar to The value of field &apos;{0}&apos; must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidDateTime">
            <summary>
              Looks up a localized string similar to Date must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM. Confirm that the date is correct..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidId">
            <summary>
              Looks up a localized string similar to The following id must have a positive value: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidParameterName">
            <summary>
              Looks up a localized string similar to The parameter name is not valid. Parameter names must follow the same rules as a C# identifier or keyword..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidQuery">
            <summary>
              Looks up a localized string similar to The query string is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidStatusError">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid status of {1}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidStepType">
            <summary>
              Looks up a localized string similar to The following step type is not valid: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidTestCaseId">
            <summary>
              Looks up a localized string similar to The action cannot be performed if the test case is not specified. You must specify a test case..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidTestConfigurationId">
            <summary>
              Looks up a localized string similar to The action cannot be performed if the test configuration is not specified. You must specify a test configuration..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidTestPlanStateError">
            <summary>
              Looks up a localized string similar to {0} is not a valid test plan status. Allowed values are {1}, {2}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidTestSuiteStateError">
            <summary>
              Looks up a localized string similar to {0} is not a valid test suite status. Allowed values are {1}, {2}, {3}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidWorkItemTypeOneCategory">
            <summary>
              Looks up a localized string similar to The following work item type is not valid: {1}. You must specify a valid work item type that belongs to the category with reference name {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidWorkItemTypeTwoCategories">
            <summary>
              Looks up a localized string similar to The following work item type is not valid: {2}. You must specify a valid work item type that belongs to a category with reference name {0} or {1}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidXmlAttribute">
            <summary>
              Looks up a localized string similar to Invalid attribute in XML, {0}={1}.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.InvalidXmlCharacter">
            <summary>
              Looks up a localized string similar to Invalid character in {0}.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ListItemSeparator">
            <summary>
              Looks up a localized string similar to , .
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.MetadataFileName">
            <summary>
              Looks up a localized string similar to Metadata.xml.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.MetadataLoggingType">
            <summary>
              Looks up a localized string similar to loggingType.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.MissingWitField">
            <summary>
              Looks up a localized string similar to Work Item Category {0} is missing the following fields: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.MoveActionCannotMoveIntoSelf">
            <summary>
              Looks up a localized string similar to MoveAction cannot move a group into itself..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.MoveActionOwnersDifferent">
            <summary>
              Looks up a localized string similar to MoveAction is not valid between different owners..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.MultipleFieldOverrideNotSupportedError">
            <summary>
              Looks up a localized string similar to Overriding multiple workitem fields is not supported in the version of server being used. Please upgrade the server to latest version or override only one field..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.MultipleWitStatesMappedToSameMetaStateException">
            <summary>
              Looks up a localized string similar to Unable to determine work item state. Multiple work item states are mapped to &apos;{0}&apos; meta state in process configuration..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.MustBeSaved">
            <summary>
              Looks up a localized string similar to You must save this item before this action can be taken..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.NoTypeInCategory">
            <summary>
              Looks up a localized string similar to The work item store is not configured correctly. You must have at least one work item type in the category with reference name {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ObjectAlreadyAdded">
            <summary>
              Looks up a localized string similar to The object cannot be added to the collection because it has already been added..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ObjectDeleted">
            <summary>
              Looks up a localized string similar to The object has been deleted and cannot be used..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.OwnerRequired">
            <summary>
              Looks up a localized string similar to You must provide an owner for this test run..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.PossibleErrorSolutionText">
            <summary>
              Looks up a localized string similar to Possible solutions could be:.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.PropertyErrorString">
            <summary>
              Looks up a localized string similar to {0}: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.RegistrationError">
            <summary>
              Looks up a localized string similar to An error occurred while trying to locate the Team Foundation registration entry for {0}. For more information, contact the Team Foundation Server administrator..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ReplaceParameterWithEmptyTextErrorMessage">
            <summary>
              Looks up a localized string similar to The text to substitute in place of the parameter should not be empty.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ReplaceParameterWithInvalidTextErrorMessage">
            <summary>
              Looks up a localized string similar to The text to substitute in place of the parameter should not be another parameter.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.ResolutionStateNameIsUnique">
            <summary>
              Looks up a localized string similar to Name of Test resolution state must be unique inside the project. Remove duplicate name {0} from the resoultionstates file and try again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.RootSuiteCannotInheritConfigs">
            <summary>
              Looks up a localized string similar to You must specify default configurations for the root suite..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveBugFieldMappingError">
             <summary>
               Looks up a localized string similar to The bug field mapping cannot be saved because some properties are not valid.
            
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveDataCollectorError">
             <summary>
               Looks up a localized string similar to The diagnostic data adapter information cannot be saved because some properties are not valid.
            
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestConfigurationError">
             <summary>
               Looks up a localized string similar to The test configuration cannot be saved because some properties are not valid.
            
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestControllerError">
            <summary>
              Looks up a localized string similar to The test controller cannot be saved because its name is not set..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestEnvironmentError">
            <summary>
              Looks up a localized string similar to The test environment cannot be saved because its name is not set..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestFailureTypeError">
             <summary>
               Looks up a localized string similar to The test failure type cannot be saved because its name {0} is not valid.
            Possible errors could be:
            {1}.
             </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestPlanError">
             <summary>
               Looks up a localized string similar to The test plan cannot be saved because some properties are not valid.
            
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestResolutionStateError">
            <summary>
              Looks up a localized string similar to The test resolution state cannot be saved because its name {0} is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestSettingsError">
             <summary>
               Looks up a localized string similar to The test settings cannot be saved because some properties are not valid.
            
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestSuiteError">
             <summary>
               Looks up a localized string similar to The test suite cannot be saved because some properties are not valid.
            
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SaveTestVariableError">
             <summary>
               Looks up a localized string similar to The test variable cannot be saved because some properties are not valid.
            
            {0}.
             </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SharedStepCannotReferenceShareStep">
            <summary>
              Looks up a localized string similar to You cannot add shared steps to another set of shared steps..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SharedStepsNotFoundError">
            <summary>
              Looks up a localized string similar to The following shared steps cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.StartDateAfterEndDateError">
            <summary>
              Looks up a localized string similar to The start date {0} cannot occur after the end date {1}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.State_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.StoredQueryNotFound">
            <summary>
              Looks up a localized string similar to The stored query cannot be found. Confirm if the query still exists or has been deleted..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SuiteEntryCollectionUnsupportedOperation">
            <summary>
              Looks up a localized string similar to TestSuiteEntryCollection does not support modifying an entry..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SuiteEntryIsNotInSuite">
            <summary>
              Looks up a localized string similar to The action cannot be performed because the test suite entry cannot be found in TestSuiteEntryCollection..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.SuiteEntryMustBeUnique">
            <summary>
              Looks up a localized string similar to This item has already been added. A test suite cannot contain a duplicate test case or test suite..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TeamFoundationCache_UniqueDisplayNameFormat">
            <summary>
              Looks up a localized string similar to {0} &lt;{1}&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TeamProjectNotFoundError">
            <summary>
              Looks up a localized string similar to The following team project cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TemporaryFolderError">
            <summary>
              Looks up a localized string similar to An error occurred when you tried to create a temporary folder. Verify that there is disk space available..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestAttachmentNotFoundError">
            <summary>
              Looks up a localized string similar to The following test attachment cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestCaseNotFoundError">
            <summary>
              Looks up a localized string similar to The following test case cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestCaseRequired">
            <summary>
              Looks up a localized string similar to This operation may only be performed on test case entries..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestConfigurationNotFoundError">
            <summary>
              Looks up a localized string similar to The following test configuration cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestConfigurationUpdateConflict">
            <summary>
              Looks up a localized string similar to The test configuration has been modified by another user or session. You must reload the test configuration and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestFailureTypeEmpty">
            <summary>
              Looks up a localized string similar to The test failure type cannot be saved because its name is empty..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestFailureTypeNameIsUnique">
            <summary>
              Looks up a localized string similar to Name of test failure type must be unique inside the project. Remove duplicate name {0} from the xml file and try again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestManagementAPINotSupportedError">
            <summary>
              Looks up a localized string similar to The API or operation {0} is not supported in the version of server being used. Use matching versions of client and server..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestPlanNotFoundError">
            <summary>
              Looks up a localized string similar to The following test plan cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestPlanState_Active">
            <summary>
              Looks up a localized string similar to Active.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestPlanState_InActive">
            <summary>
              Looks up a localized string similar to Inactive.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestPlanUpdateConflict">
            <summary>
              Looks up a localized string similar to The test plan has been modified by another user or session. You must reload the test plan and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestPointNotFoundError">
            <summary>
              Looks up a localized string similar to The following test points cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestPointUpdateConflict">
            <summary>
              Looks up a localized string similar to The test points have been modified by another user or session. You must reload the test points and update them again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestResolutionStateEmpty">
            <summary>
              Looks up a localized string similar to The testResolution state cannot be saved because its name is empty..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestResultNotFoundError">
            <summary>
              Looks up a localized string similar to The test result cannot be found..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestResultUpdateConflict">
            <summary>
              Looks up a localized string similar to Test results have been modified by another user or session. You must reload the test run and update the test results again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestRunNotFoundError">
            <summary>
              Looks up a localized string similar to The following test run cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestRunUpdateConflict">
            <summary>
              Looks up a localized string similar to The test run has been modified by another user or session. You must reload the test run and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSessionNotFoundError">
            <summary>
              Looks up a localized string similar to The following session cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSessionUpdateConflict">
            <summary>
              Looks up a localized string similar to The session has been modified by another user. You must reload the session and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSettingsNotFoundError">
            <summary>
              Looks up a localized string similar to The following test settings cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSettingsUpdateConflict">
            <summary>
              Looks up a localized string similar to The test settings have been modified by another user or session. You must reload the test settings and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSuiteNotFoundError">
            <summary>
              Looks up a localized string similar to The following test suite cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSuiteState_Completed">
            <summary>
              Looks up a localized string similar to Completed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSuiteState_InPlanning">
            <summary>
              Looks up a localized string similar to In planning.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSuiteState_InProgress">
            <summary>
              Looks up a localized string similar to In progress.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestSuiteUpdateConflict">
            <summary>
              Looks up a localized string similar to The test suite has been modified by another user or session. You must reload the test suite and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestVariableAllowedValuesDuplicate">
            <summary>
              Looks up a localized string similar to The value for this test variable has already been added to the list..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestVariableAllowedValuesInvalid">
            <summary>
              Looks up a localized string similar to The test variable contains a value that is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestVariableNotFoundError">
            <summary>
              Looks up a localized string similar to The following test variable cannot be found: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TestVariableUpdateConflict">
            <summary>
              Looks up a localized string similar to The test variable has been modified by another user or session. You must reload the test variable and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.TooLongInlineValidation">
            <summary>
              Looks up a localized string similar to The length of field &apos;{0}&apos; cannot exceed {1} characters..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.UnavailableSuiteTitle">
            <summary>
              Looks up a localized string similar to &lt;unavailable&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.UnexpectedElementName">
            <summary>
              Looks up a localized string similar to Unexpected element name {0}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.UploadCannotCancelUnlessQueuedUploadingOrFailed">
            <summary>
              Looks up a localized string similar to The background uploading process cannot cancel the upload unless the current state is Queued, Uploading or Failed..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.UploadCannotPauseUnlessQueuedOrUploading">
            <summary>
              Looks up a localized string similar to The background uploading process cannot pause the upload unless the current state is Queued or Uploading..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.UploadCannotQueueUnlessPausedOrFailed">
            <summary>
              Looks up a localized string similar to The background uploading process cannot queue the upload unless the current state is Paused or Failed..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.UriMustBeAbsolute">
            <summary>
              Looks up a localized string similar to The URI {0} cannot be relative..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.VerifyTestEnvironmentControllerOwner">
            <summary>
              Looks up a localized string similar to The test environment of the test controller {0} cannot be registered or updated under the test controller {1}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.VerifyTestEnvironmentProjectOwner">
            <summary>
              Looks up a localized string similar to The test environment of the team project {0} cannot be registered or updated under the team project {1}..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.WorkItemNotSaved">
            <summary>
              Looks up a localized string similar to The work item must be saved before it can be associated or disassociated with a test result..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.WorkItemUpdateConflict">
            <summary>
              Looks up a localized string similar to The work item has been modified by another user or session. You must reload the work item and update it again..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.WorkItemValidationFailed">
            <summary>
              Looks up a localized string similar to Work item {0} is invalid and cannot be saved. Exception: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.XmlSchemaValidationFailed">
            <summary>
              Looks up a localized string similar to The XML file for the test artifacts cannot be validated against the XML schema. Verify that the file is correct..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.XmlTaskNotFound">
            <summary>
              Looks up a localized string similar to The XML file for the test artifacts cannot be validated. Verify that the XML schema exists and it contains all the test artifacts..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.XmlTestConfigurationIsDefaultInvalid">
            <summary>
              Looks up a localized string similar to A test configuration in the XML file has the following invalid value for &apos;IsDefault&apos; field: {0}. You must set the value to &apos;{1}&apos; or &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TestManagement.Client.Resources.XmlTestConfigurationStateInvalid">
            <summary>
              Looks up a localized string similar to A test configuration in the XML file has the following invalid state: {0}. You must set the state to &apos;{1}&apos; or &apos;{2}&apos;..
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestResultState">
            <summary>
            Represents the state of a test.  Tests begin life in the Pending state.
            While they are running, they are in the InProgress state.  Once they finish
            they enter one of the other states.
            </summary>
            <remarks>Copied from the unit test infrastructure.</remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestResultState.Unspecified">
            <summary>
            Only used during an update to preserve the existing value.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestResultState.Pending">
            <summary>
            Test is in the execution queue, was not started yet.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestResultState.Queued">
            <summary>
            Test has been queued. This is applicable when a test case is queued
            for execution
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestResultState.InProgress">
            <summary>
            Test is currently executing.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestResultState.Paused">
            <summary>
            Test has been paused. This is applicable when a test case is paused
            by the user (For e.g. Manual Tester can pause the execution of the 
            manual test case)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestResultState.Completed">
            <summary>
            Test has completed, but there is no quantative measure of completeness.
            This may apply to load tests.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome">
            <summary>
            Represents the outcome of a completed test.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Unspecified">
            <summary>
            Only used during an update to preserve the existing value.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.None">
            <summary>
            Test has not been completed, or the test type does not report
            pass/failure.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Passed">
            <summary>
            Test was executed w/o any issues.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Failed">
            <summary>
            Test was executed, but there were issues.
            Issues may involve exceptions or failed assertions.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Inconclusive">
            <summary>
            Test has completed, but we can't say if it passed or failed.
            May be used for aborted tests...
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Timeout">
            <summary>
            The test timed out
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Aborted">
            <summary>
            Test was aborted. 
            This was not caused by a user gesture, but rather by a framework decision.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Blocked">
            <summary>
            Test had it chance for been executed but was not, as ITestElement.IsRunnable == false.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.NotExecuted">
            <summary>
            Test was not executed. 
            This was caused by a user gesture - e.g. user hit stop button.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Warning">
            <summary>
            To be used by Run level results.
            This is not a failure.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Error">
            <summary>
            There was a system error while we were trying to execute a test.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.NotApplicable">
            <summary>
            Test is Not Applicable for execution.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.Paused">
            <summary>
            Test is paused.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestOutcome.InProgress">
            <summary>
            Test is currently executing. Added this for TCM charts
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestRunState">
            <summary>
            Describes the status of a test run.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunState.Unspecified">
            <summary>
            Only used during an update to preserve the existing value.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunState.NotStarted">
            <summary>
            The run is still being created.  No tests have started yet.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunState.InProgress">
            <summary>
            Tests are running.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunState.Completed">
            <summary>
            All tests have completed or been skipped.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunState.Aborted">
            <summary>
            Run is stopped and remaing tests have been aborted
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunState.Waiting">
            <summary>
            Run is currently initializing
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunState.NeedsInvestigation">
            <summary>
            Run requires investigation because of a test point failure
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.PostProcessState">
            <summary>
            Represents the state of any post processing that
            happens on the server, such as code coverage analysis
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.PostProcessState.Pending">
            <summary>
            There is post processing that has not been started.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.PostProcessState.InProgress">
            <summary>
            Post processing has been started but not finished.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.PostProcessState.Complete">
            <summary>
            All post processing is completed (or none was required).
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.PostProcessState.Upgrade">
            <summary>
            Post processing for upgrading from Orcas test results.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.UploadPauseReason">
            <summary>
            Sub-states for background uploading when paused
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.UploadState">
            <summary>
            Background attachment upload states 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationState">
            <summary>
            Represents the state of an ITestConfiguration object.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationState.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationState.Active">
            <summary>
            The configuration can be used for new test runs.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationState.Inactive">
            <summary>
            The configuration has been retired and should not be used for new test runs.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SourceFileAction">
            <summary>
            Represents actions on deleting an attachment after being uploaded.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.DeleteAction">
            <summary>
            Represents actions on deleting test objects
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestPointState">
            <summary>
            Represents the state of a test point.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointState.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointState.Ready">
            <summary>
            The test point needs to be executed in order for the test pass to be
            considered complete.  Either the test has not been run before or the 
            previous run failed.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointState.Completed">
            <summary>
            The test has passed successfully and does not need to be re-run for the test
            pass to be considered complete.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointState.NotReady">
            <summary>
            The test point needs to be executed but is not able to.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestPointState.InProgress">
            <summary>
            The test is being executed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntryType">
            <summary>
            Used to distinguish TestSuiteEntry objects without having to cast
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteType">
            <summary>
            Used to distinguish TestSuite objects without having to cast
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestSuiteState">
            <summary>
            Represents whether or not the test cases in this suite are done
            being planned.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestObjectId">
            <summary>
            Reserved object ids, new objects use None, deleted objects use Deleted 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.CloneItemType">
            <summary>
            Corresponds to ItemType column in tbl_CloneOperation
            </summary>
            <summary>
            Different categories of work items that can be cloned
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.CoverageState">
            <summary>
            Represents the current state of a set of code coverage data.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.CoverageState.Completed">
            <summary>
            Coverage data is up to date.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.CoverageState.Pending">
            <summary>
            Coverage data is out of date.  CoverAn is in the process of updating this data.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.CoverageQueryFlags">
            <summary>
            Used to choose which coverage data is returned by a QueryXXXCoverage() call.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.CoverageQueryFlags.Modules">
            <summary>
            If set, the Coverage.Modules property will be populated.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.CoverageQueryFlags.Functions">
            <summary>
            If set, the ModuleCoverage.Functions properties will be populated.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.CoverageQueryFlags.BlockData">
            <summary>
            If set, the ModuleCoverage.CoverageData field will be populated.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestMessageLogEntryLevel">
            <summary>
            Indicates the level of the log entry in the test message log.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestRunType">
            <summary>
            The types for test run. 
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunType.Unspecified">
            <summary>
            Only used during an update to preserve the existing value.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunType.Normal">
            <summary>
            Normal test run.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunType.Blocking">
            <summary>
            Test run created for the blocked result when a test point is blocked.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunType.Web">
            <summary>
            Test run created from Web.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunType.MtrRunInitiatedFromWeb">
            <summary>
            Run initiated from web through MTR
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunType.RunWithDtlEnv">
            <summary>
            These test run would require DTL environment. 
            These could be either of automated or manual test run.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestRunAbortOptions">
            <summary>
            Options for ITestRun.Abort().
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunAbortOptions.None">
            <summary>
            Default behavior.  Unexecute tests are marked as Aborted.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.TestRunAbortOptions.DeleteUnexecutedResults">
            <summary>
            Deletes all results for tests that have not completed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.GeneratedBugFields">
            <summary>
            Bug fields automatically generated during a manual test run
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.GeneratedBugFields.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.GeneratedBugFields.ReproSteps">
            <summary>
            Steps to reproduce the error
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.GeneratedBugFields.SystemInfo">
            <summary>
            Information about the system where the bug occurred
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.GeneratedBugFields.BuildFoundIn">
            <summary>
            The build in which the bug was found
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.ServerVersion">
            <summary>
            The version of TFS server to which the client is connected
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.ServerVersion.VisualStudio2010">
            <summary>
            Visual Studio 2010 TFS Server
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.ServerVersion.VisualStudio2010SP1">
            <summary>
            Visual Studio 2010 TFS server with SP1
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.ServerVersion.VisualStudio2012">
            <summary>
            Visual Studio 2012 TFS
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.ServerVersion.VisualStudio2012QU1">
            <summary>
            Visual Studio 2012 QU1 TFS
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.ServerVersion.VisualStudio2012QU2">
            <summary>
            Visual Studio 2012 QU2 TFS
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.ServerVersion.VisualStudio2013QU1">
            <summary>
            Visual Studio TFS 2013 QU1
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestManagementServiceVersion">
            <summary>
            Enum to expose the test management service version.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.SessionState">
            <summary>
            Describes the status of a session.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.SessionState.Unspecified">
            <summary>
            Only used during an update to preserve the existing value.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.SessionState.NotStarted">
            <summary>
            The session is still being created. 
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.SessionState.InProgress">
            <summary>
            The session is running.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.SessionState.Paused">
            <summary>
            The session has paused.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.Client.SessionState.Completed">
            <summary>
            The session has completed.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.Client.TestPointStatisticsQueryPivotType">
            <summary>
            Types of the Pivots used for QueryTestPointStatisticsByPivot.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.AttachmentUploadFields">
            <summary>
            Names of MIME fields used to pass attachment metadata.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.RevisionNumber">
            <summary>
            Special values for the Revision property
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.RevisionNumber.NoUpdate">
            <summary>
            Returned by the server's when only result's attachments are created 
            and no result update occurred.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.RevisionNumber.Conflict">
            <summary>
            Returned by the server's Update call when someone has already updated the
            object.  Indicates the update did not succeed.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.RevisionNumber.DoNotCheck">
            <summary>
            Passed in an TestCaseResult update when the caller does not want to check whether 
            or not someone has already modified the object.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TestManagement.RevisionNumber.StartingRevision">
            <summary>
            The starting value of resvision that a newly created object has.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.MaxLength">
            <summary>
            Specifies the maximum length of the string properties.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TestManagement.TfsServiceNames">
            <summary>
            These are the names we use to register our web services with
            TFS registration.  They should match the names in Registration.xml
            </summary>
        </member>
    </members>
</doc>
