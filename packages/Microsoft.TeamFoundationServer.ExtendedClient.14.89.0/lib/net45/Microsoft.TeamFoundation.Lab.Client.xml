<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.TeamFoundation.Lab.Client</name>
    </assembly>
    <members>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.DeploymentTask">
            <summary>
            Deployment task implementation
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.BuildLocation">
            <summary>
            Gets or sets the Build Location
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.BuildUri">
            <summary>
            Gets or sets the Build Uri
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.BuildInformationNodeId">
            <summary>
            Gets or sets the Build Information Node
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.LabSystemId">
            <summary>
            Gets or sets the Labsystem Identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.ScriptArguments">
            <summary>
            Gets or sets the Script Arguments
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.ScriptToExecute">
            <summary>
            Gets or sets the script to execute
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.WorkingDirectory">
            <summary>
            Gets or sets the working directory
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.MaxDeploymentWaitTime">
            <summary>
            Gets or sets the maximum wait time for the deployment task
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.DeploymentTaskId">
            <summary>
            Deployment task identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.CreationDate">
            <summary>
            Creation date of the task
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.Status">
            <summary>
            Gets the status of the deployment task
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.CreateDeploymentTask(Microsoft.TeamFoundation.Lab.Client.IDeploymentTask)">
            <summary>
            Helper to create a deployment task
            </summary>
            <param name="task">New deployment task instance</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.DeploymentTask.ToXml(Microsoft.TeamFoundation.Lab.Client.IDeploymentTask,System.Xml.XmlWriter,System.String)">
            <summary>
            Helper function to convert the deployment task to xml
            </summary>
            <param name="task">Deployment task object</param>
            <param name="writer">Target to write the xml content to</param>
            <param name="element">Name of the element</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTask">
            <summary>
            Deployment task implementation
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTask.RMDeploymentTaskId">
            <summary>
            Gets or sets the RMDeploymentTaskId
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTask.LabEnvironmentId">
            <summary>
            Gets or sets the LabEnvironmentId
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTask.DeploymentProviderType">
            <summary>
            Gets or sets the DeploymentProviderType
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTask.BuildPath">
            <summary>
            Gets or sets the Build Path
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTask.ConfigPath">
            <summary>
            Gets or sets the Config Path
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTask.ScriptPath">
            <summary>
            Gets or sets the Script Path
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLogLevel">
            <summary>
            Deploymen task log levels
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLogLevel.Verbose">
            <summary>
            Verbose
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLogLevel.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLogLevel.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLogLevel.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog">
            <summary>
            Deployment task log
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog.RMDeploymentTaskId">
            <summary>
            Gets or sets the RMDeploymentTaskId
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog.TimeStamp">
            <summary>
            Gets or sets the LabEnvironmentId
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog.Level">
            <summary>
            Gets or sets the log level
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog.Component">
            <summary>
            Gets or sets the logging component
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog.Message">
            <summary>
            Gets or sets the log message
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog.LogsArrayToXml(System.Collections.Generic.List{Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog},System.Xml.XmlWriter,System.String)" -->
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminServiceProxy.GetService(System.Type)">
            <summary>
            Method which allows the deserialization logic in the automatically generated proxy
            to automatically assign the LabService object to types as they are deserialized.
            </summary>
            <param name="t">The type of lab service to retrieve</param>
            <returns>An ITeamFoundationServerObject which implements the requested type</returns>
            <exception cref="T:System.NotSupportedException" />
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAdminServiceProxy.SoapNamespaceUrl">
            <summary>
            Gets the soap namespace for this service
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAdminServiceProxy.ServiceType">
            <summary>
            Gets the service name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAdminServiceProxy.CollectionServiceIdentifier">
            <summary>
            Gets the collection service identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAdminServiceProxy.ComponentName">
            <summary>
            Gets the component name for this service
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkServiceProxy.GetService(System.Type)">
            <summary>
            Method which allows the deserialization logic in the automatically generated proxy
            to automatically assign the LabService object to types as they are deserialized.
            </summary>
            <param name="t">The type of lab service to retrieve</param>
            <returns>An ITeamFoundationServerObject which implements the requested type</returns>
            <exception cref="T:System.NotSupportedException" />
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabFrameworkServiceProxy.SoapNamespaceUrl">
            <summary>
            Gets the soap namespace for this service
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabFrameworkServiceProxy.ServiceType">
            <summary>
            Gets the service name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabFrameworkServiceProxy.ConfigurationServiceIdentifier">
            <summary>
            Gets the configuration service identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabFrameworkServiceProxy.ComponentName">
            <summary>
            Gets the component name for this service
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.CreateDeploymentTask">
            <summary>
            Creates an empty deployment task
            </summary>
            <returns>Deployment Task created</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.QueueDeploymentTask(Microsoft.TeamFoundation.Lab.Client.IDeploymentTask)">
            <summary>
            Queues a deployment task using the specified information
            </summary>
            <param name="task">Deployment Task</param>
            <returns>DeploymentId of the task queued</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.DeleteDeploymentTask(System.Int64)">
            <summary>
            Deletes the specified deployment task
            </summary>
            <param name="deploymentTaskId">DeploymentTask Id</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.QueryDeploymentTask(System.Int64)">
            <summary>
            Queries the specified deployment task
            </summary>
            <param name="deploymentTaskId">DeploymentTask Id</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.UpdateDeploymentTaskStatus(System.Int64,Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus)">
            <summary>
            Updates the status of the deployment task to the provided status
            </summary>
            <param name="deploymentTaskId">Identifier of the deployment task to be updated</param>
            <param name="newStatus">New status of the task</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.QueryLabSystemDeploymentTasks(System.Collections.Generic.IEnumerable{System.Int64},System.String)">
            <summary>
            Queries the deployment tasks assigned to the specified Ids whose test controller name matches testControllerName
            </summary>
            <param name="deploymentTaskId">List of lab system Ids</param>
            <param name="testControllerName">Test controller name of the lab systems.</param>
            <returns>List of queued tasks</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.QueryRMDeploymentTaskForEnvironment(System.Uri)">
            <summary>
            Queries the RM deployment task for specified environment
            </summary>
            <param name="environmentUri">Environment Uri</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.QueryRMDeploymentTask(System.Int64)">
            <summary>
            Queries the specified RM deployment task
            </summary>
            <param name="deploymentTaskId">DeploymentTask Id</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.UploadRMDeploymentTaskLogs(System.Collections.Generic.List{Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog})">
            <summary>
            Uploads deployment logs
            </summary>
            <param name="rmDeploymentTaskLogs">Collection of logs across deployment tasks</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.QueryRMDeploymentTaskLogs(System.Int64)">
            <summary>
            Query deployment logs
            </summary>
            <param name="deploymentTaskId"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.SoapNamespaceUrl">
            <summary>
            Gets the soap namespace for this service
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.ServiceType">
            <summary>
            Gets the service name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.CollectionServiceIdentifier">
            <summary>
            Gets the collection service identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy.ComponentName">
            <summary>
            Gets the component name for this service
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy2010.SoapNamespaceUrl">
            <summary>
            Gets the soap namespace for this service
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy2010.ServiceType">
            <summary>
            Gets the service name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy2010.CollectionServiceIdentifier">
            <summary>
            Gets the collection service identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabServiceProxy2010.ComponentName">
            <summary>
            Gets the component name for this service
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabProxyBase">
            <summary>
            LabProxyBase serves as the base class for proxies of different kinds and versions of lab services.
            Use while implementing proxies for web services of 
                (a) different kinds: Lab service, admin service, framework service. 
                (b) differet versions: Lab service in TFS 2010, Lab service in TFS 2012
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabServiceProxyBase">
            <summary>
            LabServiceProxyBase serves as the base class for proxies of different versions of lab service,
                such as Lab/v3.0/LabService.asmx in TFS 2010, Lab/v4.0/LabService.asmx in TFS 2012.
            Use only for lab service, NOT for other kinds of web services (admin service, framework service, etc)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabServiceProxyBase.GetService(System.Type)">
            <summary>
            Method which allows the deserialization logic in the automatically generated proxy
            to automatically assign the LabService object to types as they are deserialized.
            </summary>
            <param name="t">The type of lab service to retrieve</param>
            <returns>An ITeamFoundationServerObject which implements the requested type</returns>
            <exception cref="T:System.NotSupportedException" />
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.AgentConfigurationInfo">
            <summary>
            This class is also present in MS.VS.QT.Common.dll
            ~\alm\qtools_core\Common\Registry\ConfigHelper.cs
            Any changes here should be reflected back into that dll as well
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.AgentConfigurationInfo.ReadAgentConfiguration">
            <summary>
            should never be called from within lab
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.AgentConfigurationInfo.WriteAgentConfiguration(Microsoft.TeamFoundation.Lab.Client.AgentConfigurationInfo)">
            <summary>
            should never be called from within lab
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.AMLBaseCommand">
            <summary>
            Base class for all AML related commands to be sent to RES/TAB
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.AMLInstallCommand">
            <summary>
            The install command.
            This will download and install the test agent from the test controller
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.AMLInstallCommand.#ctor">
            <summary>
            constructor for serializer only
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.AMLInstallCommand.#ctor(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            constructor
            </summary>
            <param name="testControllerUri">testcontroller to be used by res/tab</param>
            <param name="optionalCommands">tasks to be executed by this command</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.AMLConfigCommand">
            <summary>
            The Configure command
            This will configure an installed test agent
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.AMLConfigCommand.#ctor">
            <summary>
            constructor for serializer only
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.AMLConfigCommand.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            constructor
            </summary>
            <param name="testControllerUri">testcontroller to be used by res/tab</param>
            <param name="optionalCommands">tasks to be executed by this command</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.AMLValidateCommand.#ctor">
            <summary>
            constructor for serializer only
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.NativeMethods">
            <summary>
            A wrapper class for the P/Invoke methods.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.NativeMethods.#ctor">
            <summary>
            Private Constructor
            </summary>
            <remarks>
            This class is not intended for instantiation.
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer">
            <summary>
            This class and its members are reserved for internal use and are not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.#ctor(System.String,System.String,System.Security.SecureString,System.String)">
            <summary>
            Constructor for creating an AML object. This object is created to control the remote
            agent management operations on a test machine (to install/configure etc.)
            </summary>
            <param name="domainName">Domain name of the user specified in "userName".
            If the user is a local account on the target machine, then domainName should be same as the target machine name </param>
            <param name="userName">The name of the user under whose credential the remtote agent management operation is to be done.
            This user needs to be one of the administrators on the target machine specified by "machineName"</param>
            <param name="userPassword">The SecureString password of the user specfied in "userName"</param>
            <param name="machineName">The name of the machine on which remote agent management operation is to be done</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.ValidateTestMachine(System.String,Microsoft.TeamFoundation.Lab.Client.AccountInformation)">
            <summary>
            validate if the remote installation can be initiated on a remote machine
            </summary>
            <param name="machineName"></param>
            <param name="adminAccountInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.Execute">
            <summary>
            Starts the remote execution service on the target test machine with the
            given user credentials to start up the commands registered with AML.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.Validate">
            <summary>
            Validates whether the command execution on the target machine with the
            given user credentials will be successful or not. It checks for any
            pre-conditions (like machine reachability, proper user credentials,
            admin right etc.) for actual command execution.
            </summary>
            <returns>It returns the agentconfiguration for the test machine if an agent is already
            registered for the target test machine, else returns null</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.Commands">
            <summary>
            List of commands to be issued to the target test machine.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.StartTab">
            <summary>
            Function for execution of tab service on remotre computer machine.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.ValidateTestAgent">
            <summary>
            Function called while validating test agent machine. Check for lock file and parses test agent configuration file.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.Ping(System.String,System.Boolean)">
            <summary>
            Ping a ip address or remote computer name.
            </summary>
            <param name="address">Ip address or remote computer name.</param>
            <param name="handleExceptions">Throws exceptions if handleExceptions is set to true.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.RemoteComputerName">
            <summary>
            Target test machine name on which remote agent management will be done
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.DomainName">
            <summary>
            Domain name of the target test machine
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.UserName">
            <summary>
            User name under whose credentials agent management tasks are to be performed.
            This user must be one of the administrators for the target test machine.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.UserPassword">
            <summary>
            Secure password of the user performing the agent management tasks.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployer.ClientOperationsDelegate">
            <summary>
            Delegate for executing different client operations. Currently supported operations are Execute and Validate.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TestAgentDeployerException">
            <summary>
            Base class for all exceptions that can occur in agent installation scenarios
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceType">
            <summary>
            An enumberation for the service types.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceStartType">
            <summary>
            An enumberation for the service start options.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceErrorControl">
            <summary>
            An enumberation for the severity of the error, and action taken, 
            if this service fails to start.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceControlAccessRights">
            <summary>
            An enumeration for the access rights.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceControlType">
            <summary>
            An enumeration for the control codes.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.WindowsServiceState">
            <summary>
            An enumeration for the service states.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceAcceptedControl">
            <summary>
            An enumeration for the control codes the service accepts and processes.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceError">
            <summary>
            An enumeration for the service error codes that we are interested.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceConfig">
            <summary>
            An enumeration for the information level for optional service configuration parameters.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.LogonType.LOGON32_LOGON_INTERACTIVE">
            <summary>
            This logon type is intended for users who will be interactively using the computer, such as a user being logged on  
            by a terminal server, remote shell, or similar process.
            This logon type has the additional expense of caching logon information for disconnected operations; 
            therefore, it is inappropriate for some client/server applications,
            such as a mail server.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.LogonType.LOGON32_LOGON_NETWORK">
            <summary>
            This logon type is intended for high performance servers to authenticate plaintext passwords.
            The LogonUser function does not cache credentials for this logon type.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.LogonType.LOGON32_LOGON_BATCH">
            <summary>
            This logon type is intended for batch servers, where processes may be executing on behalf of a user without 
            their direct intervention. This type is also for higher performance servers that process many plaintext
            authentication attempts at a time, such as mail or Web servers. 
            The LogonUser function does not cache credentials for this logon type.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.LogonType.LOGON32_LOGON_SERVICE">
            <summary>
            Indicates a service-type logon. The account provided must have the service privilege enabled. 
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.LogonType.LOGON32_LOGON_UNLOCK">
            <summary>
            This logon type is for GINA DLLs that log on users who will be interactively using the computer. 
            This logon type can generate a unique audit record that shows when the workstation was unlocked. 
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.LogonType.LOGON32_LOGON_NETWORK_CLEARTEXT">
            <summary>
            This logon type preserves the name and password in the authentication package, which allows the server to make 
            connections to other network servers while impersonating the client. A server can accept plaintext credentials 
            from a client, call LogonUser, verify that the user can access the system across the network, and still 
            communicate with other servers.
            NOTE: Windows NT:  This value is not supported. 
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.LogonType.LOGON32_LOGON_NEW_CREDENTIALS">
            <summary>
            This logon type allows the caller to clone its current token and specify new credentials for outbound connections.
            The new logon session has the same local identifier but uses different credentials for other network connections. 
            NOTE: This logon type is supported only by the LOGON32_PROVIDER_WINNT50 logon provider.
            NOTE: Windows NT:  This value is not supported. 
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.LogonProvider.LOGON32_PROVIDER_DEFAULT">
            <summary>
            Use the standard logon provider for the system. 
            The default security provider is negotiate, unless you pass NULL for the domain name and the user name 
            is not in UPN format. In this case, the default provider is NTLM. 
            NOTE: Windows 2000/NT:   The default security provider is NTLM.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceStatus">
            <summary>
            A struct that contains information about a service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.ServiceStatus.ToString">
            <summary>
            Provides detail info about the ServiceStatus type
            </summary>
            <returns>a string showing detail info.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ServiceDescription">
            <summary>
            A struct that contains information about a service description.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.Win32Scm">
            <summary>
            A wrapper class for the Windows SCM APIs.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Win32Scm.#ctor">
            <summary>
            Private Constructor
            </summary>
            <remarks>
            This class is not intended for instantiation.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Win32Scm.ChangeServiceConfig2(System.IntPtr,Microsoft.TeamFoundation.Lab.Client.ServiceConfig,Microsoft.TeamFoundation.Lab.Client.ServiceDelayStartInfo)">
            <summary>
            change the service to automatic (delay started)
            </summary>
            <param name="hService"></param>
            <param name="infoLevel"></param>
            <param name="dinfo"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Helper.LabServerExceptionFromXml(System.Xml.XmlReader)">
            <summary>
            Method to extract LabServerException from XmlReader.
            </summary>
            <param name="reader">XmlReader from which LabServerException will be fetched</param>
            <returns>LabServerException</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Helper.IPAddressFromString(System.String)">
            <summary>
            Converts "." separated IPv4 IPAddress string to host byte order int format.
            </summary>
            <param name="ipAddress">"." separated IPv4 Address string</param>
            <returns>host byte ordered integer address</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.MessageType">
            <summary>
            Type of message 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.CapabilityState">
            <summary>
            Specifies the capability states of a lab environment
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSystemCapabilityState">
            <summary>
            Specifies the capability states of a labsystem
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.StatusMessage">
            <summary>
            Describes a message associated with the capability status. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.TeamFoundation.Lab.Client.StatusMessage"/> with an empty message
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.TeamFoundation.Lab.Client.StatusMessage"/> with a specified message and with message type as error 
            </summary>
            <param name="message">the message that describes the status of capability</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.#ctor(System.String,Microsoft.TeamFoundation.Lab.Client.MessageType)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.TeamFoundation.Lab.Client.StatusMessage"/> with a specified message and a specific message type
            </summary>
            <param name="message">the message that describes the status of capability</param>
            <param name="type" cref="T:Microsoft.TeamFoundation.Lab.Client.MessageType">the type of message</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.StatusMessage.Message">
            <summary>
            Gets the message that describes the status of capability
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.StatusMessage.Type">
            <summary>
            Gets the type of message 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.ToString">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.Equals(System.Object)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.GetHashCode">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.op_Equality(Microsoft.TeamFoundation.Lab.Client.StatusMessage,Microsoft.TeamFoundation.Lab.Client.StatusMessage)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.op_Inequality(Microsoft.TeamFoundation.Lab.Client.StatusMessage,Microsoft.TeamFoundation.Lab.Client.StatusMessage)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.op_LessThan(Microsoft.TeamFoundation.Lab.Client.StatusMessage,Microsoft.TeamFoundation.Lab.Client.StatusMessage)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.op_GreaterThan(Microsoft.TeamFoundation.Lab.Client.StatusMessage,Microsoft.TeamFoundation.Lab.Client.StatusMessage)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.Equals(Microsoft.TeamFoundation.Lab.Client.StatusMessage)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.StatusMessage.CompareTo(Microsoft.TeamFoundation.Lab.Client.StatusMessage)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSystemCapabilityInformation">
            <summary>
            Describes capability information for a lab system
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemCapabilityInformation.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.TeamFoundation.Lab.Client.LabSystemCapabilityInformation"/> 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemCapabilityInformation.Status">
            <summary>
            Gets the capability state
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemCapabilityInformation.StatusMessage">
            <summary>
            Gets the message associated with the capability state. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemCapabilityInformation.LabSystemUri">
            <summary>
            Gets the Uri of the lab system
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemCapabilityInformation.ToString">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.CapabilityInformation">
            <summary>
            Describes capability information for a lab environment
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CapabilityInformation.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.TeamFoundation.Lab.Client.CapabilityInformation"/>         
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.CapabilityInformation.Status">
            <summary>
            Gets the capability state
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.CapabilityInformation.StatusMessage">
            <summary>
            Gets the status message
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.CapabilityInformation.LabSystemsCapabilityInformation">
            <summary>
            Gets the list of capability informations for each labsystem of this environment
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CapabilityInformation.ToString">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.CompatibilityStatus">
            <summary>
            Type of message 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult">
            <summary>
            Describes a message associated with the capability status. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult"/> with an empty message
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult"/> with a specified message and with message type as error 
            </summary>
            <param name="message">the message that describes the status of capability</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.#ctor(System.String,Microsoft.TeamFoundation.Lab.Client.CompatibilityStatus)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult"/> with a specified message and a specific message type
            </summary>
            <param name="message">the message that describes the status of capability</param>
            <param name="type" cref="T:Microsoft.TeamFoundation.Lab.Client.MessageType">the type of message</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.Message">
            <summary>
            Gets the message that describes the status of capability
            </summary>            
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.Status">
            <summary>
            Gets the type of message 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.ToString">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.Equals(System.Object)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.GetHashCode">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.op_Equality(Microsoft.TeamFoundation.Lab.Client.CompatibilityResult,Microsoft.TeamFoundation.Lab.Client.CompatibilityResult)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.op_Inequality(Microsoft.TeamFoundation.Lab.Client.CompatibilityResult,Microsoft.TeamFoundation.Lab.Client.CompatibilityResult)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.op_LessThan(Microsoft.TeamFoundation.Lab.Client.CompatibilityResult,Microsoft.TeamFoundation.Lab.Client.CompatibilityResult)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.op_GreaterThan(Microsoft.TeamFoundation.Lab.Client.CompatibilityResult,Microsoft.TeamFoundation.Lab.Client.CompatibilityResult)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.Equals(Microsoft.TeamFoundation.Lab.Client.CompatibilityResult)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.CompatibilityResult.CompareTo(Microsoft.TeamFoundation.Lab.Client.CompatibilityResult)">
            <summary>
            This method is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask">
            <summary>
            Defines a deployment task
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.DeploymentTaskId">
            <summary>
            Deployment task identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.LabSystemId">
            <summary>
            Lab system Identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.BuildLocation">
            <summary>
            Build location
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.BuildUri">
            <summary>
            Gets or sets the Build Uri
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.BuildInformationNodeId">
            <summary>
            Gets or sets the Build Information Node
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.ScriptToExecute">
            <summary>
            Script to be executed
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.ScriptArguments">
            <summary>
            Gets or sets the arguments to be passed to the deployment script
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.WorkingDirectory">
            <summary>
            Working directory for the deployment task execution
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.MaxDeploymentWaitTime">
            <summary>
             Maximum wait time for the deployment task
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.Status">
            <summary>
            Status of the deployment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IDeploymentTask.CreationDate">
            <summary>
            Creattion date of the task
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus">
            <summary>
            Defines the status of the deployment task
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus.Pending">
            <summary>
            The task is to be run
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus.Queued">
            <summary>
            The task is queued
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus.Running">
            <summary>
            Task is being run
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus.Cancel">
            <summary>
            The task run is to be cancelled
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus.Passed">
            <summary>
            Running of the task succeeded
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus.Failed">
            <summary>
            Running of the task failed
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus.Aborted">
            <summary>
            Task was aborted
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.IRMDeploymentTask">
            <summary>
            Defines a deployment task
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IRMDeploymentTask.RMDeploymentTaskId">
            <summary>
            RM Deployment task identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IRMDeploymentTask.LabEnvironmentId">
            <summary>
            Lab Environment Identifier
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IRMDeploymentTask.DeploymentProviderType">
            <summary>
            RM Deployment Provider Type
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IRMDeploymentTask.BuildPath">
            <summary>
            Gets or sets the Build Path
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IRMDeploymentTask.ConfigPath">
            <summary>
            Gets or sets the Config Path
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.IRMDeploymentTask.ScriptPath">
            <summary>
            Script to be executed
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.RMDeploymentProviderType">
            <summary>
            Defines the RM deployment provider types
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.RMDeploymentProviderType.PowerShell">
            <summary>
            PowerShell provider
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ErrorDetails">
            <summary>
            The message type used within capability information types.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.FailureExplanation">
            <summary>
            This class stores the failure information returned by the server. This is used to return other public messages.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.FailureExplanation.FromXml(System.Xml.XmlReader)">
            <summary>
            To read from soap response from server.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.FailureExplanation.LabServerException">
            <summary>
            Lab Server exception contained within the failure information.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.FailureExplanation.StatusMessage">
            <summary>
            Status Message contained within the failure information.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.HyperVOperationException">
            <summary>
            Thrown when any Hyper V Operations fails
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.HyperVQueryException">
            <summary>
            Thrown when any Hyper V Query fails.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.HyperVObjectNotFoundException">
            <summary>
            Thrown when any Hyper V Query fails.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.HyperVAuthorizationException">
            <summary>
            Thrown when any Hyper V Query fails.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VMDeployerObjectCreationException">
            <summary>
            Will be thrown when VMM Object could not be created.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VMDeployerObjectOperationException">
            <summary>
            Will be thrown in case of an operation could not be performed on an VMM Object.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VMDeployerObjectQueryException">
            <summary>
            Will be thrown in case the Query to get a VMM Object fails.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VMDeployerObjectStateException">
            <summary>
            Will be thrown in case VMM Object state is invalid for operation to complete.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VMDeployerObjectDeletionException">
            <summary>
            Will be thrown in case when deletion of VMM Object fails.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.IsolationSettingsInvalidException">
            <summary>
            Thrown when settings for Nw fencing is not proper.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.IsolationOperationFailedException">
            <summary>
            Thrown when some Nw fencing operation has failed.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.IsolationOperationFailedException.#ctor(System.String,System.Exception)">
            <summary>
            SQLException Factory uses this constructor to create the exception
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ExceptionConverter">
            <summary>
            This class converts Soap exception to a strongly-typed exception
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.IsolationInformation">
            <summary>
            Represents information and current status of Network isolation capability of a Lab Environment
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.IsolationInformation.#ctor">
            <summary>
            Creates an instance of the class
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationInformation">
            <summary>
            Represents information and current status of Network isolation capability of a Lab System
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationInformation.#ctor">
            <summary>
            Creates an instance of the class
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationInformation.PeersConnected">
            <summary>
            Gets the number of other Lab systems (virtual machines) within the Lab Environment that are reachable from this Lab system.
            </summary>
            <example>Say Lab environment DailyTest has 5 Lab systems. 
            Then if PeersConnected is 4, then all virtual machines are reachable. Tests can run without problems.</example>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationInformation.OSErrorCode">
            <summary>
            Gets the underlying Operating system error code, when Network isolation could not be configured succesfully.
            It is set to zero if there are no errors.
            </summary>
            <remarks>This error code could be a Win32 error code, or a WMI error code. 
            This can be used for diagnosing the root cause of failures. </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationInformation.FenceAgentVersion">
            <summary>
            This property is reserved for internal use and are not intended to be used in your code.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationInformation.ExternalIP">
            <summary>
            Gets the IP address of the Lab system with which it can be reached from any machine
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabClientSDKHelper">
            <summary>
            A wrapper class for the P/Invoke methods.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabClientSDKHelper.CreateConnection(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a connection to remote share
            </summary>
            <param name="remoteName">shared location</param>
            <param name="userName">full user name</param>
            <param name="userPassword">password</param>
            <param name="attempts">no of attempts before giving up</param>
            <param name="delayBetweenAttemptsInMS"> delay between attempts in mili seconds</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.Host">
            <summary>
            Represents a Virtualization Host on which virtual machines can be deployed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.Host.Name">
            <summary>
            Gets the name of the machine
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.Host.FullyQualifiedDomainName">
            <summary>
            Gets the Fully qualified domain name.
            </summary>
            <remarks>The host can be reachable over the network with the FullyQualifiedDomainName</remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.HostNetworkAdapter">
            <summary>
            Represents a Virtualization Host Network Adapter
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.HostNetworkAdapter.IPAddresses">
            <summary>
            list of all (IPv4/IPv6) addresses
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.HostNetworkAdapter.HasAssociatedVirtualNetwork">
            <summary>
            indicates whether there is any virtual network asociated with this adapter
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabAdminService">
            <summary>
            A Project Collection level TeamFoundation service that provides Lab Management functionality. 
            This is the top level object through which other Lab Management objects can be obtained.
            <example>
            This following example demonstrates how to acquire a LabAdminService starting with the TFS Project Collection name or url
            <code> 
            // C#
            TfsTeamProjectCollection tfsPc  = 
                new TfsTeamProjectCollection( TfsTeamProjectCollection.GetFullyQualifiedUriForName("http://TFS.contoso.com:8080/Collection0")) 
            LabAdminService labService = (LabAdminService) tfsPc.GetService(typeof(LabAdminService));
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAdminService.TeamProjectCollection">
            <summary>
            The TfsTeamProjectCollection object that created this service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.CreateTeamProjectCollectionLibraryShare(System.String,System.String,System.String,System.Boolean,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Create a TeamProjectCollectionLibraryShare object associated to a library share on the designated SCVMM server
            </summary>
            <param name="teamProjectCollectionLibraryShareName">name</param>
            <param name="description">description</param>
            <param name="librarySharePath">FQDN path to the library share</param>
            <param name="attachByDefault">should this object be automatically provisioned for new team projects created from here on</param>
            <param name="permissions">Lab permissions to be given for this object</param>
            <returns>a TeamProjectCollectionLibraryShare object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.DeleteTeamProjectCollectionLibraryShare(System.Uri)">
            <summary>
            Delete a TeamProjectCollectionLibraryShare object
            </summary>
            <param name="teamProjectCollectionLibraryShareUri">a TeamProjectCollectionLibraryShare uri</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.CreateTeamProjectCollectionHostGroup(System.String,System.String,System.String,System.Boolean,Microsoft.TeamFoundation.Lab.Common.LabEnvironmentPlacementPolicy,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Create a TeamProjectCollectionHostGroup object associated to a host group on the designated SCVMM server
            </summary>
            <param name="teamProjectCollectionHostGroupName">name</param>
            <param name="description">description</param>
            <param name="hostGroupPath">FQDN path to the host group</param>
            <param name="attachByDefault">should this object be automatically provisioned for new team projects created from here on</param>
            <param name="placementPolicy">type of placement policy to be used by lab during deployment</param>
            <param name="permissions">Lab permissions to be given for this object</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.CreateTeamProjectCollectionHostGroup(System.String,System.String,System.String,System.Boolean,Microsoft.TeamFoundation.Lab.Common.LabEnvironmentPlacementPolicy,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor,System.String)">
            <summary>
            Create a TeamProjectCollectionHostGroup object associated to a host group on the designated SCVMM server
            </summary>
            <param name="teamProjectCollectionHostGroupName">name</param>
            <param name="description">description</param>
            <param name="hostGroupPath">FQDN path to the host group</param>
            <param name="attachByDefault">should this object be automatically provisioned for new team projects created from here on</param>
            <param name="placementPolicy">type of placement policy to be used by lab during deployment</param>
            <param name="permissions">Lab permissions to be given for this object</param>
            <param name="dnsSuffix">a dns suffix</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.DeleteTeamProjectCollectionHostGroup(System.Uri)">
            <summary>
            Delete a TeamProjectCollectionHostGroup object
            </summary>
            <param name="teamProjectCollectionHostGroupUri">a TeamProjectCollectionHostGroup uri</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.ListAvailableLibraryShares">
            <summary>
            Returns the list of TeamProjectCollectionLibraryShares associated with this Team Project Collection
            </summary>
            <returns>a collection of TeamProjectCollectionLibraryShares</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.ListAvailableHostGroups">
            <summary>
            Returns the list of TeamProjectCollectionHostGroup associated with this Team Project Collection
            </summary>
            <returns>a collection of TeamProjectCollectionHostGroups</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.ListAvailableHosts(System.String)">
            <summary>
            Returns the list of available hosts within a given host group
            </summary>
            <param name="hostGroupPath">FQDN of a SCVMM host group</param>
            <returns>a collection of Hosts</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAdminService.VerifyHostIsConfigured(System.String,Microsoft.TeamFoundation.Lab.Common.HostConfigurationSetting)">
            <summary>
            This function is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.SnapshotChain">
             <summary>
             Defines a 'chain' of related snapshots. 
             
             Two snapshots belonging to different environments are 'related' if environments are copies of each 
             other, such that snapshot was taken on one environment and a copy of that environment is stored in library,
             and snapshot on one environment is logically same as snapshot on other one. 
             
             Each snapshot chain is uniquely identified by a 'snapshotChainId' and is different for each snapshot 
             on a 'deployed' lab enivronment. So each snapshot chain can have only one deployed 'snapshot' and can have 
             many 'stored' snapshots. 
            
             <example>
             The following example talks about steps which can lead to the creation of snapshot chain. 
             
             1. You have a lab environment named 'FooBarApplication'. 
             2. While testing 'FooBar' application on this environment, you found a issue in your application. You took a snapshot 
                named 'P0Bug_Foo_connecting_to_Bar1_instead_of_bar' and  logged a bug.
             3. You tested for a while and after completion of your testing, you saved a copy of 'FooBarApplication' 
                 environment named 'FooBarApplicationCopy' in the library. 
                 
             Now let us understand how a snapshot chain is created with the above steps. 
             
             a) At step 2, you had created a snapshot which is essentially a snapshot chain containing only this snapshot. 
             b) At step 3, the environment copy 'FooBarApplicationCopy' also has a copy of snapshot 
                'P0Bug_Foo_connecting_to_Bar1_instead_of_bar' which is logically same as the one on deployed environment. So 
                 now the snapshot chain contains 2 snapshots, one containing on 'deployed' snapshot and other 'stored' snapshot. 
             </example>
             
             Even though the snapshot chain may have more than one stored snapshots but only one of them is exposed which is 
             typically the first related snapshot that is found in valid state. 
             
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.SnapshotChain.#ctor">
            <summary>
            Initializes a snapshot object
            </summary>      
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.SnapshotChain.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a snapshot object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.SnapshotChain.ForwardLinkId">
            <summary>
            Gets the snapshot chain id for the snapshot chain
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.SnapshotChain.ActiveLabEnvironmentId">
            <summary>
            Gets the environmentId of the active environment.
            
            If that environment no longer exists, then it return null. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.SnapshotChain.ActiveCheckpointId">
            <summary>
            Gets the snapshotId on the active environment.
            
            If the snapshot no longer exists, then it return null.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.SnapshotChain.StoredLabEnvironmentId">
            <summary>
            Gets the environmentId on the stored environment.
            
            If no stored environment exists corresponding to this snapshot chain, then it returns null.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.SnapshotChain.StoredCheckpointId">
            <summary>
            Gets the snapshotId on the stored environment.
            
            If no stored snapshot exists corresponding to this snapshot chain, then it returns null.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentState">
            <summary>
            Different states of the lab environment. The state of a lab environment is mostly deduced from
            the states of its constituent lab systems. If all the lab systems are in consistent stable state,
            lab environment state matches that state, otherwise, it is Mixed or Failed. When an operation
            is in progress on the environment, lab environment is in transitioning state, which indicates
            the ongoing operation.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironment">
            <summary>
            A lab environment is an assembly of lab systems which are operated as a unit by the Lab.
            Variety of operations like Deploy, Start, Stop, Snapshot, Delete are supported on this group.
            The collective state of included systems, is also maintained by the Lab.
            In many development [N-tier Apps] and production [Collection of Servers/Clients] scenarios,
            this grouping should add value.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.#ctor">
            <summary>
            A private constructor for lab environment, which is used only while deserializing the object
            from [lab service] web proxy. It does a nominal initialization, and it is expected that the
            deserialization routine [FromXml] will populate meaningful values obtained from the server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.TestControllerName">
            <summary>
            Name of the test controller this environment will use for testing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.LabProvider">
            <summary>
            Provider type of the test machines in this environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.InUseCount">
            <summary>
            When a lab environment is being used [mostly copied or being read] by a lab operation,
            this count indicates such uses of it. The count of zero indicates that this environment
            is not being used in such a manner.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.StatusInfo">
            <summary>
            The status information about the state and operation details on the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.LabLocationUri">
            <summary>
            The Uri of the location where this lab environment is located.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.ProjectName">
            <summary>
            Name of the project to which theis lab environment belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.LabOperation">
            <summary>
            The details about the ongoing or last operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.LabSystems">
            <summary>
            Lab systems which are part of the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.CustomProperties">
            <summary>
            Custom properties on the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.Disposition">
            <summary>
            Disposition [Active or Stored] state of the lab environment. This is an immutable property
            of the lab environment, as movement from Library to Hosts is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.RequiresIsolation">
            <summary>
            Indicates if network isolation would be configured in this lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.CodedUIRole">
            <summary>
            Indicates the role which should be configured for CodedUI testing
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.CodedUIUserName">
            <summary>
            Indicates the role which should be configured for CodedUI testing under this user
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.InUseMarker">
            <summary>
            The marker indicating if the lab environment is "in use".
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.LastAccessedTime">
            <summary>
            The last time this lab environment was accessed, that is, either modified, marked
            for use, or copied from.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.IsComposed">
            <summary>
            True if LabEnvironment was created out of VMs not present in Lab.
            By not present in Lab, we mean that these VMs were not LabSystems or LabTempaltes
            when they were used in the creation of this LabEnvironment
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.ReservedByBuild">
            <summary>
            If the environment has been reserved for deployment, the Uri of the build which has reserved the environment.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.GetEnumerator">
            <summary>
            Retrieves an object that can iterate through the individual lab systems in this lab environment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.CloneAndDeploy(System.Uri,System.String,System.String,System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Creates a clone of this environment, which should be Stored to library
            and deploys the clone to a host group.
            The lab server validates if there are enough resources available before scheduling a background
            operation to perform the clone and deploy.
            </summary>
            <param name="teamProjectHostGroup">The Uri of the host group location where the
            clone copy of the lab environment is to be deployed.
            </param>
            <param name="name">Name to be given to cloned environment.</param>
            <param name="description">Description to be given to the cloned environment.</param>
            <param name="createdBy">The owner of the cloned environment.</param>
            <param name="permissions">Permissions to be provisioned for the cloned environment.</param>
            <returns>The new lab environment object, which will be in Creating state. This object also
            has the handle to the on going lab operation, which can be used to track operation progress.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.CloneDeployAndRestoreLabEnvironmentSnapshot(System.Uri,System.String,System.String,System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor,System.Int64)">
            <summary>
            Creates a clone of this environment, deploys it to a host group and then restores it to a
            specified snapshot.
            The current environment must be an environment Stored to library.
            The lab server validates if there are enough resources available before scheduling a background
            operation to perform the clone and deploy.
            </summary>
            <param name="teamProjectHostGroup">The Uri of the host group location where the
            clone copy of the lab environment is to be deployed.
            </param>
            <param name="name">Name to be given to cloned environment.</param>
            <param name="description">Description to be given to the cloned environment.</param>
            <param name="createdBy">The owner of the cloned environment.</param>
            <param name="permissions">Permissions to be provisioned for the cloned environment.</param>
            <param name="snapshotId">The identifier of the snapshot,
            to which to restore the new environment to.</param>
            <returns>The new lab environment object, which will be in Creating state. This object also
            has the handle to the on going lab operation, which can be used to track operation progress.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.Start">
            <summary>
            Start the lab environment in background.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.Repair">
            <summary>
            Starts the repair operation in background.
            If the environment is not virtual, this operation will not have any effect.
            If the environment is virtual, then Hyper-V KVP mechanism will be used to repair the environment.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.Repair(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Lab.Client.LabSystem})">
            <summary>
            Starts the repair operation in background.
            </summary>
            <param name="needAgentInstallation">lab systems on which external repair is being performed. 
            Team Foundation Server will wait for the external operation to complete on these lab systems.
            If the environment is virtual, KVP driven repair will be performed on the rest of the lab systems.</param> 
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.Stop">
            <summary>
            Stop the lab environment in background.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.Shutdown">
            <summary>
            Shutdown the lab environment in background.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.Pause">
            <summary>
            Pause the lab environment in background.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.CloneAndStore(System.String,System.String,System.Uri,System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Creates a clone of this environment, which should be an Active environment on the host group
            and stores it to a specified library share.
            </summary>
            <param name="name">Name to be given to a cloned environment.</param>
            <param name="description">Description to be given to a cloned environment.</param>
            <param name="libLocationUri">Location Uri of the library share to which cloned environment
            is to be stored.</param>
            <param name="createdBy">The owner of the cloned environment.</param>
            <param name="permissions">Permissions to be provisioned for the cloned environment.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.Destroy">
            <summary>
            Deletes the lab environment in background.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.QueryLabEnvironmentSnapshots">
            <summary>
            Queries the snapshots available on this lab environment.
            </summary>
            <returns>The list of snapshots.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.CreateLabEnvironmentSnapshot(System.String,System.String)">
            <summary>
            Creates a new snapshot on the lab environment. The snapshot creation is scheduled as a
            background operation.
            </summary>
            <param name="name">The name to be given to new snapshot.</param>
            <param name="description">The description to be given to new snapshot.</param>
            <returns>The new snapshot object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.GetLabEnvironmentSnapshot(System.Int64)">
            <summary>
            Get a specific snapshot on the lab environment.
            </summary>
            <param name="snapshotId">The identifier of the snapshot on this lab environment.</param>
            <returns>The snapshot object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.UpdateLabEnvironmentSnapshot(System.Int64,System.String,System.String)">
            <summary>
            Update the properties of the lab environment snapshot.
            </summary>
            <param name="snapshotId">The identifier of the snapshot on this lab environment.</param>
            <param name="newName">The new name to be given to the snapshot.</param>
            <param name="newDescription">The new description to be given to the snapshot.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.RestoreLabEnvironmentSnapshot(System.Int64)">
            <summary>
            Restore the lab environment to the specified snapshot, in the background.
            </summary>
            <param name="snapshotId">The identifier of the snapshot on this lab environment.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.DeleteLabEnvironmentSnapshot(System.Int64)">
            <summary>
            Delete the specified snapshot on the lab environment, in the background.
            </summary>
            <param name="snapshotId">The identifier of the snapshot on this lab environment.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.CancelCurrentOperation">
            <summary>
            Attempt to cancel the currently running background operation on the lab environment.
            Only the environment creation operation can be canceled. Note that there are multiple ways an
            environment can be created. In any case, the environment must be in "Creating" state for
            the cancel to be accepted. It is also possible that environment creation has gone past the
            point of "no return", in which case, the request to cancel is silently ignored.
            Once accepted, the cancel will attempt to rollback the environment creation, that is,
            the partially created lab environment will be removed from Lab.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.RetryLastFailedOperation">
            <summary>
            Attempts to continue the last failed operation on the lab environment. The retry is allowed
            only if the failed operation was the most recent operation on this environment and the
            failed operation was trying to create this environment. Equivalently, the environment must
            be in CreateFailed state, for the retry to work.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.GetIsolationInformation">
            <summary>
            Retrieves the network isolation status of the lab environment. The lab environment must have
            RequiresIsolation property set to true, for this method to work.
            </summary>
            <returns>Network isolation status of the lab environment.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.RemoveInUseMarker">
            <summary>
            Remove the existing in use marker [if any] on this lab environment.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.SetInUseMarker(System.String)">
            <summary>
            Set the in user marker on this lab environment. Replaces the existing one, if any, else
            creates a new one.
            </summary>
            <param name="comment">Free-formatted string as specified by the client. It can be null.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironment.GetInUseMarker">
            <summary>
            Get the current in use marker from the lab server for this lab environment.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo">
            <summary>
            Stores the lab environment status information.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo.State">
            <summary>
            State of the lab environment object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo.Progress">
            <summary>
            The progress of the ongoing operation on the lab enviornment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo.FailureReason">
            <summary>
            The failure reason, if any, for the last failed operation on lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo.StatusMessage">
            <summary>
            Status Message associated with the object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo.LastFailure">
            <summary>
            The last operation failure exception.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo.IsTransitionState">
            <summary>
            Checks if the lab environment is in transition state. Typically, when a long running operation is
            issued on the lab environment, the lab service changes the state of lab environment from one
            stable state to another through
            an intermediate transitioning state. For example, when the lab environment, which is in Stopped
            state is started, it first goes to Starting state, and after some time, goes to Started state.
            </summary>
            <returns>True if the lab environment is in transitioning state, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo.CopyFrom(Microsoft.TeamFoundation.Lab.Client.LabEnvironmentStatusInfo)">
            <summary>
            
            </summary>
            <param name="teStatusInfo"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">thrown when value is out of required range</exception>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition">
            <summary>
            A lab environment definition object captures all the required inputs, to create a new lab environment
            from scratch. Other way to create an environment would be to clone it from an existing one.
            <see cref="M:Microsoft.TeamFoundation.Lab.Client.LabLocation.CreateLabEnvironment(Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition,System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)"/>
            to create a new lab environment using the lab environment definition.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.#ctor">
            <summary>
            Creates an empty lab environment definition object. It is expected that the required fields
            within the definition will be populated before a new lab environment is created.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.#ctor(System.String,System.String,System.Collections.Generic.List{Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition})">
            <summary>
            Creates a lab environment definition object. It is expected that the required fields
            within the definition will be populated before a new lab environment is created.
            </summary>
            <param name="name">Name to be given to new lab environment.</param>
            <param name="description">Description to be given to new lab environment.</param>
            <param name="systemDefinitions">List of lab system definitions, which are used
            to create constituent lab systems of the new lab environments.</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.TestControllerName">
            <summary>
            Test controller name to use for this environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.Name">
            <summary>
            Name to be given to new lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.Description">
            <summary>
            Description to be given to new lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.RequiresIsolation">
            <summary>
            Indicates if network isolation would be configured on new lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.CodedUIRole">
            <summary>
            Specify the role which should be configured for CodedUI testing
            The machines associated with these roles will have their agents configured as process
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.CodedUIUserName">
            <summary>
            Specify the user under which the CodedUIRole is to be configured
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.Members">
            <summary>
            List of lab system definitions, which are used to create lab systems in new lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition.CustomProperties">
            <summary>
            The set of custom properties to be applied on the new lab environment.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentInUseMarker">
            <summary>
            A lab environment can be marked by a user, as "In Use". Though this is not enforced by the lab
            service, by disallowing other users from accessing the environment, in a collaborative teams,
            can be used to avoid accidental disruption.
            The default clients for Lab do provide gestures to mark an environment, and visual clues
            indicating the environment thus marked.
            <example>
            The following example demonstrates how to mark an environment "In Use":
            <code> 
            // C#
            bool MarkLabEnvironment(LabEnvironment labEnvironment, string reason)
            {
                LabEnvironmentInUseMarker marker = labEnvironment.GetInUseMarker();
                if (marker == null)
                {
                    // No one has marked this lab environment, let me mark it
                    labEnvironment.SetInUseMarker(reason);
                }
                marker = labEnvironment.GetInUseMarker();
                return (marker == null);
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentInUseMarker.User">
            <summary>
            The user who has marked the environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentInUseMarker.Timestamp">
            <summary>
            The time at which the user marked this environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentInUseMarker.Comment">
            <summary>
            The user provided comment, associated with the marker.
            Typically the reason for marking the lab environment "In Use".
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDisposition">
            <summary>
            An 'Active' lab environment, is the environment which can have running systems, and users can connect
            and use them for deploying and testing applications. The lab environment can also be 'Stored' in a
            library in an inactive form. Based on the environment disposition, there are different actions
            which are made available. For example, active lab environments can be started, while stored ones
            cannot be. While, stored lab environments can be modified in much richer ways than the active one.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentQuerySpec">
            <summary>
            Represents a specification object for lab environment search queries from lab service.
            The fields within this object, when non-null, participate in the filter applied to selected
            lab environments. This filtering resembles where clauses in the SQL select queries.
            For specific interpretation of the values refer to individual properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentQuerySpec.Project">
            <summary>
            Matches lab environments belonging to the specified project.
            If the value is null, selects all lab environments.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentQuerySpec.TestControllerName">
            <summary>
            Matches the environments which are associated with the specified controller.
            If this value is null, which is the default, selects all the environments.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentQuerySpec.LabProvider">
            <summary>
            Matches the environments which are associated with the specified provider.
            If this value is null, which is the default, selects all the environments.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentQuerySpec.Location">
            <summary>
            If null matches all lab environments, else only those belonging to this location.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentQuerySpec.Disposition">
            <summary>
            Unknown disposition is treated as match any lab environment. Otherwise only lab environments
            matching the specified disposition type are selected.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.AddLabTemplateCommand">
            <summary>
            Add a new lab system to the lab environment.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.RemoveLabSystemCommand">
            <summary>
            Remove an existing lab system from the lab environment.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.AddLabSystemCommand">
            <summary>
            Add a labsystem to an existing lab environment
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.UpdateLabSystemCommand">
            <summary>
            Update various properties of the lab system in the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.UpdateLabSystemCommand.ConfigurationComplete">
            <summary>
            If false - then create operation waits for the configuration to complete.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack">
            <summary>
            An update pack that describes various updates that are to be applied to the lab environment.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.#ctor">
            <summary>
            Default constructor. Prepares an update pack which updates nothing in the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.Name">
            <summary>
            The new name to be given to the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.Description">
            <summary>
            The new description to be given to the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.RequiresIsolation">
            <summary>
            Indicates if network isolation would be configured on the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.CodedUIRole">
            <summary>
            The role that will be used for coded UI testing
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.CodedUIUserName">
            <summary>
            The username under which the test agent will be running for coded UI testing
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.TestControllerName">
            <summary>
            Test controller name to use for this environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.CustomPropertyUpdates">
            <summary>
            The custom property changes to be applied to the lab environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack.ListOfUpdateCommands">
            <summary>
            List of updates to be applied to lab systems within the lab environment.
            If the lab environment is stored on the library share, lab systems can be added or removed
            from the lab environment, with a condition that at least one lab system must exist in it.
            If the lab environment is located on the host group, only properties within existing
            lab systems can be modified.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService">
            <summary>
            An application level Team Foundation service that provides Lab Management functionality primarily.
            This service exposes apis that allow you to perform verification of lab objects during configuration.
            <example>
            This following example demonstrates how to acquire a LabFrameworkService starting with the TFS url
            <code> 
            // C#
            TfsConfigurationServer tfsAT  = TfsConfigurationServerFactory.GetConfigurationServer(new Uri("http://tfs.server.com:8080/tfs"));
            LabFrameworkService labFrameworkService = (LabFrameworkService) tfsAT.GetService(typeof(LabFrameworkService);
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.GetLabServiceContractVersion">
            <summary>
            Returns the contract version of the Lab Management service with client.
            </summary>
            <remarks>
            The version follows the norms associated with the System.Version class.
            This version is not derived from any application assembly, or the operating system.
            It represents the protocol contract version between Lab Management service and its clients.
            </remarks>
            <returns>Version of the Lab Management service contract.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.CheckCompatibility">
            <summary>
            Returns the result of compatibility check as determined by the server
            </summary>
            <remarks>
            The corresponding API will not be available in Dev10 server, hence we will use this fact to determine Dev10 server.
            </remarks>
            <returns>Result of compatibility check as determined by the server.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.ListAvailableLibraryShares">
            <summary>
            Returns the list of available library shares on the SCVMM server currently configured 
            for Lab Management on the Team Foundation Server.
            </summary>
            <returns>a collection of TeamProjectCollectionLibraryShare</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.ListAvailableHostGroups">
            <summary>
            Returns the list of available host groups on the SCVMM server currently configured 
            for Lab Management on the Team Foundation Server.
            </summary>
            <returns>a collection of TeamProjectCollectionHostGroup</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.ListAvailableHosts(System.String)">
            <summary>
            Returns the list of available hosts within a given host group
            </summary>
            <param name="hostGroupPath">FQDN of a SCVMM host group</param>
            <returns>a collection of Hosts</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.ListAvailableNetworkLocations(System.String)">
            <summary>
            Returns the list of valid network locations associated with a given SCVMM server
            </summary>
            <param name="serverName">FQDN of a SCVMM server</param>
            <returns>a list of NetworkLocations</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.VerifyHostIsConfigured(System.String,Microsoft.TeamFoundation.Lab.Common.HostConfigurationSetting)">
            <summary>
            This function is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.TestExternalDnsSuffix(System.String)">
            <summary>
            This function is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabFrameworkService.TestSCVMMServer(System.String,System.Boolean,System.String[])">
            <summary>
            This function is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroup">
            <summary>
            Represents a host group attached with a team foundation project collection in the Lab.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroup.Path">
            <summary>
            Gets the path of the host group in SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroup.DnsSuffix">
            <summary>
            Gets the Dns suffix that is applied to the computer names of the lab systems in this host group. This value can be over-ridden by a project when attaching the host group.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroup.SCVMMServer">
            <summary>
            Gets the name of the SCVMM server to which this host group belongs.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroup.PlacementPolicy">
            <summary>
            Gets the type of the placement policy that will be used to select host(s) when creating a new lab environment on this host group.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroup.AttachByDefault">
            <summary>
            Gets the value which indicates whether the host group should be automatically attached to the new projects in this project collection.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroup.SCVMMId">
            <summary>
            Gets the Id of the host group in the SCVMM server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroup.ConvertPlacementPolicy(System.String)">
            <summary>
            Converts the placement policy string to the correspoding enum value.
            </summary>        
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupQuerySpec">
            <summary>
            Represents a specification object for team project collection (TPC for short) host group
            search queries from lab service.
            The fields within this object, when non-null, participate in the filter applied to selected
            TPC host groups. This filtering resembles where clause in the SQL select queries.
            For specific interpretation of the values refer to individual properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupQuerySpec.Name">
            <summary>
            Matches TPC host groups matching the specified name.
            If the value is null, selects all.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupQuerySpec.Location">
            <summary>
            If null matches all TPC library shares, else only those belonging to this location.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShare">
            <summary>
            Represents a library share attached with a team foundation project collection in the Lab. A library share can contain library objects such as lab templates and stored lab environments.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShare.Path">
            <summary>
            Gets the path of the library share in SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShare.LibraryServer">
            <summary>
            Gets the name of the library server to which this library share belongs.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShare.AttachByDefault">
            <summary>
            Gets the value which indicates whether the library share should be automatically attached to the new projects in this project collection.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShare.SCVMMId">
            <summary>
             Gets the Id of the library share in the SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShare.SCVMMServer">
            <summary>
            Gets the name of the SCVMM server to which this library share belongs.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShareQuerySpec">
            <summary>
            Represents a specification object for team project collection (TPC for short) library share
            search queries from lab service.
            The fields within this object, when non-null, participate in the filter applied to selected
            TPC library shares. This filtering resembles where clause in the SQL select queries.
            For specific interpretation of the values refer to individual properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShareQuerySpec.Name">
            <summary>
            Matches TPC library shares matching the specified name.
            If the value is null, selects all.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShareQuerySpec.Location">
            <summary>
            If null matches all TPC library shares, else only those belonging to this location.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabLocation">
            <summary>
            When over-ridden in a derived class, represents a location where other entities like lab environements and lab templates could be created.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabLocation.CreateLabEnvironment(Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition,System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            When over-ridden in a derived class, creates a new lab environment in the underlying location.
            </summary>
            <param name="labEnvironmentDefinition">The definition of the new lab environment.</param>
            <param name="createdBy">The owner of the lab environment. This could be a different user than the caller of the api.</param>
            <param name="permissions">Permissions to be associated with the lab environment.</param>
            <returns>Lab environment created by this api.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabLocation.CreateLabEnvironmentFromVirtualMachines(System.String,System.String,System.Collections.Generic.List{Microsoft.TeamFoundation.Lab.Client.VirtualSystemDefinition},Microsoft.TeamFoundation.Lab.Client.PropertyDictionary,System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Create a new lab environment with given metadata and specified virtual machines.
            </summary>
            <param name="name">The name to be given to new environment.</param>
            <param name="description">The description to be given to new environment.</param>
            <param name="virtualSystemDefinitionList">The list of system definitions which wrap virtual machines.</param>
            <param name="customProperties">The custom properties to be applied to new environment.</param>
            <param name="createdBy">The owner of the lab environment. This could be a different user than the caller of the api.</param>
            <param name="permissions">Permissions to be associated with the lab environment.</param>
            <returns>Lab environment created by this api.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabLocation.GetVirtualMachine(System.Guid)">
            <summary>
            Retrieves the Virtual Machine available in SCVMM 
            </summary>
            <remarks>
            </remarks>
            <param name="vmGuid">virtual machine guid in SCVMM.</param>
            <returns>Virtual machine that can be used to create a lab template/lab system or is part of a lab template/lab system.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupUpdatePack">
            <summary>
            This object holds the the property changes to be applied to a TeamProjectCollectionHostGroup, (TPC host group).
            This mechanism of updating object proerties through an update pack, allows one to selectively update
            properties on the TPC host group, even without being aware of specific values of other properties.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupUpdatePack.#ctor">
            <summary>
            Default constructor. Prepares the pack to update nothing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupUpdatePack.AttachByDefault">
            <summary>
            The automatic provisioning strategy to be applied to the TPC host group.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupUpdatePack.PlacementPolicy">
            <summary>
            The placement policy to be applied to the TPC host group.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupUpdatePack.DnsSuffix">
            <summary>
            The DNS suffix to be applied to the TPC host group. When non-null, overrides the value specified
            at the application-tier level.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShareUpdatePack">
            <summary>
            This object holds the the property changes to be applied to a TeamProjectCollectionLibraryShare, (TPC library share).
            This mechanism of updating object proerties through an update pack, allows one to selectively update
            properties on the TPC library share, even without being aware of specific values of other properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShareUpdatePack.AttachByDefault">
            <summary>
            The automatic provisioning strategy to be applied to the TPC library share.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObject.Uri">
            <summary>
            The Uri of the lab object. This is unique in a given project collection.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObject.Name">
            <summary>
            The user provided name of the lab object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObject.Description">
            <summary>
            The user provided description of the lab object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObject.CreationTime">
            <summary>
            The time, in local time zone, at which this object was created.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObject.CreatedBy">
            <summary>
            The user who initiated the request for the lab object creation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObject.LastModificationTime">
            <summary>
            The time, in local time zone, at which this lab object was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObject.ModifiedBy">
            <summary>
            The user who last modified the lab object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObject.LabGuid">
            <summary>
            A Guid uniquely identifying the lab object.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.OperationState">
            <summary>
            Possible primary states of lab operation.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.CancelState">
            <summary>
            The "cancel" states of the lab operation.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabOperationType">
            <summary>
            Various lab operations.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabOperationStatusMessage">
            <summary>
            The lab operation status message.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabOperationStatusMessage.#ctor">
            <summary>
            Constructs an empty message object.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabOperationStatusMessage.#ctor(System.Exception)">
            <summary>
            Constructs the object using an exception.
            </summary>
            <param name="ex">The exception message is used to populate the top level message.
            The inner exception, if present, is used to populate the detailed message.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabOperation.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
            <summary>
            Method to extract LabOperation from XmlReader.
            </summary>
            <param name="reader">XmlReader from which LabOperation will be fetched</param>
            <returns>LabServerException</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabService">
            <summary>
            A Project Collection level TeamFoundation service that provides Lab Management functionality. 
            This is the top level object through which other Lab Management objects can be obtained.
            <example>
            This following example demonstrates how to acquire a LabService starting with the TFS Project Collection name or url
            <code> 
            // C#
            TfsTeamProjectCollection tfsPc  = 
                new TfsTeamProjectCollection( TfsTeamProjectCollection.GetFullyQualifiedUriForName("http://TFS.contoso.com:8080/Collection0")) 
            LabService labService = (LabService) tfsPc.GetService(typeof(LabService));
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabService.TeamProjectCollection">
            <summary>
            The Project Collection which this Lab Service instance belongs
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.IsLabConfigured(System.String)">
            <summary>
            Returns whether Lab Management is enabled for this Team Project
            </summary>
            <param name="projectName">Team Project name</param>
            <returns>true if Lab Management is enabled; false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.CreateTeamProject(System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Provisions the project for lab use. This is primarily used by the project creation wizard
            during new project creations. Unless there are lab resources (host groups and library shares)
            associated with this project, the project will remain ineffective from lab scenarios.
            </summary>
            <param name="projectName">Name of the project</param>
            <param name="permissions">Permissions to be applied</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetAvailableProviders">
            <summary>
            Gets the lab providers available on the team foundation server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.IsServerConfiguredWith2008R2(System.Boolean)">
            <summary>
            Check if Lab Management has been configured with SCVMM 2008 R2 on the Team Foundation Server
            </summary>
            <param name="refresh">true, if you want to fetch the list of providers again from the server</param>
            <returns>true, if server is configured with SCVMM 2008 R2</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetLabEnvironment(System.Uri)">
            <summary>
            Gets a Lab environment identified by its Uri
            </summary>
            <param name="labEnvironmentUri">Uri that uniquely identifies a lab environment. </param>
            <returns>a Lab environment</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetAllGuestOperatingSystems">
            <summary>
            Returns a list of operating systems that are recognized by Lab Management.
            This list can be used while specifying properties of a <see cref="T:Microsoft.TeamFoundation.Lab.Common.OSProfileDefinition"/>
            </summary>
            <returns>a list of GuestOperatingSystems</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetLabTemplate(System.Uri)">
            <summary>
            Gets a Lab template identified by its Uri
            </summary>
            <param name="labTemplateUri">Uri that uniquely identifies a lab template</param>
            <returns>a Lab template object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UpdateLabTemplate(System.Uri,Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack)">
            <summary>
            Update properties of a Lab Template
            </summary>
            <param name="labTemplateUri">a Uri that uniquely identifies a lab template.</param>
            <param name="labTemplateUpdatePack">An update pack that describes various updates that need to be done.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetTeamProjectHostGroup(System.Uri)">
            <summary>
            Gets a Host Group associated with a Team Project
            </summary>
            <remarks>
            A Host Group can be defined at a Project Collection level or at a Team Project level. 
            Use appropriate method based on what is needed.
            </remarks>
            <param name="teamProjectHostGroupUri">A Uri that uniquely identifies a host group</param>
            <returns>a Host Group object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetTeamProjectLibraryShare(System.Uri)">
            <summary>
            Gets a Library Share associated with a Team Project.
            </summary>
            <remarks>
            A Library Share can be defined at a Project Collection level or at a Team Project level 
            Use appropriate method based on what is needed.
            </remarks>
            <param name="teamProjectLibraryShareUri">A Uri that uniquely identifies the Library Share</param>
            <returns>a Library Share object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetTeamProjectCollectionLibraryShare(System.Uri)">
            <summary>
            Gets a Library Share associated with a Project Collection.
            </summary>
            <remarks>
            A Library Share can be defined at a Project Collection level or at a Team Project level
            Use appropriate method based on which one is needed.
            </remarks>
            <param name="teamProjectCollectionLibraryShareUri">A Uri that uniquly identifies the Library Share</param>
            <returns>A Library Share</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetTeamProjectCollectionHostGroup(System.Uri)">
            <summary>
            Gets a Host Group associated with a Project Collection.
            </summary>
            <remarks>
            A Host Group can be defined at a Project Collection level or at a Team Project level. 
            Use appropriate method based on what is needed.
            </remarks>
            <param name="teamProjectCollectionHostGroupUri">A Uri that uniquely identifies the Host Group</param>
            <returns>a Host Group object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UpdateLabEnvironment(System.Uri,Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack)">
            <summary>
            Updates the properties of a Lab environment.
            </summary>
            <param name="labEnvironmentUri">A Uri that uniquely identifies the Lab environment.</param>
            <param name="labEnvironmentUpdatePack">An update pack that describes various updates that need to be done.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.DeleteLabEnvironment(System.Uri)">
            <summary>
            Delete a Lab environment.
            </summary>
            <remarks>
            This method will result in permanant deletion of all VMs that make up the lab environment.
            It cannot be undone.
            </remarks>
            <param name="labEnvironmentUri">A Uri that uniquely identifies a Lab environment</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryTeamProjectCollectionLibraryShares(Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShareQuerySpec)">
            <summary>
            Retrieves all Project Collection level Library shares that match a given specification
            </summary>
            <param name="teamProjectCollectionLibraryShareQuerySpec">A specification describing Library shares of interest</param>
            <returns>A collection of Library shares that match the specification</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryTeamProjectCollectionHostGroups(Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupQuerySpec)">
            <summary>
            Retrieves all Project Collection level Host groups that match a given specification
            </summary>
            <param name="teamProjectCollectionHostGroupQuerySpec">A specification describing Host groups of interest</param>
            <returns>A collection of Host groups of interest</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryTeamProjectLibraryShares(Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShareQuerySpec)">
            <summary>
            Retrieves all Team Project level Library shares that match a given specification
            </summary>
            <param name="teamProjectLibraryShareQuerySpec">A specification decribing Library shares of interest</param>
            <returns>A collection of Library shares of interest</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryTeamProjectHostGroups(Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroupQuerySpec)">
            <summary>
            Retrieves all Team Project level Host groups that match a given specification
            </summary>
            <param name="teamProjectHostGroupQuerySpec">A specification describing Host groups of interest</param>
            <returns>A collection of Host groups of interest</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryLabEnvironments(Microsoft.TeamFoundation.Lab.Client.LabEnvironmentQuerySpec)">
            <summary>
            Retrieves all Lab environments that match a given specification
            </summary>
            <remarks>
            For efficiency reasons, this API may not fetch some properties of Lab environments.
            If all properties of a Lab environment are needed, get the Uri of the Lab environment and then call GetLabEnvironment API
            </remarks>
            <param name="labEnvironmentQuerySpec">A specification describing Lab environments of interest</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryLabTemplates(Microsoft.TeamFoundation.Lab.Client.LabTemplateQuerySpec)">
            <summary>
            Retrieves all Lab Templates that match a given specification.
            </summary>
            <remarks>
            The Lab Templates here correspond to SCVMM Virtual Machines or SCVMM Templates that have already been imported into Lab Management.
            These can be used for creation of Lab environments.
            </remarks>
            <param name="labTemplateQuerySpec">A specification describing Lab Templates of interest</param>
            <returns>Collection of Lab templates matching the specification</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryVirtualMachines(Microsoft.TeamFoundation.Lab.Client.VirtualMachineQuerySpec)">
            <summary>
            Retrieves the Virtual Machines or Templates available in SCVMM which are not known to Lab Service.
            </summary>
            <remarks>
            When a virtual machine is a stored one, which also includes a case of a template in SCVMM, it needs to be
            imported in the lab, before using it further for creating lab environment.
            The location specified in the query spec can refer to a host group. In this case, the virtual machines returned
            can be directly used for creation of environments. LabReadiness property will always be null for VirtualMachines 
            returned by this api for performance reasons. Use GetVirtualMachine api for getting LabReadiness details. 
            </remarks>
            <param name="virtualMachineTemplateQuerySpec">A specification describing virtual machines of interest.</param>
            <returns>The list of virtual machines that can be used to create lab templates or lab systems.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.CreateLabTemplateFromVirtualMachine(System.Guid,System.Uri,System.String,System.String,System.String,Microsoft.TeamFoundation.Lab.Client.PropertyDictionary,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Creates a Lab Template by importing a SCVMM Virtual machine or SCVMM Template in a Library Share into a Lab Management
            </summary>
            <remarks>
            SCVMM Virtual Machines or SCVMM Templates available on a Library share first need to be imported into Lab Management. 
            This import results in creation of a Lab Template.
            </remarks>
            <example>
            <code>
            VirtualMachineQuerySpec vmSpec = new VirtualMachineQuerySpec();           
            vmSpec.LocationUri = myLibraryLocation.Uri
            ICollection{VirtualMachine} vmList = labService.QueryVirtualMachines(vmSpec);           
            foreach (VirtualMachine vm in vmList)
                CreateLabTemplateFromVirtualMachine(vm.VMGuid, myLibraryLocation.Uri,
                    vm.Name, string.Empty, string.Empty, null, null);
            </code>
            </example>
            <param name="virtualMachineId">Guid of the virtual machine which is to be imported in lab</param>
            <param name="libLocationUri">Team project library share the virtual machine is associated with</param>
            <param name="name">Name of the Lab Template to be created</param>
            <param name="description">Decription of the Lab Template to be created</param>
            <param name="role">The role in which the Lab template is to be used in</param>
            <param name="customProperties">Set of custom properties associated with the lab environment. 
            If no properties exist, pass null</param>
            <param name="permissions">The security descriptor that defines who can use this Lab Template.
            NULL SD will give Full Access to the Creator.</param>
            <returns>the newly created Lab Template</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.DeleteLabTemplate(System.Uri)">
            <summary>
            Deletes a Lab Template and dissociates the corresponding SCVMM Virtual Machine of SCVMM Template from Lab Management. 
            </summary>
            <remarks>
            After deletion, the SCVMM Virtual Machine or Template become available for import again.
            </remarks>
            <param name="labTemplateUri">Uri that uniquely identifies a Lab Template</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetSnapshotChain(System.Int64)">
            <summary>
            Gets a snapshot chain using its ID 
            </summary>
            <remarks>
            A snapshot chain links a snapshot in a Stored environment with a snapshot in Active enviroment.
            The ID of snapshot chain can be obtained from <see cref="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentSnapshot"/>.
            </remarks>
            <param name="snapshotChainId">ID that uniquely identifies this snapshot chain. </param>
            <returns>Updated forward link data structure</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.TestExternalDnsSuffix(System.String)">
            <summary>
            This function is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.TestSCVMMServer(System.String,System.Boolean)">
            <summary>
            This function is reserved for internal use and is not intended to be used in your code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.CreateTeamProjectLibraryShare(System.Uri,System.String,System.String,System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Creates a Library share associated with a Team Project using a Library share associated with a Project Collection
            </summary>
            <param name="teamProjectCollectionLibraryShareUri">Uri that uniquely identifies the Library Share associated with the Project Collection</param>
            <param name="projectName">Name of the Team Project</param>
            <param name="name">Name of the Library share to be created.</param>
            <param name="description">Description of Library share to be created</param>
            <param name="permissions">The security descriptor that defines who can use this Library share.
            NULL SD will give Full Access to the Creator.</param>
            <returns>TeamProjectLibraryShare</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.DeleteTeamProjectLibraryShare(System.Uri)">
            <summary>
            Delete a Library share associated with a Team Project.
            </summary>
            <remarks>
            The deletion frees up the original Library share associated to the Project Collection for use in other Team Projects
            </remarks>
            <param name="teamProjectLibraryShareUri">Uri that uniquely identifies the Library share associated with the Team Project</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.CreateTeamProjectHostGroup(System.Uri,System.String,System.String,System.String,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Creates a Host group associated with a Team Project using a Host group associated with a Project Collection
            </summary>
            <param name="teamProjectCollectionHostGroupUri">Uri that uniquely identifies the Host group associated with the Project Collection</param>
            <param name="projectName">Name of the Team Project</param>
            <param name="name">Name of the Host group to be created.</param>
            <param name="description">Description of Host group to be created</param>
            <param name="permissions">The security descriptor that defines who can use this Host group.
            NULL SD will give Full Access to the Creator.</param>
            <returns>TeamProjectHostGroup</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.DeleteTeamProjectHostGroup(System.Uri)">
            <summary>
            Delete a Host group associated with a Team Project.
            </summary>
            <remarks>
            The deletion frees up the original Host group associated to the Project Collection for use in other Team Projects
            </remarks>
            <param name="teamProjectHostGroupUri">Uri that uniquely identifies the Host group associated with the Team Project</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetValidPermissionsForObject(System.Type)">
            <summary>
            Gets Lab permissions applicable to a lab object
            </summary>
            <param name="objectType">type of the lab object</param>
            <returns>list of applicable lab permissions</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetObjectSecurity(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Gets Lab object security information
            </summary>
            <param name="identityNames">List of identities (users/groups)</param>
            <param name="objectUri">URI that uniquely identifies a lab object</param>
            <returns>a LabObjectSecurity object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UpdateObjectSecurity(Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor,System.String)">
            <summary>
            Updates Lab object security information
            </summary>
            <param name="permissionChanges">LabSecurityDescriptor object which describes the security changes to be applied</param>
            <param name="objectUri">URI that uniquely identifies a lab object</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UpdateTeamProjectCollectionHostGroup(System.Uri,Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupUpdatePack)">
            <summary>
            Updates the TeamProjectCollectionHostGroup properties.
            </summary>
            <param name="locationUri">The Uri identifying the TeamProjectCollectionHostGroup, which is to be modified.</param>
            <param name="updatePack">The metadata describing the changes to the properties of the TeamProjectcollectionHostGroup.
            Refer to <see cref="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionHostGroupUpdatePack"/> for more details about the
            TeamProjectCollectionHostGroup properties that can be modified.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UpdateTeamProjectCollectionLibraryShare(System.Uri,Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShareUpdatePack)">
            <summary>
            Updates the TeamProjectCollectionLibraryShare properties.
            </summary>
            <param name="locationUri">The Uri identifying the TeamProjectCollectionLibraryShare, which is to be modified.</param>
            <param name="updatePack">The metadata describing the changes to the properties of the TeamProjectCollectionLibraryShare.
            Refer to <see cref="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectCollectionLibraryShareUpdatePack"/> for more details about the
            TeamProjectCollectionLibraryShare properties that can be modified.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.ValidateLabEnvironmentDefinition(System.Uri,Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition)">
            <summary>
            Performs an async validation on a LabEnvironmentDefinition object
            </summary>
            <param name="locationUri">The location to which the LE will be created from the LED.</param>
            <param name="labEnvironmentDefinition">The LabEnvironmentDefinition to be validated.</param>
            <param name="createdBy">The user who is creating the LabEnvironmentDefnition</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.ValidateLabEnvironmentUpdatePack(System.Uri,Microsoft.TeamFoundation.Lab.Client.LabEnvironmentUpdatePack)">
            <summary>
            Performs an async validation on a LabEnvironmentUpdatePack object
            </summary>
            <param name="labEnvironmentUri">The uri of the environment to be updated</param>
            <param name="labEnvironmentUpdatePack">The updates to be performed on the environment</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.ValidateCloneLabEnvironment(System.Uri,System.Uri,System.String,System.String)">
            <summary>
            Performs an async validation for cloning a lab environment.
            </summary>
            <param name="locationUri">The location where the LE will be created.</param>
            <param name="labEnvironmentUri">the source environment uri.</param>
            <param name="name">name of the new environment</param>
            <param name="description">description of the new environment</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.ValidateLabTemplateDefinition(System.Uri,Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition)">
            <summary>
            Validates the lab template definition.
            </summary>
            <param name="locationUri">Location where the lab template should be created</param>
            <param name="labTemplateDefinition">lab template definition object</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.GetLabOperation(System.Int64)">
            <summary>
            Fetches the LabOperationHandle for a given LabOperation id.
            </summary>
            <param name="labOperationId">LabOperation identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.RegisterTestMachine(System.Collections.Generic.List{System.String},System.String,Microsoft.TeamFoundation.Lab.Client.PropertyDictionary,Microsoft.TeamFoundation.Lab.Client.TestMachineConfiguration,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Register a Test machine to the Test Controller
            </summary>
            <param name="connectNames">FQDN or IP address</param>
            <param name="testControllerName">Name of the test controller to which the Test Machine will be registered</param>
            <param name="customProperties"></param>
            <param name="extendedProperties"></param>
            <param name="permissions">The security descriptor that defines who can use this Test Machine.
            NULL SD will give Full Access to the Creator.</param>
            <returns>TestMachine</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UpdateTestMachineStatus(System.Uri,System.String,Microsoft.TeamFoundation.Lab.Client.TestMachineState,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Microsoft.TeamFoundation.Lab.Client.StatusMessage},Microsoft.TeamFoundation.Lab.Client.TestMachineConfiguration)">
            <summary>
            Update Test Controller with the status of the Test Machine
            </summary>
            <param name="testMachineUri">UIR of the test machine which status to be updated</param>
            <param name="state">state of the test machine</param>
            <param name="subStatus">sub status of the test machine</param>
            <param name="statusMessages"></param>
            <param name="extendedProperties">.</param>
            <returns>TestMachine</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UpdateTestMachineOperationStatus(System.Int64,System.Uri,Microsoft.TeamFoundation.Lab.Client.OperationState,System.String,System.Int32,System.Collections.Generic.List{Microsoft.TeamFoundation.Lab.Client.StatusMessage})">
            <summary>
            
            </summary>
            <param name="operationId"></param>
            <param name="testMachineUri"></param>
            <param name="operationState"></param>
            <param name="currentStep"></param>
            <param name="progress"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UnregisterTestMachine(System.Uri)">
            <summary>
            Unregister a test machine 
            </summary>
            <remarks>
            This method will result in permanant un-registration of test machine.
            It cannot be undone.
            </remarks>
            <param name="testMachineUri">A Uri that uniquely identifies a test machine</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryTestMachines(Microsoft.TeamFoundation.Lab.Client.TestMachineQuerySpec)">
            <summary>
            Retrieves all TestMachine that match a given specification
            </summary>
            <param name="testMachineQuerySpec">A specification decribing Test Machines of interest</param>
            <returns>A collection of Test Machines of interest</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.CreateDeploymentTask">
            <summary>
            Creates an empty deployment task
            </summary>
            <returns>Deployment Task created</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueueDeploymentTask(Microsoft.TeamFoundation.Lab.Client.IDeploymentTask)">
            <summary>
            Queues a deployment task using the specified information
            </summary>
            <param name="task">Deployment Task</param>
            <returns>DeploymentId of the task queued</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.DeleteDeploymentTask(System.Int64)">
            <summary>
            Deletes the specified deployment task
            </summary>
            <param name="deploymentTaskId">DeploymentTask Id</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryDeploymentTask(System.Int64)">
            <summary>
            Queries the specified deployment task
            </summary>
            <param name="deploymentTaskId">DeploymentTask Id</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryLabSystemDeploymentTasks(System.Collections.Generic.IEnumerable{System.Int64},System.String)">
            <summary>
            Queries the deployment tasks assigned to the specified Ids whose test controller name matches testControllerName parameter
            </summary>
            <param name="deploymentTaskId">List of lab system Ids</param>
            <param name="labSystemIds">Test controller of the lab systems</param>
            <returns>List of queued tasks</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UpdateDeploymentTaskStatus(System.Int64,Microsoft.TeamFoundation.Lab.Client.DeploymentTaskStatus)">
            <summary>
            Updates the status of the deployment task to the provided status
            </summary>
            <param name="deploymentTaskId">Identifier of the deployment task to be updated</param>
            <param name="newStatus">New status of the task</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.CancelDeploymentTask(System.Int64)">
            <summary>
            Cancels the specified deployment task
            </summary>
            <param name="deploymentTaskId">Identifier of the deployment task to be cancelled</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.ReserveEnvironmentForDeployment(System.Uri,System.Uri)">
            <summary>
            Reserves the environment for deployment purposes
            </summary>
            <param name="labEnvironmentUri">environment identifier</param>
            <param name="buildUri">build uri under which the deployment will take place</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.ReleaseEnvironmentFromDeployment(System.Uri,System.Uri)">
            <summary>
            Releases the environment from deployment.
            </summary>
            <param name="labEnvironmentUri">environment identifier</param>
            <param name="buildUri">build uri under which the deployment was taking place</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryRMDeploymentTaskForEnvironment(System.Uri)">
            <summary>
            Retrieves the RM Deployment Task Details for given environment
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryRMDeploymentTask(System.Int64)">
            <summary>
            Retrieves the RM Deployment Task Details
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.UploadRMDeploymentTaskLogs(System.Collections.Generic.List{Microsoft.TeamFoundation.Lab.Client.RMDeploymentTaskLog})">
            <summary>
            Uploads deployment logs
            </summary>
            <param name="rmDeploymentTaskLogs">Collection of logs across deployment tasks</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabService.QueryRMDeploymentTaskLogs(System.Int64)">
            <summary>
            Query deployment logs
            </summary>
            <param name="deploymentTaskId"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSystemState">
            <summary>
            Different states of the lab system. These mostly correspond to the virtual machine states in
            the Virtual Machine Manager.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VirtualizationPlatform">
            <summary>
            The underlying virtualization platform, for the active lab system.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSystem">
            <summary>
            A lab system is the representation of the virtual machine, in an environment.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.IsolationInformation">
            <summary>
            Gets the isolation information of the lab system.
            If the lab environment is not network isolated, returns null;
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.DisplayName">
            <summary>
            Gets the display name for the lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.ComputerName">
            <summary>
            Gets the computer name of the lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.VMGuid">
            <summary>
            The Guid of the virtual machine in Virtual Machine Manager.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.Roles">
            <summary>
            Roles of the lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.IsTemplate">
            <summary>
            True if the lab system is a SysPrep template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.Environment">
            <summary>
            The container environment of this lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.LocationUri">
            <summary>
            The Uri of the location object where this lab system is located.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.ExtendedInfo">
            <summary>
            Extended information about the virtual machine underlying this lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.StatusInfo">
            <summary>
            Status information about the lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.VMName">
            <summary>
            The name of the virtual machine underlying this lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.OSProfileName">
            <summary>
            The operating system profile name of this lab system.
            This is non-null only when this system is a SysPrep template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.IsolationOptions">
            <summary>
            The network isolation options associated with the lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.VirtualizationPlatform">
            <summary>
            Virtualization platform as known to VSLM for underlying VM or Template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystem.IsConfiguredForTesting">
            <summary>
            Gets whether this lab system is used for testing or not.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystem.GetConsoleConnectionInfo">
            <summary>
            Get ConsoleConnectionInfo object which contains the info required to make host-based connection on this labSystem
            </summary>
            <returns>ConsoleConnectionInfo object.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystem.ValidateTestMachine(Microsoft.TeamFoundation.Lab.Client.AccountInformation)">
            <summary>
            validate if we can perform a remote install of test agent on this labsystem
            </summary>
            <param name="machineName"></param>
            <param name="adminAccount"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystem.InstallTestAgent(Microsoft.TeamFoundation.Lab.Client.AccountInformation,Microsoft.TeamFoundation.Lab.Client.AccountInformation,Microsoft.TeamFoundation.Lab.Client.AccountInformation)">
            <summary>
            install a test agent and configure it as process
            </summary>
            <param name="adminAccount"></param>
            <param name="processAccount"></param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSystemStatusInfo">
            <summary>
            The lab system status information, represents the dynamic nature of the lab system,
            as it transitions from one stable state to another.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemStatusInfo.State">
            <summary>
            The state of the lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemStatusInfo.FailureReason">
            <summary>
            The failure reason, if any, for the last failed operation on lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemStatusInfo.StatusMessage">
            <summary>
            Status Message associate with the object.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemStatusInfo.LastFailure">
            <summary>
            The last operation failure exception.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemStatusInfo.FailureExplanation">
            <summary>
            This variable stores the failure information returned by the server. This is used to return other public messages.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemStatusInfo.IsTransitionState">
            <summary>
            Checks if the lab system is in transition state. Typically, when a long running operation is
            issued on the lab system [as part of an operation on the lab environment],
            the lab service moves from one stable state to another through
            an intermediate transitioning state. For example, when the lab system, which is in Stopped
            state is started, it first goes to Starting state, and after some time, goes to Started state.
            </summary>
            <returns>True if the lab system is in transitioning state, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.VirtualHardDiskInfo.FromXml(System.Xml.XmlReader)">
            <summary>
            This method is for deserialization of vhd
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.RemoteSessionInfo">
            <summary>
            RemoteSessionInfo  provides the information required to establish
            remote console session with the VM for this testsystem.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.RemoteSessionInfo.FromXml(System.Xml.XmlReader)">
            <summary>
            Creates the RemoteSessionInfo from the XML.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ConsoleConnectionInfo">
            <summary>
            ConsoleConnectionInfo  provides the information required to establish host-based
            remote console session with the VM for this LabSystem for HyperV or VMware VM
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.ConsoleConnectionInfo.Host">
            <summary>
            name of the host
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.ConsoleConnectionInfo.RemoteConnectPort">
            <summary>
            port on which remote session connection is allowed.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.ConsoleConnectionInfo.IsRemoteConnectEnabled">
            <summary>
            does host machine allows host-based session
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.ConsoleConnectionInfo.VMId">
            <summary>
            VMId for connecting the VM
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.ConsoleConnectionInfo.IsConsoleInUse">
            <summary>
            Is console is used by some other user
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VMExtendedInfo.VirtualizationPlatform">
            <summary>
            VirtualizationPlatform of ExtendedInfo is to be deleted. Use VirtualizationPlatform directly
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VMExtendedInfo.HasVMAdditions">
            <summary>
            Returns whether this LabSystem has VM additions or not. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VMExtendedInfo.LabAgentPresent">
            <summary>
            Gets whether lab agent is present or not on the machine.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VMExtendedInfo.LabAgentVersionLatest">
            <summary>
            Gets whether the lab agent version on the machine is up to date or not.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VMExtendedInfo.LabAgentVersion">
            <summary>
            Specifies the version of the lab agent.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VMExtendedInfo.CheckpointCount">
            <summary>
            number of checkpoints on this VM
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition">
            <summary>
            A lab system definition object captures all the required inputs, to create a new lab system from
            lab template. This object gets used as part of lab environment definition
            (<see cref="T:Microsoft.TeamFoundation.Lab.Client.LabEnvironmentDefinition"/>), which eventually helps
            in creating a new lab environment.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.#ctor(Microsoft.TeamFoundation.Lab.Client.LabTemplate,System.String,System.String)">
            <summary>
            Create a lab system definition which refers to a lab template. Note that multiple lab system
            definitions can refer to single lab template. Eventually when a new lab system is created using
            this definition, a copy of underlying lab template will be made, and original lab template
            will remain undisturbed.
            </summary>
            <param name="labTemplate">The source lab template, which is used as a reference in this
            lab system definition.
            </param>
            <param name="name">Name to be given to the new lab system.</param>
            <param name="roles">Roles to be applied to the new lab system.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.#ctor(Microsoft.TeamFoundation.Lab.Client.TestMachine,System.String,System.String)">
            <summary>
            Creates a new instance of the LabSystemDefinition which can be used to create a Lab System with the given test machine.
            </summary>
            <param name="testMachine">test machine to be used as the lab system</param>
            <param name="name">Name to be given to the new lab system.</param>
            <param name="roles">Roles to be applied to the new lab system.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the LabSystemDefinition which can be used to create a Lab System with the given machine name
            </summary>
            <param name="machineName">Machine name of the new lab system</param>
            <param name="name">Name to be given to the new lab system.</param>
            <param name="roles">Roles to be applied to the new lab system.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.#ctor(Microsoft.TeamFoundation.Lab.Client.VirtualMachine,System.String,System.String)">
            <summary>
            Creates a new instance of the LabSystemDefinition which can be used to create a Lab System with the given virtual machine as the source. 
            </summary>
            <param name="vm">Source Virtual Machine</param>
            <param name="name">Name to be given to the new lab system.</param>
            <param name="roles">Roles to be applied to the new lab system.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.#ctor(Microsoft.TeamFoundation.Lab.Client.VirtualMachine,System.Uri,System.String,System.String)">
            <summary>
            Creates a new instance of the LabSystemDefinition which can be used to create a Lab System with the given virtual machine as the source.
            </summary>
            <param name="vm">Source Virtual Machine</param>
            <param name="testMachineUri">Test Machine Uri of the virtual machine if the machine is already registered with the team foundation server</param>
            <param name="name">Name to be given to the new lab system.</param>
            <param name="roles">Roles to be applied to the new lab system.</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.Name">
            <summary>
            Name to be given to new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.Roles">
            <summary>
            Roles to be applied to new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.Description">
            <summary>
            Description to be given to new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.ConfigurationComplete">
            <summary>
            If false - then create operation waits for the configuration to complete.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.TemplateUri">
            <summary>
            The Uri of the lab template, which is used as a source for creating new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.CustomProperties">
            <summary>
            Set of custom properties to be applied on new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.HardwareProfileDefinition">
            <summary>
            The harward profile definition to be applied to new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.OSProfileDefinition">
            <summary>
            The OS profile definition to be applied to the new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemDefinition.IsolationOptions">
            <summary>
            The network isolation options to be applied on the new lab system.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabTemplateState">
            <summary>
            Possible states a lab template can be in.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabTemplate">
            <summary>
            A lab template is an ungrouped virtual machine which is stored in the library.
            Unlike lab system, which always exists in the context of a lab environment, a lab template
            exists in isolation. Also note that a lab template may or may not be a SysPrep template.
            Also note that Lab service allows "import" as well as "create" of lab templates. For the
            lab templates, which are created by Lab, the life time of these is managed by Lab.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.State">
            <summary>
            The state of a lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.FailureReason">
            <summary>
            The failure reason, if any, for the last failed operation on lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.LocationUri">
            <summary>
            The Uri of the location object where this lab template is located.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.Roles">
            <summary>
            Roles of the lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.VMGuid">
            <summary>
            The Guid of the virtual machine in Virtual Machine Manager.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.IsTemplate">
            <summary>
            True if the lab template is a SysPrep template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.IsManagedByLab">
            <summary>
            True if the lab template is created from scratch, and hence managed, by lab service.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.LastAccessedTime">
            <summary>
            The last time this lab template was accessed, that is, either modified, marked
            for use, or copied from for new lab system creation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.CustomProperties">
            <summary>
            The custom properties associated with the lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.LastFailure">
            <summary>
            The last operation failure exception.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.LabOperation">
            <summary>
            The current or the previously completed operation on the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.ExtendedInfo">
            <summary>
            Extended information about the virtual machine underlying this lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.VMName">
            <summary>
            The name of the virtual machine underlying this lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.OSProfileName">
            <summary>
            The operating system profile name of this lab template.
            This is non-null only when this object is also a SysPrep template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplate.VirtualizationPlatform">
            <summary>
            Virtualization platform as known to VSLM for underlying VM or Template.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabTemplate.ValidateAfterDeserialize">
            <summary>
            This method is invoked post deserialization of object and needs to validate the sanctity.
            The method throws
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition">
            <summary>
            A lab template definition object captures all the required inputs, to create a new lab template.
            The primary use case for creating a new lab template, is to clone a lab system and store it to
            library.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.#ctor">
            <summary>
            Creates an empty lab template definition object. It is expected that the required fields
            within the definition will be populated before a lab template creation is issued.
            <example>
            The following example demonstrates how to create a new lab template from a lab system.
            It also shows how to generalize (SysPrep) and change the hardware properties of a lab template.
            <code> 
            // C#
            TeamProjectLibraryShare libShare = ...;
            
            LabTemplateDefinition ltd = new LabTemplateDefinition();
            ltd.Name = "My lab template";
            ltd.Description = "A sample lab template";
            ltd.Roles = "Desktop Client";
            ltd.SourceUri = sourceLabSystem.Uri;
            ltd.SysPrepRequired = true;
            ltd.OSProfileDefinition = new OSProfileDefinition();
            ltd.OSProfileDefinition.OperatingSystem = sourceLabSystem.ExtendedInfo.OSProfile.OS;
            ltd.HardwareProfileDefinition = new HardwareProfileDefinition();
            ltd.HardwareProfileDefinition.Memory = 2*1024; // 2 GB
            
            LabTemplate labTemplate = libShare.CreateLabTemplateFromLabSystem(ltd, null);
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.#ctor(Microsoft.TeamFoundation.Lab.Client.LabSystem,System.String,System.String,System.String,System.Boolean,Microsoft.TeamFoundation.Lab.Client.PropertyDictionary,Microsoft.TeamFoundation.Lab.Common.HardwareProfileDefinition,Microsoft.TeamFoundation.Lab.Common.OSProfileDefinition)">
            <summary>
            Creates a lab template definition object with provided parameters.
            </summary>
            <param name="labSystem">The lab system, which is used as a reference for creating new lab template.</param>
            <param name="name">Name to be given to the new lab template.</param>
            <param name="roles">Roles to be assigned to the new lab template.</param>
            <param name="description">Description to be given to the new lab template.</param>
            <param name="isSysPrepRequired">If true, the lab system is cloned and SysPrep (generalized)
            before storing to library.</param>
            <param name="customProperties">Set of custom properties to be applied to the new lab template.</param>
            <param name="hwProfile">Hardware profile to be applied to the new lab template.</param>
            <param name="osProfile">OS profile to be applied to the new lab template.</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.SourceUri">
            <summary>
            The Uri of the source lab system, which is copied and then stored to library.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.Name">
            <summary>
            The name to be given to the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.Roles">
            <summary>
            The set of roles to be applied to the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.Description">
            <summary>
            The description to be given to the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.SysPrepRequired">
            <summary>
            If true, the lab template is generalized before storing to library.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.CustomProperties">
            <summary>
            The custom properties to be applied to lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.HardwareProfileDefinition">
            <summary>
            The harward profile definition to be applied to lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition.OSProfileDefinition">
            <summary>
            The OS profile definition to be applied to lab template.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabTemplateQuerySpec">
            <summary>
            Represents a specification object for lab template search queries from lab service.
            The fields within this object, when non-null, participate in the filter applied to selected
            lab templates. This filtering resembles where clause in the SQL select queries.
            For specific interpretation of the values refer to individual properties.
            <example>
            The following example demonstrates how to use the spec object to query templates:
            <code>
            // C#
            ICollection{LabTemplate} ListLabTemplates(LabService labService,
                String project,
                TeamProjectLibraryShare libraryShare)
            {
                LabTemplateQuerySpec labTemplateQuerySpec = new LabTemplateQuerySpec();
                labTemplateQuerySpec.Project = project;
                labTemplateQuerySpec.Location = libraryShare.Uri;
                return labService.QueryLabTemplates(labTemplateQuerySpec);
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateQuerySpec.Project">
            <summary>
            Matches lab templates belonging to the specified project.
            If the value is null, selects all lab templates.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateQuerySpec.Location">
            <summary>
            If null matches all lab templates, else only those belonging to this location.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack">
            <summary>
            This object holds the the property changes to be applied to a lab template.
            This mechanism of updating object proerties through an update pack, allows one to selectively update
            properties on the lab template, even without being aware of specific values of other properties.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack.#ctor">
            <summary>
            Default constructor. Prepares the pack to update nothing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack.Name">
            <summary>
            The new name to be given to the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack.Roles">
            <summary>
            The new roles to be given to the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack.Description">
            <summary>
            The new description to be given to the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack.CustomPropertyUpdates">
            <summary>
            The custom property update pack to be applied to the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack.HardwareProfileDefinition">
            <summary>
            The hardware profile definition to be applied to the lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabTemplateUpdatePack.OSProfileDefinition">
            <summary>
            The OS profile definition to be applied to the lab template.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare">
            <summary>
            Represents a library share attached with a team foundation project. A library share can contain library objects such as lab templates and stored lab environments.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.Path">
            <summary>
            Gets the path of the library share in SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.LibraryServer">
            <summary>
            Gets the name of the library server to which this library share belongs.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.LibraryShareUri">
            <summary>
            Gets the uri of the parent TeamProjectCollectionLibraryShare object which is attached to the project collection of this project.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.SCVMMServer">
            <summary>
            Gets the name of the SCVMM server to which this library share belongs.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.ProjectName">
            <summary>
            Gets the name of the team foundation project to which this library share is attached.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.QueryLabTemplates(Microsoft.TeamFoundation.Lab.Client.LabTemplateQuerySpec)">
            <summary>
            Returns the collection of lab templates in this location which match the search query and are accessible to the user.
            </summary>
            <param name="tsdQuery">Specifies the search criteria.</param>
            <returns>Collection of lab templates matching the search criteria.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.CreateLabTemplateFromLabSystem(Microsoft.TeamFoundation.Lab.Client.LabTemplateDefinition,Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor)">
            <summary>
            Creates a new lab template in the underlying location from a lab system as identified by the labTemplateDefintion parameter.
            </summary>
            <param name="labTemplateDefinition">The definition of the lab template.</param>
            <param name="permissions">Permissions to be associated with the lab template</param>
            <returns>Lab template created by this api.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.ListLabEnvironments">
            <summary>
            Lists the uri of all the lab environments which are present in this location.
            </summary>
            <returns>Collection of the lab environment uri.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShare.ListLabTemplates">
            <summary>
            Lists the uri of all the lab templates which are present in this location.
            </summary>
            <returns>Collection of the lab template uri.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShareQuerySpec">
            <summary>
            Represents a specification object for team project (TP for short) library share
            search queries from lab service.
            The fields within this object, when non-null, participate in the filter applied to selected
            TP library shares. This filtering resembles where clause in the SQL select queries.
            For specific interpretation of the values refer to individual properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShareQuerySpec.Name">
            <summary>
            Matches TP library shares matching the specified name.
            If the value is null, selects all.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShareQuerySpec.Project">
            <summary>
            Matches TP library shares belonging to the specified project.
            If the value is null, selects all TP library shares.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectLibraryShareQuerySpec.Location">
            <summary>
            If null matches all TPC library shares, else only those belonging to this location.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.ProcessRoles">
            <summary>
            Flags to indicate the Role for which a virtual machine must be configured for. 
            </summary>
            <remarks>This flag is interpreted during Network Isolation.
            The network configuration of the virtual machine will depend on the Role in which it is used</remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.ProcessRoles.None">
            <summary>
            No roles. Indicates a normal virtual machine
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.ProcessRoles.Dns">
            <summary>
            This flag is reserved for internal use and are not intended to be used in your code.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.ProcessRoles.DomainController">
            <summary>
            This flag is reserved for internal use and are not intended to be used in your code.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Lab.Client.ProcessRoles.DomainControllerWithDns">
            <summary>
            Domain controller with DNS. Virtual machine with this role will serve as Domain controller and DNS for all other machines in the environment.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationOptions">
            <summary>
            Options available while configuring network isolation in a Lab System
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationOptions.NoExternalNetworkConnection">
            <summary>
            This flag is reserved for internal use and are not intended to be used in your code.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSystemIsolationOptions.ProcessRoles">
            <summary>
            Indicates the Role for which a virtual machine will be configured for 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.NetworkLocation">
            <summary>
            Represents a Network common to one or more Virtualization Hosts
            </summary>
            <remarks>This corresponds to Network Location in SCVMM. For more information on Network Locations, consult SCVMM documentation </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.NetworkLocation.#ctor">
            <summary>
            creates an instance of the object
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.NetworkLocation.LocationName">
            <summary>
            Network Location name
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.TeamFoundation.Lab.Client.NetworkLocation.IsPublic" -->
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabAccessEntry">
            <summary>
            Provides information about Allow and Deny Permissions
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabAccessEntry.#ctor">
            <summary>
            Initializes a new instance of LabAccessEntry class
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAccessEntry.AllowMask">
            <summary>
            Allow Permissions bit mask
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAccessEntry.AllowStrings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAccessEntry.DenyMask">
            <summary>
            Deny Permissions bit mask
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabAccessEntry.DenyStrings">
            <summary>
            Names of Permissions to be denied
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabIdentityPermissions">
            <summary>
            Provides information about ACEs for an identity on any Lab object
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabIdentityPermissions.#ctor">
            <summary>
            Initializes a new instance of LabIdentityPermissions class
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabIdentityPermissions.IdentityName">
            <summary>
            User or group name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabIdentityPermissions.AccessEntry">
            <summary>
            ACE set on the referred object for the identity
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabIdentityPermissions.EffectiveAccessEntry">
            <summary>
            Effective ACE for the identity on the referred object. This includes effects 
            of Inherited ACE and group memberships.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabIdentityPermissions.InheritedAccessEntry">
            <summary>
            Inherited ACE for the identity on the referred object. This is non-empty only if 
            inheritance is enabled on the object.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabObjectSecurity">
            <summary>
            Provides security information set on a Lab object. Security information includes inheritance and 
            different identity ACEs for the object.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabObjectSecurity.#ctor">
            <summary>
            Initializes a new instance of LabObjectSecurity class
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObjectSecurity.LabIdentityPermissions">
            <summary>
            List of LabIdentityPermissions objects which contain permission info for different identities
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabObjectSecurity.IsInheritanceEnabled">
            <summary>
            Inheritance info for the object. Inheritance needs to be enabled on the object to inherit permissions
            from its parents in the hierarchy.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabPermissionChange">
            <summary>
            Provides ACE change (for a user or group) information to be applied on a Lab object
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabPermissionChange.#ctor">
            <summary>
            Initializes a new instance of LabPermissionChange class
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabPermissionChange.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of LabPermissionChange class
            </summary>
            <param name="identityName">User or group name</param>
            <param name="allow">Bit mask of permissions to be allowed</param>
            <param name="deny">Bit mask of permissions to be denied</param>
            <param name="remove">Bit mask of permissions to be removed</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabPermissionChange.#ctor(System.String,System.String[],System.String[],System.String[])">
            <summary>
            Initializes a new instance of LabPermissionChange class
            </summary>
            <param name="identity">User or group name</param>
            <param name="allowValues">Names of permissions to be allowed</param>
            <param name="denyValues">Names of permissions to be denied</param>
            <param name="removeValues">Names of permissions to be removed</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabPermissionChange.IdentityName">
            <summary>
            User or group name
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabPermissionChange.RemoveMask">
            <summary>
            Bit mask of permissions to be removed
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabPermissionChange.RemoveStrings">
            <summary>
            Names of permissions to be removed
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabInheritanceChange">
            <summary>
            Provides Inheritance Change information to be applied on any Lab object
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabInheritanceChange.#ctor">
            <summary>
            Initializes a new instance of LabInheritanceChange class
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabInheritanceChange.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of LabInheritanceChange class
            </summary>
            <param name="enableInheritance">if True, enables inheritance on the object</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabInheritanceChange.EnableInheritance">
            <summary>
            Boolean flag indicating inheritance status on the object
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor">
            <summary>
            Provides security information to be applied on any lab object
            </summary>
            <example>
            The following example shows usage of LabSecurityDescriptor object
            <code>
            LabSecurityDescriptor lsd = new LabSecurityDescriptor();
            lsd.LabPermissionChanges.Add(new LabPermissionChange(user1, (int)LabPermissions.Read, 0, 0));
            lsd.LabInheritanceChange = new LabInheritanceChange(false);
            LabService.UpdateObjectSecurity(lsd, labEnvironmentObjectUri);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor.#ctor">
            <summary>
            Initializes a new instance of LabSecurityDescriptor class
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor.LabPermissionChanges">
            <summary>
            List of LabPermissionChange objects containing ACE changes information
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabSecurityDescriptor.LabInheritanceChange">
            <summary>
            LabInheritanceChange object containing inheritance change information
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.PropertyDictionary.TryGetValue(System.String,System.String@)">
            <summary>
            Try and get the value for the named property.
            </summary>
            <param name="propertyName">The name of the custom property. Must not be null or empty.</param>
            <param name="propertyValue">The value of the named custom property. The value is assigned only when the method returns true.</param>
            <returns>True, if the custom property was defined, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.PropertyDictionary.GetBooleanValue(System.String,System.Boolean)">
            <summary>
            Try and get the value for the named property as a boolean.
            </summary>
            <param name="propertyName"></param>
            <param name="defaultValue"></param>
            <returns>the property value if property exists and is can be parsed as a boolean, defaultValue otherwise.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.PropertyDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection of key-value pairs of custom properties.
            </summary>
            <returns>An object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.PropertyUpdatePack">
            <summary>
            Property update pack, allows granular updates of custom properties on lab objects.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.PropertyUpdatePack.#ctor">
            <summary>
            Default constructor. Prepares the property update pack to alter nothing in existing custom properties.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.PropertyUpdatePack.Clear">
            <summary>
            Prepares the property update pack to remove all the existing custom properties on the lab object at the start of update.
            Use this when you plan to specify all the custom properties on the lab object, as they should be.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.PropertyUpdatePack.Insert(System.String,System.String)">
            <summary>
            Prepares the property update pack to insert one custom property with given name and value.
            </summary>
            <param name="propertyName">The name of custom property to be inserted. Must not be empty or null.
            Duplicate custom property names are not allowed.
            </param>
            <param name="propertyValue">The value of the custom property to be inserted. Must not be null.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.PropertyUpdatePack.Remove(System.String)">
            <summary>
            Prepares the property update pack to remove one custom property with given name.
            </summary>
            <param name="propertyName">The name of the custom property to be removed. Must not be empty or null.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.PropertyUpdatePack.Update(System.String,System.String)">
            <summary>
            Prepares the property update pack to update (remove followed by insert) one custom property with given name
            and value.
            </summary>
            <param name="propertyName">The name of custom property to be updated. Must not be empty or null.</param>
            <param name="propertyValue">The value of the custom property to be inserted. Must not be null.</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroup">
            <summary>
            Represents a host group attached with a team foundation project. A host group can contain active virtual lab environments.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroup.ListLabEnvironments">
            <summary>
            Lists the uri of all the lab environments which are present in this location.
            </summary>
            <returns>Collection of the lab environment uri.</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroup.Path">
            <summary>
            Gets the path of the host group in SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroup.DnsSuffix">
            <summary>
            Gets the Dns suffix that is applied to the computer names of the lab systems in this host group.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroup.SCVMMServer">
            <summary>
            Gets the name of the SCVMM server to which this host group belongs.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroup.ProjectName">
            <summary>
            Gets the name of the team foundation project to which this host group is attached.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroup.HostGroupUri">
            <summary>
            Gets the uri of the parent TeamProjectCollectionHostGroup object which is attached to the project collection of this project.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroup.PlacementPolicy">
            <summary>
            Gets the type of the placement policy that will be used to select host(s) when creating a new lab environment on this host group.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroupQuerySpec">
            <summary>
            Represents a specification object for team project (TP for short) host group
            search queries from lab service.
            The fields within this object, when non-null, participate in the filter applied to selected
            TP host groups. This filtering resembles where clause in the SQL select queries.
            For specific interpretation of the values refer to individual properties.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroupQuerySpec.Name">
            <summary>
            Matches TP host groups matching the specified name.
            If the value is null, selects all.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroupQuerySpec.Project">
            <summary>
            Matches TP host groups belonging to the specified project.
            If the value is null, selects all TP host groups.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TeamProjectHostGroupQuerySpec.Location">
            <summary>
            If null matches all TPC host groups, else only those belonging to this location.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.TestMachine.ValidateAfterDeserialize">
            <summary>
            This method is invoked post deserialization of object and needs to validate the sanctity.
            The method throws
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.TestMachineConfiguration">
            <summary>
            Test Agent configuration details from the Test Machine
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TestMachineConfiguration.ConfiguredAsProcess">
            <summary>
            Is the Test Agent configured to be run as a process (or service)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.TestMachineConfiguration.ConfiguredUserName">
            <summary>
            The user name under which the Test Agent process is currently running
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Utilities.IdToUri(System.Int64,System.String)">
            <summary>
            Converts the parameter artifact Id to its Uri
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VirtualSystemDefinition">
            <summary>
            A virtual system definition object captures all the required inputs, to create a new lab system from
            an existing virtual machine on the host groups.
            This object eventually helps in creating a new lab environment. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.VirtualSystemDefinition.#ctor(System.Guid,System.String,System.String,System.String)">
            <summary>
            Create a virtual system definition which refers to a virtual machine on the SCVMM. The virtual machine
            being refered to is used "as is" in creating a new lab environment. As no copy is made, one virtual
            machine can be used only once in creating a lab environment. Further, when it is converted to a lab
            system, it will be totally owned by lab. However, it will not be deleted when lab environment lifetime is over.
            </summary>
            <param name="virtualMachineGuid">Guid refering to a virtual machine in SCVMM.</param>
            <param name="name">Name to be given to the new lab system.</param>
            <param name="description">description to be given to the new lab system.</param>
            <param name="roles">Roles to be applied to the new lab system.</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualSystemDefinition.Name">
            <summary>
            Name to be given to new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualSystemDefinition.VirtualMachineGuid">
            <summary>
            Id of the virtual machine object in SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualSystemDefinition.Roles">
            <summary>
            Roles to be applied to new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualSystemDefinition.Description">
            <summary>
            Description to be given to new lab system.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualSystemDefinition.CustomProperties">
            <summary>
            Set of custom properties to be applied on new lab system.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VirtualMachineState">
            <summary>
            Different states of the Virtual Machine. These mostly correspond to the virtual machine states in
            the Virtual Machine Manager.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.GuestNodeInfo">
            <summary>
            This class gives guest node info about an active vm
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.GuestNodeInfo.HasIntegrationServices">
            <summary>
            True when the VM has Integration Services installed and running
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.GuestNodeInfo.HasCompatibleLabAgent">
            <summary>
            True when the VM has compatible Lab Agent installed
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.GuestNodeInfo.HasCompatibleTestAgent">
            <summary>
            True when the VM has compatible Test Agent installed
            </summary>        
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.GuestNodeInfo.HasCompatibleBuildAgent">
            <summary>
            True when the VM has compatible Build Agent installed
            </summary>        
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.LabReadinessInfo">
            <summary>
            This class determines whether an active VM created through Hyper-V et al is ready to be used in Lab.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabReadinessInfo.IsNoDvdDriveConnected">
            <summary>
            True when none of the DVD Drives in the VM are connected
            to a host drive or ISO image
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabReadinessInfo.IsNoFloppyDriveConnected">
            <summary>
            True when none of the Floppy Drives in the VM are connected
            to a host drive or image
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabReadinessInfo.CanConnectToLabNetworkLocation">
            <summary>
            True when the VM is connected to a host network with location configured in TFS
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabReadinessInfo.IsGuestNodeLabAccessible">
            <summary>
            True when tfs service account has read/write acess to the guest node on the VM.
            It is possible when tfs service acct is admin on the physical host on which the vm is present
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.LabReadinessInfo.GuestNode">
            <summary>
            GuestNodeInfo would be null if vm is not in running state or if IsGuestNodeLabAccessible is false
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VirtualMachine">
            <summary>
            Represents a virtual machine or a template object in SCVMM server. This could be used for creating a lab template.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.VMGuid">
            <summary>
            Id of the virtual machine object in SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.VMName">
            <summary>
            Gets the name of the object as present in SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.VMDescription">
            <summary>
            Gets the description of the object as present in SCVMM server.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.CheckpointCount">
            <summary>
            Gets the number of checkpoints on the virtual machine.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.VMState">
            <summary>
            State of the virtual machine.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.LabReadiness">
            <summary>
            Qyery
            null value indicates that VM is definitely not ready to get into Lab.
            non-null value gives details of how much Lab Ready the VM is.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.ExtendedInfo">
            <summary>
            Gets the VMExtendedInfo object which contains various hardware and operating system specific properties of the VM.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.IsTemplate">
            <summary>
            Get a value indicating whether the given object is a template or a virtual machine.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.VirtualMachine.ValidateAfterDeserialize">
            <summary>
            This method is invoked post deserialization of object and needs to validate the sanctity.
            The method throws
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Client.VirtualMachineQuerySpec">
            <summary>
            Represents a specification object for virtual machine search queries. The virtual machines are
            objects managed by System Center Virtual Machine Manager (SCVMM). This class helps in associating
            the library shares within Lab to those in SCVMM and query virtual machines.
            For specific interpretation of the values refer to individual properties.
            <example>
            The following example demonstrates how to use the spec object to query virtual machines:
            <code>
            // C#
            ICollection{VirtualMachine} ListVirtualMachines(LabService labService,
                TeamProjectLibraryShare libraryShare)
            {
                VirtualMachineQuerySpec virtualMachineQuerySpec = new VirtualMachineQuerySpec();
                virtualMachineQuerySpec.Location = libraryShare.Uri;
                virtualMachineQuerySpec.FilterAlreadyImportedVirtualMachines = true;
                return labService.QueryVirtualMachines(virtualMachineQuerySpec);
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.VirtualMachineQuerySpec.#ctor">
            <summary>
            Default constructor. If used without any modification, all the virtual machines,
            which are not new to lab, are returned. The virtual machines which are stored
            in the library, can be imported multiple times. By default, the query spec
            will filter those which have been imported even once.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachineQuerySpec.Location">
            <summary>
            The Uri of the lab location. The location in lab maps to either a library
            share or a host group in SCVMM. The query will return virtual machines which are
            located under the mapped location in SCVMM.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Lab.Client.VirtualMachineQuerySpec.FilterAlreadyImportedVirtualMachines">
            <summary>
            If set to true, the stored virtual machines which have already been imported into Lab
            within this project are not included in the search results of the QueryVirtualMachines.
            The default constructor sets this property to true.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.APINotAvailableOnServer">
            <summary>
            This functionality is not available on the installed version of Team Foundation Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.CopyOfTestSystemNameFormat(System.Object)">
             <summary>
             The string format used to build a new name of a Test System
            
             Copy of {0}
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.DuplicateCustomProperties(System.Object)">
            <summary>
            Tag : {0} already exists. Remove duplicate tags and try the operation again.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.InvalidId">
            <summary>
            The specified ID is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.AccessDenied(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The following network path is not accessible: {0}. The user is not a member of the Administrators group on this machine: {1}. Error code: {2}. Error message: {3}. Click &apos;Repair/Install Agents&apos; and provide a different administrator account. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.AlreadyAvailableService(System.Object)">
            <summary>
            Microsoft Test Manager could not delete the Test Agent Installer service on the following machine because the Installer is already running: {0}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.BadLogonUserOrPassword(System.Object,System.Object,System.Object)">
            <summary>
            Either the user name or password is incorrect for user: {0}. Error code: {1}. Error message: {2}. Click &apos;Repair/Install Agents&apos; and provide a different administrator user name or password. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.CloseServiceFailure(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager could not close the Test Agent Installer service handle. Error code: {0}. Error message: {1}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.ConfigServiceFailure(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager could not change the Test Agent Installer service configuration. Error code: {0}. Error message: {1}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.ControlServiceFailure(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager could not issue a service control request to the Test Agent Installer service. Error code: {0}. Error message: {1}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.CreateServiceFailure(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager could not create the Test Agent Installer service. Error code: {0}. Error message: {1}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.DefaultBadConnectionMessage(System.Object,System.Object,System.Object)">
            <summary>
            Microsoft Test Manager could not access to the network path for user: {0}. Error code: {1}. Error message: {2}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.DeleteServiceFailure(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager could not delete the Test Agent Installer service. Error code: {0}. Error message: {1}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.DisabledAccount(System.Object,System.Object,System.Object)">
            <summary>
            The account for following user is currently disabled: {0}. Error code: {1}. Error message: {2}. Click &apos;Repair/Install Agents&apos; and provide a different administrator account. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.ImpersonationFailed(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager could not impersonate the provided administrator account to connect to the following machine: {0}. Additional information: {1}. Click &apos;Repair/Install Agents&apos; and provide a different administrator account. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.IncorrectOrUnreachablePath(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Either the specified path does not exist or is not reachable: &apos;{0}&apos;. Confirm that the following user is a member of the Administrators group on the machine and that the &apos;File and Printer Sharing&apos; exception is enabled in the firewall: {1} on {2}. Error code: {3}. Error message: {4}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.InitServiceFailed(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager is unable to initialize the Test Agent Installer service on machine: {0}. Additional Information: {1}.  Note that in case the machine has Microsoft Windows XP or Windows 2003 operating system then follow the steps mentioned at http://go.microsoft.com/fwlink/?LinkID=247269&amp;amp;clcid=0x409 to install/configure the test agent. Otherwise confirm that user whose credentials have been provided on the Machines wizard page is a member of the Administrators group on the machine, and then try the operation again.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.OngoingOperation(System.Object)">
            <summary>
            Another agent installation is in progress on {0}. The machine is possibly being used as part of another environment. Update the environment and remove this machine from it.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.OpenSCMFailure(System.Object,System.Object,System.Object)">
            <summary>
            Microsoft Test Manager is unable to connect to the Service Control Manager on machine: {0}. Error code: {1}. Error message: {2}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.OpenServiceFailure(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager is unable to open the Test Agent Installer service. Error code: {0}. Error message: {1}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.QueryServiceFailure(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager is unable to determine the status of the Test Agent Installer service. Error code: {0}. Error message: {1}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.StartServiceFailure(System.Object,System.Object)">
            <summary>
            Microsoft Test Manager is unable to start the Test Agent Installer service. Error code: {0}. Error message: {1}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.TestAgentInstallerServiceDescription">
            <summary>
            Visual Studio Test Agent Installer service installs a test agent.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.NetworkPathDoesNotExist(System.Object)">
            <summary>
            Microsoft Test Manager could not find the following path: {0}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.EncryptFailed(System.Object)">
            <summary>
            Microsoft Test Manager could not encrypt the credentials given to configure the test agent as process. Additional information: {0}. Wait a few minutes and then click &apos;Repair/Install Agents&apos;. Alternatively, use the Environment Viewer to connect to the machine and install the test agent manually.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.WnetConnectionFailed(System.Object,System.Object,System.Object)">
            <summary>
            Network path does not exist or is not accesible using following user: {0} using {1}. Error Code: {2}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Client.Resource.TestingCapabilityNotConfigured(System.Object)">
            <summary>
            The following test machine is not configured for testing: {0}.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Lab.Common.LabServiceCryptography">
            <summary>
            Helper class used in encyrpting and decrypting data used in labserviceuserpassword and also
            in templates used in Lab Environemnt
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Common.LabServiceCryptography.DecryptCredential(System.Net.NetworkCredential)">
            <summary>
            Helper function to decrypt the credential info
            </summary>
            <param name="credential">Encrypted credential</param>
            <returns>Decrypted credential object</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Common.LabServiceCryptography.EncodeString(System.String)">
            <summary>
            Encrypt the input string to a byte array and then format the encrypted
            byte array as a Base64 string.
            </summary>
            <param name="str">string to be encrypted</param>
            <returns>The encrypted string in Base64 format</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Common.LabServiceCryptography.DecodeString(System.String)">
            <summary>
            Decrypt a string that was encrypted using the peer EncryptString method.
            </summary>
            <param name="str">A string encrtyped by the peer EncryptString</param>
            <returns>The original string passed to the EncryptString method</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Common.LabServiceCryptography.GetKey">
            <summary>
            Retrieve the cryptographic key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Lab.Common.LabServiceCryptography.GetIV">
            <summary>
            Retrieve the cryptographic initialization vector.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
