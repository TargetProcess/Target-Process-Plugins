<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.TeamFoundation.Common</name>
    </assembly>
    <members>
        <member name="T:Microsoft.TeamFoundation.Common.ArrayUtil">
            <summary>
            A class with random array processing helper routines.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ArrayUtil.Equals(System.Byte[],System.Byte[])">
            <summary>
            Compare two byte arrays to determine if they contain the same data.
            </summary>
            <param name="a1">First array to compare.</param>
            <param name="a2">Second array to compare.</param>
            <returns>true if the arrays are equal and false if not.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ArrayUtil.GetHashCode(System.Byte[])">
            <summary>
            Generate hash code for a byte array.
            </summary>
            <param name="array">array to generate hash code for.</param>
            <returns>hash generated from the array members.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ArrayUtil.Equals(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Compare two byte arrays to determine if they contain the same data.
            </summary>
            <param name="a1">First array to compare.</param>
            <param name="a2">Second array to compare.</param>
            <param name="length"># of bytes to compare.</param>
            <returns>true if the arrays are equal and false if not.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Common.UrlConstants">
            <summary>
                URL-related constants.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Common.UrlConstants.SafeUriSchemes">
            <summary>
                Approved list of URL schemes.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.DebugUtil.Break">
            <summary>
            Signals a breakpoint to a debugger.
            </summary>
            <remarks>
            If no debugger is attached, this method launches and attaches debugger.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.DebugUtil.BreakIf(System.Boolean)">
            <summary>
            Signals a breakpoint to a debugger.
            </summary>
            <remarks>
            If no debugger is attached, this method launches and attaches debugger.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.DebugUtil.Break(System.String)">
            <summary>
            Signals a breakpoint to a debugger
            </summary>
            <remarks>
            If no debugger is attached, this method launches and attaches debugger.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.DebugUtil.BreakIf(System.String,System.Boolean)">
            <summary>
            Signals a breakpoint to a debugger.
            </summary>
            <remarks>
            If no debugger is attached, this method launches and attaches debugger.
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.Common.Internal.HighResTimer">
            <summary>
            The high resolution timer (if supported by the underlying hardware. If not supported, than resolution is that
            provided by the Stopwatch class.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Common.Internal.HighResTimer.TimeStamp">
            <summary>
            Return the current time-stamp.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.HighResTimer.Start">
            <summary>
             Start the high resolution timer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.HighResTimer.Stop">
            <summary>
             Stop the high resolution timer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.HighResTimer.ElapsedTime(System.Int64,System.Int64)">
            <summary>
             Compute the elapsed time based on a supplied start and stop time that were previously
             obtained as a time stamp.
            </summary>
            <param name="start">The time stamp at the start of the operation.</param>
            <param name="stop">The time stamp taken after the operation completes.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.HighResTimer.diffTime(System.Int64,System.Int64,System.Double)">
            <summary>
             Computes the difference between two times. When the high resolution timer is supported,
             the difference is computed using using the reported clock frequency. Otherwise, the time
             difference is computed by simple subtraction.
            </summary>
            <param name="start">The time stamp at the start of the operation.</param>
            <param name="stop">The time stamp taken after the operation completes.</param>
            <param name="conversionFactor">Clock granularity.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Common.Internal.MD5Util.CanCreateMD5Provider">
            <summary>
            Indicates whether FIPS (Federal Information Processing Standard) algorithm policy is disabled 
            on the current machine and MD5 crypo provider can be used.
            </summary>
            <returns>true if MD5 crypto provider can be used (FIPS algorithm policy is disabled); otherwise false.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.MD5Util.CalculateMD5(System.String)">
            <summary>
            Computes the MD5 hash for the specified file, unless FIPS algorithm policy is enabled.
            </summary>
            <param name="fileName">file to hash</param>
            <returns>the MD5 hash if the provider can be created or a zero-length array if that fails.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.MD5Util.CalculateMD5(System.Byte[])">
            <summary>
            Computes the MD5 hash for the specified byte array, unless FIPS algorithm policy is enabled.
            </summary>
            <returns>the MD5 hash if the provider can be created or a zero-length array if that fails.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.MD5Util.CalculateMD5(System.IO.Stream)">
            <summary>
            Computes the MD5 hash for the specified stream, unless FIPS algorithm policy is enabled.
            </summary>
            <param name="stream">the stream to hash</param>
            <returns>the MD5 hash if the provider can be created or a zero-length array if that fails.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.MD5Util.CalculateMD5(System.IO.Stream,System.Boolean)">
            <summary>
            Computes the MD5 hash for the specified stream, unless FIPS algorithm policy is enabled.
            </summary>
            <param name="stream">the stream to hash</param>
            <param name="rewind">If true, stream's current position will be reset to its original value.</param>
            <returns>the MD5 hash if the provider can be created or a zero-length array if that fails.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.MD5Util.TryCreateMD5Provider">
            <summary>
            Creates an MD5 crypto service provider. Returns null if FIPS algorithm policy is enabled.
            </summary>
            <returns>An MD5 provider or null if FIPS prevents using it.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Common.Internal.StringUtil">
            <summary>
            A class with random string processing helper routines.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Common.Internal.StringUtil.defaultConsoleWidth">
            <summary>
            Line width used to calculate estimated buffer size
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ParseCommandLine(System.String)">
            <summary>
            Parse the supplied command-line, ignoring the application name and returning the list
            of arguments in an array.  This differs from the built-in .NET command line parameter
            parsing in that '\\' is not treated as an escape character.  The only recognized
            "special" sequence is that a pair of double quotes inside a quoted string is
            translated to a single double quote.  Other double quote characters are used to
            bound arguments.
            Examples: abc -> abc; a bc -> a, bc; "a bc" -> a bc; "a""bc" -> a"bc; """a""" -> "a"
            </summary>
            <param name="cmdLine">The command line to parse.</param>
            <returns>An array of parsed parameters.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ParseCommandLineArgument(System.String,System.Int32@)">
            <summary>
            Parse the supplied command-line, starting at the given position and return the
            next argument found. The startPos parameter is updated to the new position.
            The only recognized "special" sequence is that a pair of double quotes inside a
            quoted string is translated to a single double quote.
            Other double quote characters are used to bound arguments.
            Examples: abc -> abc; a bc -> a, bc; "a bc" -> a bc; "a""bc" -> a"bc; """a""" -> "a"
            </summary>
            <param name="cmdLine">The command line to parse.</param>
            <returns>The argument found; or null</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.FormatColumnOutput(System.String[],System.String[0:,0:],System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Format contents into tabular columns
            </summary>
            <param name="headers">array of header names (should already be localized)</param>
            <param name="contents">rectangular 2-dimensional array</param>
            <param name="indent">the indentation at the beginning of each line of output</param>
            <param name="lineWidth">the maximum width of each line of output</param>
            <param name="encoding">the console encoding (used for calculating string widths)</param>
            <returns>format to be used with Write() calls for printing out column-based output</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.FormatColumnOutput(System.String[],System.String[0:,0:],System.String,System.Int32[],System.Boolean,System.Text.Encoding)">
            <summary>
            Format contents into tabular columns; the last column is not padded (except of separator)
            </summary>
            <param name="headers">array of header names (should already be localized)</param>
            <param name="contents">rectangular 2-dimensional array</param>
            <param name="indent">the indentation at the beginning of each line of output</param>
            <param name="maxWidths">the maximum width of each column</param>
            <param name="encoding">the console encoding (used for calculating string widths)</param>
            <returns>format to be used with Write() calls for printing out column-based output</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.GetRowFormat(System.String[],System.String,System.Text.Encoding)">
            <summary>
            Generate the block-based format string (already ends in a newline) for displaying
            /format:detailed types of information
            </summary>
            <param name="headers">array of header names (should already be localized)</param>
            <param name="indent">the indentation at the beginning of each line of output</param>
            <param name="encoding">the console encoding (used to calculate string widths)</param>
            <returns>format block (already ends in newline, use Write() instead of WriteLine()</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.GetRowFormat(System.String[],System.String,System.String,System.Text.Encoding)">
            <summary>
            Generate the block-based format string (already ends in a newline) for displaying
            /format:detailed types of information
            </summary>
            <param name="headers">array of header names (should already be localized)</param>
            <param name="indent">the indentation at the beginning of each line of output</param>
            <param name="rowTemplate">string formatter used to format field name and its value</param>
            <param name="encoding">the console encoding (used to calculate string widths)</param>
            <returns>format block (already ends in newline, use Write() instead of WriteLine()</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.GetRowFormat(System.String[],System.String,System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Generate the block-based format string (already ends in a newline) for displaying
            /format:detailed types of information
            </summary>
            <param name="headers">array of header names (should already be localized)</param>
            <param name="indent">the indentation at the beginning of each line of output</param>
            <param name="rowTemplate">string formatter used to format field name and its value</param>
            <param name="encoding">the console encoding (used to calculate string widths)</param>
            <returns>format block (already ends in newline, use Write() instead of WriteLine()</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.GetSecureStringContent(System.Security.SecureString)">
            <summary>
            Converts a SecureString to a String.
            </summary>
            <param name="sec">SecureString that needs to be converted.</param>
            <returns>A converted string or null sec is null.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.CreateSecureString(System.String)">
            <summary>
            Converts a String to a SecureString.
            </summary>
            <param name="str">A string to convert. null is OK.</param>
            <returns>A converted SecureString.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.Truncate(System.String,System.Int32,System.Boolean)">
            <summary>
            Truncates the string to the given number of Unicode (2-byte) characters, without breaking
            across multi-character Unicode text elements such as surrogate pairs or combining
            characters.
            </summary>
            <param name="text">the text to truncate</param>
            <param name="maximumCharacters">the maximum number of Unicode characters allowed</param>
            <param name="addEllipsis">if true, add standard "..." ellipsis if string is truncated</param>
            <returns>a string no wider than width</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.Truncate(System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Truncates the string to the maximum width.
            </summary>
            <param name="text">the text to truncate</param>
            <param name="width">the maximum width</param>
            <param name="encoding">the console encoding (used to calculate string widths)</param>
            <returns>a string no wider than width</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.TruncateToFirstLine(System.String,System.Int32,System.Boolean@)">
            <summary>
            Truncate the value to the first line or <paramref name="maxLength"/>, whichever
            is shorter.
            </summary>
            <remarks>
            Ignores leading and trailing whitespace when determining the first line to return and 
            <paramref name="isTruncated"/>. 
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.TruncateLeft(System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Chops chars from the left until the string fits in the maximum width.
            </summary>
            <param name="text">the text to truncate</param>
            <param name="width">the maximum width</param>
            <param name="encoding">the console encoding (used to calculate string widths)</param>
            <returns>a string no wider than width</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.CalculateColumnsWidth(System.String[],System.String[0:,0:],System.Text.Encoding)">
            <summary>
            Calculates width of the columns as maximum of width of column's header and each of its cell's width.
            The last column's width is calculated only as its header's width.
            </summary>
            <param name="headers">array of header names (should already be localized)</param>
            <param name="contents">rectangular 2-dimensional array</param>
            <param name="encoding">the console encoding (used to calculate string widths)</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.CalculateWidth(System.String,System.Text.Encoding)">
            <summary>
            Given a string, compute the console display width.  The console width is
            determined by the number of bytes needed to represent the text string in the console
            encoding (see the discussion in work item 16710).
            </summary>
            <param name="text">the text</param>
            <param name="encoding">the console encoding</param>
            <returns>the width of the string in the console</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.CalculateWidth(System.Char[],System.Text.Encoding)">
            <summary>
            Given a character array, compute the console display width.  The console width is
            determined by the number of bytes needed to represent the characters in the console
            encoding (see the discussion in work item 16710).
            </summary>
            <param name="chars">the characters</param>
            <param name="encoding">the console encoding</param>
            <returns>the width of the characters in the console</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.FormatInvariant(System.String,System.Object[])">
            <summary>
            Simple wrapper for String.Format(CultureInfo.InvariantCulture, ...).
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.FormatCommentForOneLine(System.String)">
            <summary>
            Format a comment for one line displays.
            This finds the first non blank line and displays up to s_maxCommentDisplayLength
            characters. It handles tabs and new lines as well.
            </summary>
            <param name="comment">The comment to be formatted</param>
            <returns>a formatted comment for one line display</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.FormatCommentForOneLine(System.String,System.Int32)">
            <summary>
            Format a comment for one line displays.
            This finds the first non blank line and displays up to s_maxCommentDisplayLength
            characters. It handles tabs and new lines as well.
            </summary>
            <param name="comment">The comment to be formatted</param>
            <param name="maxCommentDisplayLength">Maximum comment length</param>
            <returns>a formatted comment for one line display</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ContainsIllegalCharacters(System.String,System.String)">
             <summary>
             ContainsIllegalCharacters will check if the stringToValidate contains any of characters
             defined in the set of characters in validCharacters.
            
             NOTE: The overload that takes a HashSet will allow the validation to occur much faster
                 if the caller needs to validate strings multiple times with the same set this is an
                 appraoch with improved performance.
             </summary>
             <param name="stringToValidate">The string that needs to be validated.</param>
             <param name="validCharacters">The set of characters that are allowed in the string.</param>
             <returns>True if the string contains characters that are not in the validCharacters set.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ContainsIllegalCharacters(System.String,System.Collections.Generic.HashSet{System.Char})">
            <summary>
            ContainsIllegalCharacters will check if the stringToValidate contains any of characters
            defined in the set of characters in validCharacters.
            </summary>
            <param name="stringToValidate">The string that needs to be validated.</param>
            <param name="validCharacters">The set of characters that are allowed in the string.</param>
            <returns>True if the string contains characters that are not in the validCharacters set.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.QuoteName(System.String)">
            <summary>
            Returns a string with the delimiters added to make the input string a valid SQL Server delimited identifier.
            This method implements behaviour QUOTENAME (Transact-SQL). It never throws. If parameter is invalid the method returns null.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.QuoteName(System.String,System.Char)">
            <summary>
            Returns a string with the delimiters added to make the input string a valid SQL Server delimited identifier.
            This method implements behaviour QUOTENAME (Transact-SQL). It never throws. If parameter is invalid, the method returns null.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ReplaceTokens(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean@)">
            <summary>
            Replaces the name of each token embedded in the specified string with the string equivalent of the value of the token, then returns the resulting string.
            </summary>
            <param name="text">A string containing the name of zero or more resources. Each resource is quoted with ## characters.</param>
            <param name="tokenPrefix">A string that represent token prefix. Must be non-empty string.</param>
            <param name="tokenSuffix">A string that represent token suffix. Must be non-empty string.</param>
            <param name="tokens">A collection of tokens.</param>
            <param name="replacedAll">When this method returns, contains true if all tokens were replaced; false otherwise.</param>
            <returns>A string with each token replaced by its value.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ReplaceTokens(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.String,System.String},System.Boolean@)">
            <summary>
            Replaces the name of each token embedded in the specified string with the string equivalent of the value of the token, then returns the resulting string.
            </summary>
            <param name="text">A string containing the name of zero or more resources. Each resource is quoted with ## characters.</param>
            <param name="tokenPrefix">A string that represent token prefix. Must be non-empty string.</param>
            <param name="tokenSuffix">A string that represent token suffix. Must be non-empty string.</param>
            <param name="tokens">A collection of tokens.</param>
            <param name="escapeFunction">A function that transforms a token value before putting it into the resulting string.</param>
            <param name="replacedAll">When this method returns, contains true if all tokens were replaced; false otherwise.</param>
            <returns>A string with each token replaced by its value.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ReplaceTokens(System.String,System.String,System.String,System.Func{System.String,System.String},System.Boolean@)">
            <summary>
            Replaces the name of each token embedded in the specified string with the string equivalent of the value of the token, then returns the resulting string.
            </summary>
            <param name="text">A string containing the name of zero or more resources. Each resource is quoted with ## characters.</param>
            <param name="tokenPrefix">A string that represent token prefix. Must be non-empty string.</param>
            <param name="tokenSuffix">A string that represent token suffix. Must be non-empty string.</param>
            <param name="tokenProvider">A callback method that is used to calculate token value. If the method cannot calculate the token value, it must return null.</param>
            <param name="replacedAll">When this method returns, contains true if all tokens were replaced; false otherwise.</param>
            <returns>A string with each token replaced by its value.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.CountSubstrings(System.String,System.String)">
            <summary>
            Counts the number of times substring is found in value
            </summary>
            <param name="value">The string to search within</param>
            <param name="substring">The substring to search for</param>
            <returns>The number of occurances of substring within value</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ConvertToHex(System.Byte[])">
            <summary>
            converts a byte array to a hex string suitable for use as a varbinary in a SQL query
            </summary>
            <param name="byteArray">The byte array</param>
            <returns>The encoded hex string, starting with '0x'</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ConvertFromHexString(System.String)">
            <summary>
            converts the string representation of a SQL varbinary to a byte array
            </summary>
            <param name="hexString">A hex string starting with '0x'</param>
            <returns>The decoded byte array</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ToQuotedStringList``1(System.Collections.Generic.IEnumerable{``0},System.Char)">
            <summary>
            Returns a list of quoted strings, i.e.
            for an input such as string[] { "a", 21, "foo" } the returned string will be "'a', '21', 'foo'"
            </summary>
            <param name="values">values to quote</param>
            <param name="quoteCharacter">Character used to quote, '\'' by default</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.ConvertToAlphaNumericString(System.String)">
            <summary>
            Remove non-alphanumeric charactors from the string
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.StringUtil.IsAlphaNumericOnlyString(System.String)">
            <summary>
            If the input string is alphanumeric only
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Common.Internal.Wildcard">
            <summary>
            A class for comparing strings against wildcards.  This recognizes '*' to mean 0 or more of
            any character and '?' as exactly one of any character.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.Wildcard.Match(System.String,System.String)">
            <summary>
            Compare a string against a wildcard and return true if it matches, false if not.  This
            does a case insensitive compare with the Ordinal culture.
            </summary>
            <param name="str">String to match against the pattern.</param>
            <param name="pattern">Patter (using * and ? for wildcards) to match against.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.Wildcard.IsWildcard(System.String)">
            <summary>
            Return true if the specified string contains wildcard characters.
            </summary>
            <param name="str">String to check.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.Wildcard.IsWildcard(System.String,System.Int32,System.Int32)">
            <summary>
            Return true if the specified region of the specified string contains wildcard characters.
            </summary>
            <param name="str">String to check.</param>
            <param name="index">Index to begin checking.</param>
            <param name="count">Number of characters to check.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.Wildcard.IsWildcard(System.Char)">
            <summary>
            Return true if the specified character is a wildcard character.
            </summary>
            <param name="c">The character to test.</param>
            <returns>true if the character is a * or a ?, false if not.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.#cctor">
            Creates the resource manager instance.
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.Get(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GetInt(System.String)">
            Returns a localized integer given a resource string name.
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GetBool(System.String)">
            Returns a localized string given a resource string name.
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.Format(System.String,System.Object[])">
            A little helper function to alleviate some typing associated with loading resources and
            formatting the strings.  In DEBUG builds, it also asserts that the number of format
            arguments and the length of args match.
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AccessToPathDenied(System.Object)">
            <summary>
            Access to the path &apos;{0}&apos; is denied.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AssertionFailureHeader">
            <summary>
            Debug Assertion
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CannotDeleteDirectoryWithWritableFile(System.Object)">
            <summary>
            The directory {0} cannot be deleted because it contains at least one writable file.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CannotDeleteDirectoryWithContents(System.Object)">
            <summary>
            The directory {0} cannot be deleted because it is not empty.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.Category(System.Object)">
            <summary>
            Category: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CommandFailedWithExitCode(System.Object,System.Object)">
            <summary>
            The program {0} failed with exit code {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EmptyStringNotAllowed">
            <summary>
            The string must have at least one character.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EmptyGuidNotAllowed(System.Object)">
            <summary>
            The guid specified for parameter {0} must not be Guid.Empty.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.Exception">
            <summary>
            Exception: 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ExceptionDataDictionaryReport(System.Object,System.Object)">
            <summary>
            {0} = {1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ExceptionReport(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            {0}Date (UTC): {1}Machine: {2}Application Domain: {3}Assembly: {4}Service Host: {5}Process Details:  Process Name: {6}  Process Id: {7}  Thread Id: {8}  Account name: {9}Detailed Message: {10}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ExceptionReportNoDetails(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            {0}Date (UTC): {1}Machine: {2}Application Domain: {3}Assembly: {4}Service Host: {5}Process Details:  Process Name: {6}  Process Id: {7}  Thread Id: {8}  Account name: {9}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ExceptionSource">
            <summary>
            Azure DevOps
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ExceptionStackTrace(System.Object)">
            <summary>
            Exception Stack Trace: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FileInUse(System.Object)">
            <summary>
            The process cannot access the file &apos;{0}&apos; because it is being used by another process.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FoundDirectoryExpectedFilePath(System.Object)">
            <summary>
            {0} could not be retrieved because a directory by the same name exists locally.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.HeadersAndContentsDontMatch(System.Object,System.Object)">
            <summary>
            headers length ({0}) and number of contents columns ({1}) must match
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.HttpStatusInfo(System.Object,System.Object)">
            <summary>
            HTTP code {0}: {1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.IdentityNotFoundException(System.Object)">
            <summary>
            TF14045: The identity {0} is not a recognized identity.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InnerException">
            <summary>
            Inner Exception Details:
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidComputerName(System.Object)">
            <summary>
            TF10203: The computer name &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidComputerNameTooLong(System.Object,System.Object)">
            <summary>
            TF10204: The computer name &apos;{0}&apos; contains more than {1} characters.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidComputerNameInvalidCharacters(System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidEnumerationValue(System.Object,System.Object)">
            <summary>
            Unknown value {0} for enumeration {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPath(System.Object)">
            <summary>
            TF10121: The path &apos;{0}&apos; is not found or not supported. Type or select a different path.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPathDollarSign(System.Object)">
            <summary>
            TF10122: The path &apos;{0}&apos; contains a &apos;$&apos; at the beginning of a path component. Remove the &apos;$&apos; and try again.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPathTooLong(System.Object)">
            <summary>
            TF205022: The following path contains more than the allowed 259 characters: {0}. Specify a shorter path.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidServerPathTooLong(System.Object)">
            <summary>
            TF400889: The following path contains more than the allowed 259 characters: {0}. Specify a shorter path.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPathTooLongVariable(System.Object,System.Object)">
            <summary>
            TF205023: The following path is not valid: {0}. The path contains the following number of characters: {1}. Specify a shorter path.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPathInvalidChar(System.Object,System.Object)">
            <summary>
            TF10123: The path &apos;{0}&apos; contains the character &apos;{1}&apos;. Remove the &apos;{1}&apos; and try again.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPathInvalidCharacters(System.Object)">
            <summary>
            TF10200: The path &apos;{0}&apos; contains one or more characters which are not allowed. Characters which are not allowed include &apos;&quot;&apos;, &apos;/&apos;, &apos;:&apos;, &apos;&lt;&apos;, &apos;&gt;&apos;, &apos;\&apos;, and &apos;|&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPathInvalidCharactersAndWildcards(System.Object)">
            <summary>
            TF205000: The path &apos;{0}&apos; contains one or more characters which are not allowed. Characters which are not allowed include &apos;&quot;&apos;, &apos;/&apos;, &apos;:&apos;, &apos;&lt;&apos;, &apos;&gt;&apos;, &apos;\&apos;, &apos;|&apos;, &apos;?&apos;, and &apos;*&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPathTermination(System.Object)">
            <summary>
            TF10202: The path &apos;{0}&apos; ends with a character which is not allowed. Characters which are not allowed include &apos;.&apos; and &apos; &apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidServerResponse(System.Object)">
            <summary>
            Please contact your administrator. There was an error contacting the server.Technical information (for administrator):  {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidTraceFile(System.Object,System.Object)">
            <summary>
            TF30048: The file {0} specified to store the trace output could not be found or created. Confirm that the file name is correct and that your user account has permission to access the file: {1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidUserName(System.Object)">
            <summary>
            TF10132: {0} is not a supported user name.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ListenerInitializeError(System.Object)">
            <summary>
            TF30049: Azure DevOps Server encountered an error initializing listener {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.LogExceptionHeader(System.Object,System.Object)">
            <summary>
            Exception Message: {0} (type {1})
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.LogExceptionDataDictionary(System.Object)">
            <summary>
            Exception Data Dictionary:{0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.Method(System.Object)">
            <summary>
            Method: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AColonB(System.Object,System.Object)">
            <summary>
            {0}: {1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PathIsNotADirectory(System.Object)">
            <summary>
            The path {0} is not a directory.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.StackFrameHeader(System.Object,System.Object)">
            <summary>
            at {0}.{1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.StackFrameLineFormat(System.Object,System.Object)">
            <summary>
            {0} (line {1})
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SqlExceptionError(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            SQL Error[{0}]: {1}    Class: {2}    Number: {3}    Server: {4}    Source: {5}    State: {6}    Procedure: {7}    Line Number: {8}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SqlExceptionReport(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            SQL Exception Class: {0}SQL Exception Number: {1}SQL Exception Procedure: {2}SQL Exception Line Number: {3}SQL Exception Server: {4}SQL Exception State: {5}SQL Error(s):{6}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SoapExceptionReport(System.Object)">
            <summary>
            SoapException Details: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WebExceptionReport(System.Object,System.Object,System.Object)">
            <summary>
            Status: {0}Response Status Code: {1}Response Status Message: {2}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WebExceptionReport_ResponseDisposed(System.Object)">
            <summary>
            Status : {0}Response already disposed, no additional information available.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.StringLengthExceedsLimit">
            <summary>
            The String length exceeds maximum limit.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.StringPatternDidNotMatch(System.Object)">
            <summary>
            The String pattern did not match: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TraceSettingArgumentException(System.Object)">
            <summary>
            TF30061: The trace switch {0} is not a valid Azure DevOps Server trace switch.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TraceStartMessage(System.Object,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TraceStopMessage(System.Object,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TraceToggleException">
            <summary>
            TF30062: An error occurred while manipulating the trace state of the application
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.Unauthorized(System.Object)">
            <summary>
            TF30063: You are not authorized to access {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnableToContactService">
            <summary>
            TF53016: Unable to contact the web service; examine the event log for other correlating entries.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnableToRunApp(System.Object)">
            <summary>
            The application &quot;{0}&quot; could not be executed.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnableToRetrieveRegistrationInfo(System.Object)">
            <summary>
            Unable to retrieve the registration information for &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnauthorizedUnknownServer">
            <summary>
            TF30064: You are not authorized to access the server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UserNameAndPasswordRequiredForLoginTypeOAuth">
            <summary>
            Both a username and password must be explicitly provided when using /logintype:oauth.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UserNameAndPasswordRequiredForLoginTypeServiceIdentity">
            <summary>
            Both a username and password must be explicitly provided when using /logintype:serviceidentity.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonMainPleaRegular">
            <summary>
            We have created an error report that you can send to help us fix bugs. We will treat this report as confidential and anonymous.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonMainIntroBold">
            <summary>
            TF30069: An unexpected condition has occurred.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonMainIntroRegular">
            <summary>
            TF30070: An unexpected condition has occurred in the Azure DevOps Server. Information about the condition has been gathered.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonMainPleaBold">
            <summary>
            Please tell Microsoft about this problem.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonEventDescription(System.Object)">
            <summary>
            TF30068: An exception has occurred in an Azure DevOps component: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonReportBeingPrepared">
            <summary>
            TF53012: A crash report is being prepared for Microsoft using the Watson Crash Reporting Mechanism. The prepared report will be queued when ready and may be sent to Microsoft through administrator control.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonReportException">
            <summary>
            TF30071: Unable to create and file a Watson report.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonReportInformation(System.Object)">
            <summary>
            TF53013: A crash report is being prepared for Microsoft. The following information is included in that report:{0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonReportNotFiled(System.Object)">
            <summary>
            TF53014: A crash report for this problem was recently created; a new crash report for this occurrence of the problem is not being created. This problem has occurred {0} times.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WatsonReportReady">
            <summary>
            TF53015: A crash report has been prepared for Microsoft using the Watson Crash Reporting Mechanism. The prepared report has been queued and may be sent to Microsoft through administrator control.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WildcardsNotAllowed">
            <summary>
            Wildcards are not allowed.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.VersionCheckFailed(System.Object)">
            <summary>
            TF53000: The client version is not supported by the server {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.RegistrationDataUnavailable(System.Object)">
            <summary>
            TF53002: Unable to obtain registration data for application {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.VersionCheckFailedRange(System.Object,System.Object)">
            <summary>
            TF53003: The client version is not supported by the server {0}. Supported range is {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnsupportedLinkFilter(System.Object)">
            <summary>
            TF54001: An unsupported link filter type {0} was specified.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicesUnavailable(System.Object,System.Object)">
            <summary>
            TF400324: Azure DevOps services are not available from server {0}.Technical information (for administrator):  {1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicesUnavailableNoServer(System.Object)">
            <summary>
            TF400324: Azure DevOps services are not available from the server.Technical information (for administrator):  {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DatabaseMissingErrorMessages(System.Object)">
            <summary>
            TF205005: One or more of the installed error messages for Azure DevOps Server cannot be found. Either the SQL Server instance has not been configured to work with Azure DevOps Server, or a configuration change has caused a conflict. In order to fix this problem, you must run the TFSConfig PrepSQL command on the SQL Server instance. Detailed error information: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AccessCheckExceptionTokenFormat(System.Object,System.Object,System.Object)">
            <summary>
            Access Denied: {0} needs the following permission(s) on the resource {1} to perform this action: {2}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidOperationOnNonHierarchicalNamespace">
            <summary>
            TF205044: This function must be called on a hierarchical security namespace.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidSecurityNamespaceGuid(System.Object)">
            <summary>
            TF205045: No security namespace exists with the following ID: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ReadOnlySecurityCollectionExceptionMessage">
            <summary>
            Invalid attempt to write to collection, it is read only.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidTokenSplitType">
            <summary>
            A split cannot be performed on a resource that has a SecurityTokenSplitType of NoSplit.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SecurityIdentityNotFoundMessage(System.Object)">
            <summary>
            The guid {0} that was provided to the security system was not found.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceForFilterNotFoundWithIdentifier(System.Object,System.Object)">
            <summary>
            TF205041: No services exist with the specified type and identifier. Type: {0}. Identifier: {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.OperationNotSupportedMessage(System.Object,System.Object)">
            <summary>
            The function: &apos;{0}&apos; within the service: &apos;{1}&apos;  is not supported by the server this client is talking to.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ErrorReadingFile(System.Object,System.Object)">
            <summary>
            Error reading file: {0} ({1}).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DuplicateLocationMappingMessage">
            <summary>
            Only one location mapping can exist on a service definition for a given access mapping.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidServiceTypeOnRegister(System.Object)">
            <summary>
            TF205036: A service cannot be registered with the following service type: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceForFilterNotFound(System.Object)">
            <summary>
            TF205040: No services exist with the following type: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidServiceDefinitionMissingMapping(System.Object,System.Object)">
            <summary>
            The service definition for service {0} is missing the location of the service for the access mapping {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidFullyQualifiedServiceDefinition(System.Object)">
            <summary>
            TF205043: A service definition exists with the following RelativeToSetting value: {0}. Any service definition that has this RelativeToSetting value must have its RelativePath property value set to null.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidRelativeServiceDefinition(System.Object)">
            <summary>
            A service definition with a RelativeToSetting of &apos;{0}&apos; must have a RelativePath property that is not null.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidIdentifierOnUpdate">
            <summary>
            When updating a service definition, make sure the identifier is properly set. The best way to do this is to retrieve the existing IServiceDefinition from the client object model.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidLocationServiceUrlRelativePath(System.Object,System.Object)">
            <summary>
            The location service url &apos;{0}&apos; is invalid. The location service url passed in must end with &apos;{1}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidSecurityNamespaceDescriptionMessage">
            <summary>
            For a hierarchical security namespace, either the separator character or the element length must be set and the other one must be the invalid value (&apos;\0&apos; for the separator character and -1 for the element length).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AccessMappingAlreadyRegistered(System.Object)">
            <summary>
            TF205033: The &quot;AccessMapping&quot; class has a value for the &quot;Moniker&quot; property that is not valid. The value for &quot;Moniker&quot; must be unique, but another property already has the following value: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.XmlNodeMissing(System.Object,System.Object)">
            <summary>
            The mandatory xml node &apos;{0}&apos; is missing under &apos;{1}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.XmlNodeEmpty(System.Object,System.Object)">
            <summary>
            The xml node &apos;{0}&apos; under node &apos;{1}&apos; cannot be empty
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AccessMappingNotRegistered(System.Object)">
            <summary>
            TF205034: The &quot;AccessMapping&quot; class has an unregistered value for the &quot;Moniker&quot; property. The following value has not been registered: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceDefinitionWithNoLocations(System.Object)">
            <summary>
            TF205046: The service with the following type does not have a location mapping: {0}. You must provide at least one location in order to configure locations for an external service.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FullyQualifiedLocationParameter">
            <summary>
            The value of the location parameter cannot be null if the RelativeToSetting is &apos;FullyQualified&apos;
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.RelativeLocationMappingErrorMessage">
            <summary>
            TF205038: You cannot add location mappings to service definitions that are not part of the FullyQualified type.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.XmlAttributeEmpty(System.Object,System.Object)">
            <summary>
            The attribute &apos;{0}&apos; on node &apos;{1}&apos; cannot be empty
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.XmlAttributeNull(System.Object,System.Object)">
            <summary>
            The node &apos;{0}&apos; must only have the attribute &apos;{1}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidServiceDefinitionToolId">
            <summary>
            The ToolId property for a service definition cannot be the empty string. To represent the service definition not having a tool id, pass null.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ConfigFileException">
            <summary>
            The configuration file failed to load.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DuplicateRegistrationEntry(System.Object)">
            <summary>
            Duplicate registration entry in configuration file: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.RegistrationEntryTypeMissing">
            <summary>
            Registration entry type missing.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceInterfacesDepricated">
            <summary>
            Service Interfaces are no longer valid entries in Registration configuration files. Service Interfaces should be entered using the Location Service configuration files.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.XmlRootNodeMissing(System.Object)">
            <summary>
            The mandatory root node &apos;{0}&apos; is missing.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CorruptRegistrationData(System.Object,System.Object)">
            <summary>
            The registry data near &apos;{0}&apos; appears to be invalid. An entry with a name of &apos;{1}&apos; was expected.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnableToRetrieveLocationInfo(System.Object)">
            <summary>
            Unable to retrieve the location service information for &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceDefinitionDoesNotExist(System.Object,System.Object)">
            <summary>
            The service definition with service type &apos;{0}&apos; and identifier &apos;{1}&apos; does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceDefinitionWithoutIdentifierDoesNotExist(System.Object)">
            <summary>
            TF205039: No service definition exists with the following service type: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidFindServiceByTypeAndToolId(System.Object,System.Object,System.Object)">
            <summary>
            TF205042: Two or more service definitions are in conflict. The specified parameters were found in the following number of service definitions: {2}. Service definitions must have unique parameters for the combination of ServiceType and ToolID in order to call this function. ServiceType: {0}. ToolID: {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidAccessMappingLocationServiceUrl">
            <summary>
            TF205035: The access mapping is not valid and cannot be registered. The location service URL cannot be null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SingletonServiceDefinitionViolation(System.Object)">
            <summary>
            The service definition with type &apos;{0}&apos; could not be registered because it would violate the singleton service definition constraint. Either a singleton service definition of this type is already registered or this is a singleton definition and other service definitions of this type are already registered.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.LocationMappingDoesNotExist(System.Object,System.Object,System.Object)">
            <summary>
            TF205037: No location mapping exists with the specified parameters. You specified a location mapping with the following service type, service identifier, and moniker: {0}, {1}, {2}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.BAD_ACCOUNT_NAME(System.Object)">
            <summary>
            TF205024: The following organization name is not valid: &apos;{0}&apos;. For more information about valid naming conventions for organizations, see the topic &quot;Naming Restrictions for Azure DevOps Server&quot; on the Microsoft Web site (https://go.microsoft.com/fwlink/?LinkId=77936).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.BAD_DISPLAY_NAME(System.Object)">
            <summary>
            TF205025: The following display name is not valid: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.BAD_GROUP_NAME(System.Object)">
            <summary>
            TF50241: The following Azure DevOps group name is not valid: &apos;{0}&apos;. For more information about valid naming conventions for Azure DevOps groups, see the topic &quot;Naming Restrictions for Azure DevOps Server&quot; on the Microsoft Web site (https://go.microsoft.com/fwlink/?LinkId=77936).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.BAD_GROUP_DESCRIPTION(System.Object)">
            <summary>
            TF50250: Invalid group description (&apos;{0}&apos;).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.BAD_SID(System.Object,System.Object)">
            <summary>
            TF50360: Argument {1} contains an invalid SID (&apos;{0}&apos;).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CannotCreateOrphanedResource">
            <summary>
            TF205026: One or more resources that you specified cannot be created. All resources must be referenced by at least one node. In order to create a new resource, make sure that it is attached to a node that is either being created or being updated.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CatalogNodeDoesNotExist">
            <summary>
            TF205027: The catalog node that you specified either does not exist, or you do not have sufficient permissions to access it.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CatalogResourceDoesNotExist(System.Object)">
            <summary>
            TF205028: An error occurred when attempting to access the catalog resource with the following name: {0}. Either the resource does not exist, or you do not have sufficient permissions to access it.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CatalogResourceTypeDoesNotExist(System.Object)">
            <summary>
            TF205029: No catalog resource type exists with the following identifier: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidUnicodeCharacter(System.Object)">
            <summary>
            TF20507: The string argument contains a character that is not valid: U+{0:X4}. Correct the argument, and then try the operation again.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PropertyArgumentExceededMaximumSizeAllowed(System.Object,System.Object)">
            <summary>
            TF20508: The argument &apos;{0}&apos; is too long. It must not contain more than &apos;{1}&apos; characters.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPropertyValueSize(System.Object,System.Object,System.Object)">
            <summary>
            TF20509: The value of property &apos;{0}&apos; exceeds the maximum size allowed. &apos;{1}&apos; values must not exceed &apos;{2}&apos; bytes.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PropertyInvalidVersionSpecification(System.Object)">
            <summary>
            TF20510: The following version specification is not valid: &apos;{0}&apos;. You must specify a valid version.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnsupportedPropertyType(System.Object)">
            <summary>
            TF20511: The property type &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.MultipleExtensionNames">
            <summary>
            Warning: Azure DevOps Extension has multiple ExtensionName attributes. Using full class name as extension name.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ExtensionNameNullOrEmpty">
            <summary>
            Warning: Extension name is null or empty. Using full class name as extension name.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DuplicateExtensionNameError(System.Object,System.Object,System.Object)">
            <summary>
            Extension name {0} is used by type {1} and {2}. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnsupportedPropertyValue(System.Object,System.Object,System.Object)">
            <summary>
            Property &apos;{0}&apos; value &apos;{1}&apos; of type &apos;{2}&apos; is not supported by Azure DevOps Properties.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SharePointServiceAccountsGroupDescription">
            <summary>
            This application group should only contain service accounts for SharePoint Web applications.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FailedToMapPropertyKindToArtifactKind(System.Object)">
            <summary>
            Could not find the artifact type for property kind &apos;{0}&apos;. The property kind was not properly defined.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SharePointServiceAccountsGroupName">
            <summary>
            SharePoint Web Application Services
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.IllegalIdentityException(System.Object)">
            <summary>
            TF10158: The user or group name {0} contains unsupported characters, is empty, or too long.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.Ellipsis(System.Object)">
            <summary>
            {0}...
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SparseTreeTokenAlreadyExists">
            <summary>
            A node with the same token already exists in the SparseTree.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SparseTreeNoEmptyStringToken">
            <summary>
            Empty string tokens are not supported with a fixed element length.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidCatalogNodePathAllowWildcard(System.Object)">
            <summary>
            TF205030: The following catalog node path is not valid: {0}. Catalog node paths must be built from base-64 encoded Guids, cannot exceed 37 levels, and can contain only the wildcards *, **, and … at the end of the path.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidCatalogNodePathNoWildcard(System.Object)">
            <summary>
            TF205031: The following catalog node path is not valid: {0}. Catalog node paths must be built from base-64 encoded Guids, cannot exceed 37 levels, and cannot contain wildcards.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepNotExecuted(System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; is not executed. (ServicingOperation: &apos;{1}&apos;; Step group: &apos;{2}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ExecutingServicingStep(System.Object,System.Object,System.Object)">
            <summary>
            Executing servicing step &apos;{0}&apos;. (ServicingOperation: {1}; Step group: {2})
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepFailed(System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; failed. (ServicingOperation: &apos;{1}&apos;; Step group: &apos;{2}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepPassed(System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; passed. (ServicingOperation: &apos;{1}&apos;; Step group: &apos;{2}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepPassedWithWarnings(System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; passed, with warnings. (ServicingOperation: &apos;{1}&apos;; Step group: &apos;{2}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepPassedWithSkipChildren(System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; passed, and marked its children steps to be skipped. (ServicingOperation: &apos;{1}&apos;; Step group: &apos;{2}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepStateChange(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; state changed to &apos;{1}&apos;. (ServicingOperation: &apos;{2}&apos;; Step group: &apos;{3}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepValidated(System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; was validated. (ServicingOperation: &apos;{1}&apos;; Step group: &apos;{2}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepValidatedWithWarnings(System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; was validated, with warnings. (ServicingOperation: &apos;{1}&apos;; Step group: &apos;{2}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ValidatingServicingStep(System.Object,System.Object,System.Object)">
            <summary>
            Validating servicing step {0}. (ServicingOperation: {1}; Step group: {2})
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingStepSkipped(System.Object,System.Object,System.Object)">
            <summary>
            Servicing step &apos;{0}&apos; skipped. (ServicingOperation: &apos;{1}&apos;; Step group: &apos;{2}&apos;)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CollectionDoesNotExist(System.Object)">
            <summary>
            The collection with id &apos;{0}&apos; does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidRegistryValue(System.Object,System.Object)">
            <summary>
            The type converter for type {0} must support conversion from the source type to {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GlobalSecurityAdministerConfigurationPermission">
            <summary>
            Administer Configuration
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AccessCheckExceptionPrivilegeFormat(System.Object,System.Object)">
            <summary>
            Access Denied: {0} needs the following permission(s) to perform this action: {1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.SharePointServiceAccountsGroupNotFound(System.Object)">
             <summary>
             {0} will be filled in with the value from CommonResources.SharePointServiceAccountsGroupName
            
             TF249022: The following group could not be found: {0}. Verify that the group name is correct.
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FailedToAddSharePointServiceAccount(System.Object,System.Object)">
            <summary>
            TF205015: Required permissions could not be granted to the service account for the SharePoint Web application in Azure DevOps Server. The service account is for the following SharePoint Web application: {0}. Open the Azure DevOps Administration Console and make sure that the service account is a member of the following group: {1}. If necessary, manually add the service account to that group.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FailedToAddSharePointServiceAccountWithException(System.Object,System.Object,System.Object)">
            <summary>
            TF205016: Required permissions could not be granted to the service account for the SharePoint Web application in Azure DevOps Server. The following error occurred: {2}. The service account is for the following SharePoint Web application: {0}. Open the Azure DevOps Administration Console and make sure that the service account is a member of the following group: {1}. If necessary, manually add the service account to that group. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FailedToMapWssBackToTfsWithException(System.Object,System.Object)">
            <summary>
            TF205018: An error occurred when attempting to save the mapping from the SharePoint Web application to Azure DevOps Server. The SharePoint Web application is: {0}. The error is: {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FailedToAutoConfigureSharePointWebApplication(System.Object,System.Object)">
            <summary>
            TF205019: An error occurred when attempting to automatically configure the following resource: {0}. The error is: {1}. 
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPathMissingRoot(System.Object)">
            <summary>
            The path &apos;{0}&apos; must start with $/.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TeamSystemWebAccessUrlIsMissing(System.Object)">
            <summary>
            &apos;{0}&apos; is missing. Please verify that Team Web Access is configured correctly.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ApplicationUrlIsNotInitialized">
            <summary>
            ApplicationUrl is not initialized.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CollectionIdIsNotInitialized">
            <summary>
            CollectionId is not initialized.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkEventingServiceDescription">
            <summary>
            Event Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkIdentityServiceDescription">
            <summary>
            Identity Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkIdentityService2Description">
            <summary>
            Identity Service Version 2 for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkJobServiceDescription">
            <summary>
            Job Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkLocationServiceDescription">
            <summary>
            Location Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkMessageQueueServiceDescription">
            <summary>
            Message Queue Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkPropertyServiceDescription">
            <summary>
            Property Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkRegistryServiceDescription">
            <summary>
            Registry Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkSecurityServiceDescription">
            <summary>
            Security Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkMethodologyServiceDescription">
            <summary>
            Methodology Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkMethodologyUploadServiceDescription">
            <summary>
            Methodology Upload Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkProcessTemplateServiceDescription">
            <summary>
            Process Template Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkStrongBoxServiceDescription">
            <summary>
            StrongBox Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkStrongBoxFileUploadServiceDescription">
            <summary>
            StrongBox File Upload Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkStrongBoxFileDownloadServiceDescription">
            <summary>
            StrongBox File Download Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CatalogServiceDescriptrion">
            <summary>
            Catalog Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CollectionManagementServiceDescription">
            <summary>
            Team Project Collection Management Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkAdministrationServiceDescription">
            <summary>
            Administration Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServicingResourceUploadServiceDescription">
            <summary>
            Servicing Resource Upload Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkAccessControlServiceDescription">
            <summary>
            Access Control Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AccessMappingIsDefaultMessage(System.Object)">
            <summary>
            TF205032: You cannot delete the following access mapping: {0}. This mapping is the default access mapping. To delete it, you must first specify another access mapping as the default.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FailedToAutoActivateSharePointWebApplicationFeature(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            TF205021: A feature could not be activated in the following Web application: {0}. The feature is {1}. This feature is part of the following solution: {2}. Without this feature, project dashboards will not function correctly. Verify that the solution has been deployed to the SharePoint farm, and that the feature has been activated in SharePoint Central Administration. The server returned the following error: {3}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NullArtifactUrlInUrlList">
            <summary>
            A null artifact url was found in the url list. Do not pass in a null artifact url.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WorkItemOnlyViewUsersGroupName">
            <summary>
            Work Item Only View Users
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WorkItemOnlyViewUsersGroupDescription">
            <summary>
            Members of this group can only use the Work Item Only View feature in Web Access.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CannotDetachFailedInitializeCollection(System.Object)">
            <summary>
            TF205047: You cannot detach this team project collection because it has at least one failed servicing operation of the following type: {0}. The operation must be completed before the collection can be detached. You can also choose to delete this collection using the &apos;TfsConfig.exe collection&apos; command.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FailureGetArtifactWithTool(System.Object)">
            <summary>
            Unable to get artifacts from tool: {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.MemoryCacheListKeyAlreadyPresent">
            <summary>
            TF205049: The key that you supplied is already present in MemoryCacheList.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnableToEstablishConnection">
            <summary>
            Unable to establish a connection with the Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_AccessZoneNotFound(System.Object)">
            <summary>
            TF249003: The following access mapping was not found: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_AdministratorsMessage(System.Object)">
            <summary>
            Administrators: For more information about how to configure or enable this option, see the {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_CollectionOrganizationalNodeNotFound">
            <summary>
            TF249006: The organizational node for the project collection could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_DefaultSiteCreationLocationNotConfigured">
            <summary>
            No default location for site creation has been configured for this project collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_DefaultSiteCreationLocationNotConfiguredSubTitle">
            <summary>
            Your server administrator has not configured a default location for site creation for this project collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_DefaultZoneRequiresAllPaths(System.Object,System.Object)">
            <summary>
            TF249007: The default zone must have paths specified for the following parameters: {0}, {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_HelpLink">
            <summary>
            Microsoft Web Site
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_NoUriForCurrentZone(System.Object)">
            <summary>
            TF249046: The URL could not be resolved for the following service: {0}. Service zone and location information might not be configured for your current location, or the configuration might contain errors. An administrator for Azure DevOps Server must create and verify the settings for the service zone.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_PortalOwnerInfo(System.Object,System.Object)">
             <summary>
             This is inserted into the {0} spot in EntityModel_TakeSiteOwnershipConfirmation
            
             Project Portal for the &apos;{0}&apos; Project in the &apos;{1}&apos; Project Collection
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_PortalSiteNotConfigured">
            <summary>
            No team project portal has been configured for this project.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_PortalSiteNotConfiguredSubTitle">
            <summary>
            Your project administrator has not configured a portal for this team project.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ProcessGuidanceNotConfigured">
            <summary>
            No process guidance has been configured for this project.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ProcessGuidanceNotConfiguredSubTitle">
            <summary>
            Your project administrator has not configured process guidance for this team project.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ProjectIdNotFound(System.Object)">
            <summary>
            TF249013: No team project could be found in the catalog with the following ID: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ProjectUriNotFound(System.Object)">
            <summary>
            TF249040: The catalog does not contain a team project with the following URL: {0}. Verify that the specified URL is correct.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ReadOnly">
            <summary>
            TF249015: The object could not be updated because it is read-only.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ReportingCubeInvalid">
            <summary>
            TF249016: Reports could not be configured for the server. The Visual Studio Team System cube does not point to the data warehouse already specified for SQL Server Reporting Services.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ReportingNotConfigured">
            <summary>
            Reports have not been enabled for this project collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ReportingNotConfiguredSubTitle">
            <summary>
            Your server administrator has not enabled reports for this project collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ServiceDefinitionNotFound(System.Object)">
            <summary>
            TF249019: The following service definition was not found: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_WebAccessNotConfigured">
            <summary>
            Team Web Access has not been enabled.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_WebAccessNotConfiguredSubTitle">
            <summary>
            Your server administrator has not enabled Web access to this server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_BadBooleanFormat">
            <summary>
            TF205050: The Boolean value is not formatted correctly.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_BadEnumFormat">
            <summary>
            TF205051: The enumeration value is not valid. It is either not formatted correctly or it has an unknown enumeration value.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_BadGuidFormat">
            <summary>
            TF205052: The GUID value is not formatted correctly.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_BadInt32Format">
            <summary>
            TF205053: The Int32 value is not formatted correctly.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_DataDefinesUnsupportedSchema">
            <summary>
            TF205054: The data defines an unsupported schema.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_DataDoesNotDefineSchema">
            <summary>
            TF205055: The data does not define a schema.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_IncompatibleType">
            <summary>
            TF205056: The item is not a compatible type.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_InvalidInstanceId">
            <summary>
            TF205057: The instance ID is not valid.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_InvalidObjectRefValue_BadFormat">
            <summary>
            TF205058: The object reference value is not formatted correctly.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_InvalidObjectRefValue_BadIdentifier">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_InvalidObjectRefValue_UnknownIdentifier">
            <summary>
            TF205060: The object reference value is not valid. No such identifier exists.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_MustDeriveFromTfsObject">
            <summary>
            TF205061: The type must be inherited from the TfsObject class.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_SessionMissing">
            <summary>
            TF205062: The object is not bound to a session.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_TooManyFieldValues">
            <summary>
            TF205063: The object has more field values than are allowed within the specified schema.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_UnknownType(System.Object)">
            <summary>
            TF205064: The following type is not known: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_AlreadyBoundToAnotherSession">
            <summary>
            TF205065: The object is already bound to another session.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_AlreadyHasParent">
            <summary>
            TF205066: The value already has a parent. You can only set a parent on a new item.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_CannotResolveUriWithoutSession">
            <summary>
            TF205067: The object is not bound to a session. The location service is not available to resolve the URL.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_FieldFiltersNotSupported">
            <summary>
            TF205068: Field filters are not supported when querying the hierarchy in the catalog.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_ParentCannotChange">
            <summary>
            TF205069: The parent cannot be changed once it is set.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_RefreshNotAvailable">
            <summary>
            TF205070: The object is not bound to a session. Refresh is not available.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_SecurityNamespaceNotAvailable">
            <summary>
            TF205071: The security namespace is not available within the current context.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.EntityModel_UnsupportedDerivedType">
            <summary>
            TF205072: The data type for the server object is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.WebAccess_UnSupportedArtifactType(System.Object)">
            <summary>
            Unsupported artifact type: {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidAsynchronousOperationParameter(System.Object)">
            <summary>
            Invalid asynchronous operation specified for parameter {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DequeueTimeout(System.Object)">
            <summary>
            The asynchronous dequeue operation timed out after {0}. This timeout may be a portion of a larger timeout.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TeamByIdDoesNotExist(System.Object)">
            <summary>
            TF400461: TeamFoundation Team with Id {0} does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TeamByNameDoesNotExist(System.Object)">
            <summary>
            TF400460: TeamFoundation Team with Name {0} does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkIdentityManagementWebDescription">
            <summary>
            Identity Management Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkFileHandlerServiceDescription">
            <summary>
            File Handler Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkDownloadServiceDescription">
            <summary>
            Download Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkSecurityManagementWebDescription">
            <summary>
            Security Management Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ProjectCollectionContributorsGroupName">
            <summary>
            Project Collection Contributors
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ProjectCollectionContributorsGroupDesc">
            <summary>
            Members of this group can connect to the collection, view its information and create workspaces in version control
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PublicAccessMappingDisplayName">
            <summary>
            Public Access Mapping
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServerAccessMappingDisplayName">
            <summary>
            Server Access Mapping
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AlternateAccessMappingDisplayName">
            <summary>
            Alternate Public Access Mapping
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TextLoggerInfoLine(System.Object)">
            <summary>
            [Info] {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TextLoggerWarningLine(System.Object)">
            <summary>
            [Warn] {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TextLoggerErrorLine(System.Object)">
            <summary>
            [Error] {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.IdentityPropertyReadOnly(System.Object)">
            <summary>
            {0} is a read-only identity property
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServerIncompatible(System.Object)">
            <summary>
            TF205073: The Azure DevOps client cannot connect to the following server: {0}. You must connect to Team Foundation Server 2008 or a later version.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPropertyScope">
            <summary>
            Invalid IdentityPropertyScope for requested operation.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidStringPropertyValueNullAllowed(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            &quot;{0}&quot; is an invalid value for the {1} of a {2}. The text must be null or between {3} and {4} characters long.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidStringPropertyValueNullForbidden(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            &quot;{0}&quot; is an invalid value for the {1} of a {2}. The text must be between {3} and {4} characters long and cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ValueTypeOutOfRange(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            {0} is out of range for the {1} of a {2}. The value must be between {3} and {4}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PropertyValueOutOfRange(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Property &apos;{0}&apos; with value &apos;{1}&apos; is out of range for the Azure DevOps Properties service. The value must be between {2} and {3}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnsupportedPropertyValueType(System.Object,System.Object)">
            <summary>
            Property &apos;{0}&apos; of type &apos;{1}&apos; is not supported by Azure DevOps Properties. Convert the value to an Int32, DateTime, Double, String or Byte array for storage.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DoubleValueOutOfRange(System.Object,System.Object)">
            <summary>
            Property &apos;{0}&apos; with value &apos;{1}&apos; is out of range for the Azure DevOps Properties service. Double values must be 0, within -1.79E+308 to -2.23E-308, or within 2.23E-308 to 1.79E+308.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeKindMustBeSpecified">
            <summary>
            The DateTimeKind (Local, UTC) must be specified for DateTime arguments.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoAMinute">
            <summary>
            a minute ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoLessThanMinute">
             <summary>
             Keep the translation short. The UI will break to a new line if long.
            
             just now
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoMinutes(System.Object)">
            <summary>
            {0} minutes ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoADay">
            <summary>
            a day ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoAMonth">
            <summary>
            a month ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoAnHour">
            <summary>
            an hour ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoAWeek">
            <summary>
            a week ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoAYear">
            <summary>
            a year ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoDays(System.Object)">
            <summary>
            {0} days ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoHours(System.Object)">
            <summary>
            {0} hours ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoMonths(System.Object)">
            <summary>
            {0} months ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoWeeks(System.Object)">
            <summary>
            {0} weeks ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.DateTimeAgoYears(System.Object)">
            <summary>
            {0} years ago
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TimeStampTodayAt(System.Object)">
             <summary>
              {0} is a short time. Example: 'Today at 12:23 PM'
            
             Today at {0}
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TimeStampYesterdayAt(System.Object)">
             <summary>
              {0} is a short time. Example: 'Yesterday at 12:23 PM'
            
             Yesterday at {0}
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TimeStampDayAt(System.Object,System.Object)">
             <summary>
              {0} is the day of week . {1} is a short time. Example: 'Monday at 12:23 PM'
            
             {0} at {1}
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.TimeStampFullDate(System.Object,System.Object)">
             <summary>
               {0} is the day of week. {1} is a date and time. Example: 'Monday, 10/06/2010, 12:23 PM'
            
             {0}, {1}
             </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.UnauthorizedUserForReauthentication">
            <summary>
            TF400459: You are not allowed to change users when re-authenticating.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkAreasManagementWebDescription">
            <summary>
            Work Item Areas Management Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkIterationsManagementWebDescription">
            <summary>
            Work Item Iterations Management Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkNewTeamProjectWebDescription">
            <summary>
            New Team Project Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidPropertyName(System.Object)">
            <summary>
            TF400458: Invalid property name: &apos;{0}&apos;. Property names cannot contain leading or trailing whitespace.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PerformanceCounterCategoryNotRegistered(System.Object)">
            <summary>
            Perfromance counter category {0} has not been registered
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkProjectAlertsWebDescription">
            <summary>
            Project Alerts Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkTaskBoardWebDescription">
            <summary>
            Team Task board Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_ARGUMENT_EXCEPTION(System.Object)">
            <summary>
            TF50606: Argument {0} is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_ACCOUNT_NAME_ARRAY(System.Object)">
            <summary>
            TF50371: Argument {0} is zero length, there must be at least one account name element.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_ACTIONID(System.Object,System.Object)">
            <summary>
            TF50369: Argument {1} contains an invalid action identifier (&apos;{0}&apos;).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_ACTIONID_ARRAY(System.Object)">
            <summary>
            TF50370: Argument {0} is zero length, there must be at least one action identifier element.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_CLASSID_ACTIONID_PAIR_EXCEPTION(System.Object,System.Object)">
            <summary>
            TF50365: The combination of the class ID and the Action ID is not valid. Class ID: &apos;{0}&apos;. Action ID: &apos;{1}&apos;.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_DISTINGUISHED_NAME(System.Object)">
            <summary>
            TF50364: The following distinguished name (DN) is not formatted correctly or contains an empty string: &apos;{0}&apos;. Make sure that the formatting for the distinguished name is correct for LDAP API naming conventions. For more information, see the topic &quot;Distinguished Names&quot; on the Microsoft Web site (https://go.microsoft.com/fwlink/?LinkId=81167).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_DISTINGUISHED_NAME_ARRAY(System.Object)">
            <summary>
            TF50372: Argument {0} is zero length, there must be at least one distinguished name element.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_OBJECTID(System.Object,System.Object)">
            <summary>
            TF50366: Argument {1} contains an invalid object identifier (&apos;{0}&apos;).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_OBJECTID_ARRAY(System.Object)">
            <summary>
            TF50367: Argument {0} is zero length, there must be at least one object identifier element.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_OBJECT_CLASS_ID(System.Object,System.Object)">
            <summary>
            TF50368: Argument {1} contains an invalid object class identifier (&apos;{0}&apos;).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_PARENTOBJECTID_SELFPARENT(System.Object,System.Object)">
            <summary>
            TF50376: Argument {0} is invalid. Object (&apos;{1}&apos;) cannot inherit from itself.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_PROJECT_URI(System.Object,System.Object)">
            <summary>
            TF50362: Argument {1} contains an invalid project URI (&apos;{0}&apos;).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_PROJECT_URI_ARRAY(System.Object)">
            <summary>
            TF50373: Argument {0} is zero length, there must be at least one project URI element.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.GSS_BAD_SID_ARRAY(System.Object)">
            <summary>
            TF50361: Argument {0} is zero length, there must be at least one SID element.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_CREATE_PROJECTS">
            <summary>
            Create new projects
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_DIAGNOSTIC_TRACE">
            <summary>
            Alter trace settings
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_GENERIC_READ">
            <summary>
            View collection-level information
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_GENERIC_WRITE">
            <summary>
            Edit collection-level information
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_MANAGE_LINK_TYPES">
            <summary>
            Manage work item link types
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_MANAGE_TEMPLATE">
            <summary>
            Manage process template
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_MANAGE_TEST_CONTROLLERS">
            <summary>
            Manage test controllers
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_SYNCHRONIZE_READ">
            <summary>
            View system synchronization information
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_TRIGGER_EVENT">
            <summary>
            Trigger events
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_ADMINISTER_BUILD">
            <summary>
            Administer a build
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_CHECK_IN">
            <summary>
            Check files in
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_DELETE">
            <summary>
            Delete team project
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_DELETE_TEST_RESULTS">
            <summary>
            Delete test runs
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_EDIT_BUILD_STATUS">
            <summary>
            Edit build quality
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_GENERIC_READ">
            <summary>
            View project-level information
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_GENERIC_WRITE">
            <summary>
            Edit project-level information
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_MANAGE_TEST_CONFIGURATIONS">
            <summary>
            Manage test configurations
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_MANAGE_TEST_ENVIRONMENTS">
            <summary>
            Manage test environments
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_OVERRIDE_BUILD_CHECKIN_VALIDATION">
            <summary>
            Override check-in validation by build
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_PUBLISH_TEST_RESULTS">
            <summary>
            Create test runs
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_START_BUILD">
            <summary>
            Start a build
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_UPDATE_BUILD">
            <summary>
            Write to build operational store
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_VIEW_TEST_RESULTS">
            <summary>
            View test runs
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.CannotResolveServerHostUsingAD(System.Object,System.Object)">
            <summary>
            TF255042: Cannot convert {0} to Windows NT 4.0 account name using directory services. Error code: {1}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.MultipleIdentitiesFoundMessage(System.Object,System.Object)">
            <summary>
            Multiple identities found matching &apos;{0}&apos;. Use the unique name to specify one of the following identities:{1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidServerRequest(System.Object)">
            <summary>
            The request was rejected by the server.Technical information:  {0}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkConnectedServicesServiceDescription">
            <summary>
            ConnectedServices Service for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_IllegalPrimitive(System.Object)">
            <summary>
            Invalid JSON primitive: {0}..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_DepthLimitExceeded">
            <summary>
            RecursionLimit exceeded..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_InvalidArrayStart">
            <summary>
            Invalid array passed in, &apos;[&apos; expected..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_InvalidArrayExpectComma">
            <summary>
            Invalid array passed in, &apos;,&apos; expected..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_InvalidArrayExtraComma">
            <summary>
            Invalid array passed in, extra trailing &apos;,&apos;..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_InvalidArrayEnd">
            <summary>
            Invalid array passed in, &apos;]&apos; expected..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_ExpectedOpenBrace">
            <summary>
            Invalid object passed in, &apos;{&apos; expected..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_InvalidMemberName">
            <summary>
            Invalid object passed in, member name expected..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_InvalidObject">
            <summary>
            Invalid object passed in, &apos;:&apos; or &apos;}&apos; expected..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_UnterminatedString">
            <summary>
            Unterminated string passed in..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_BadEscape">
            <summary>
            Unrecognized escape sequence..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.JavaScriptSerializer_JSON_StringNotQuoted">
            <summary>
            Invalid string passed in, &apos;\&quot;&apos; expected..
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkSignOutWebDescription">
            <summary>
            Sign-Out Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkFileContainerDescription">
            <summary>
            File Containers Resource for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidSqlTimestampString(System.Object)">
            <summary>
            String &apos;{0}&apos; is not a valid sql timestamp.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceChangeError(System.Object)">
            <summary>
            TF400749: Unable to change the service configuration for {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceControlManagerOpenError">
            <summary>
            TF400750: Unable to open the service control manager.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ServiceOpenError(System.Object)">
            <summary>
            TF400751: Unable to open the service configuration for {0}.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.BAD_ALIAS(System.Object)">
            <summary>
            The following alias is not valid: &apos;{0}&apos;. For more information about valid naming conventions, see the topic &quot;Naming Restrictions for Azure DevOps Server&quot; on the Microsoft Web site (https://go.microsoft.com/fwlink/?LinkId=77936).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.BAD_ALIAS_NOT_ALPHANUM(System.Object)">
            <summary>
            The following alias is not valid: &apos;{0}&apos;. An alias can only contain letters and/or digits.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkRoomsHubWebDescription">
            <summary>
            Rooms hub Web Page for Azure DevOps Server.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkUtilizationUsageSummaryDescription">
            <summary>
            Usage Web Page for Azure DevOps Services.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.FrameworkUtilizationUserUsageSummaryDescription">
            <summary>
            User-specific Usage Web Page for Azure DevOps Services.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.LocationService">
            <summary>
            Location Service
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.AccountTenantExists">
            <summary>
            Account already belongs to a tenant.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidInheritLevelServiceDefinition(System.Object)">
            <summary>
            A service definition exists with the following InheritLevel value: {0}. Only deployment-level service definitions may specify an InheritLevel value.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidLocationMappingsServiceDefinition">
            <summary>
            Only deployment level service definitions may have location mappings.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidInheritLevelRelativeServiceDefinition(System.Object,System.Object)">
            <summary>
            A service definition with InheritLevel: {0} and RelativeToSetting value: {1} must define a parent service definition.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidGroupDescriptor(System.Object)">
            <summary>
            Group {0}`s descriptor is missing or doesn`t have a valid Identifier.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROCESS_PERMISSION_DELETE">
            <summary>
            Delete process
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROCESS_PERMISSION_EDIT">
            <summary>
            Edit process
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROCESS_PERMISSION_CREATE">
            <summary>
            Create process
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROCESS_PERMISSIONS_ADMINISTER">
            <summary>
            Administer process permissions
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROCESS_PERMISSION_READ_RULES">
            <summary>
            Read process rules
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_WORK_ITEM_DELETE">
            <summary>
            Delete and restore work items
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_WORK_ITEM_MOVE">
            <summary>
            Move work items out of this project
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_WORK_ITEM_PERMANENTLY_DELETE">
            <summary>
            Permanently delete work items
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.ErrorCreatingTempFile(System.Object)">
            <summary>
            Error creating temp file in &apos;{0}&apos;
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_RENAME">
            <summary>
            Rename team project
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.XML_SCHEMAVALIDATION_READSCHEMAFAILED">
            <summary>
            TF30254: Unable to read the schema from resources.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.XML_SCHEMAVALIDATION_FAILED(System.Object,System.Object)">
            <summary>
            Xml schema validation error in {0}: {1}
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.BAD_DIRECTORY_ALIAS(System.Object)">
            <summary>
            The following alias is not valid: &apos;{0}&apos;. For more information about valid naming conventions, see the topic &quot;Naming Restrictions for Azure DevOps Server&quot; on the Microsoft Web site (https://go.microsoft.com/fwlink/?LinkId=77936).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.InvalidHexString">
            <summary>
            Invalid hex string. A hex string starts with &apos;0x&apos; and has an even number of characters.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_MANAGE_PROPERTIES">
            <summary>
            Manage project properties
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_MANAGE_SYSTEM_PROPERTIES">
            <summary>
            Manage system project properties
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_BYPASS_PROPERTY_CACHE">
            <summary>
            Bypass project property cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_BYPASS_RULES">
            <summary>
            Bypass rules on work item updates
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_SUPPRESS_NOTIFICATIONS">
            <summary>
            Suppress notifications for work item updates
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.NAMESPACE_DELETE_FIELD">
            <summary>
            Delete field from organization
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_UPDATE_VISIBILITY">
            <summary>
            Update project visibility
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROCESS_PERMISSION_READ">
            <summary>
            View Process
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.MessageQueueAccessMappingDisplayName">
            <summary>
            Message Queue Access Mapping
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_CHANGE_PROCESS">
            <summary>
            Change process of team project.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.Internal.TFCommonResources.PROJECT_AGILETOOLS_BACKLOG">
            <summary>
            Agile backlog management.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.EmbeddedResourceUtil.GetResourceAsString(System.String)">
            <summary>
            Gets the contents of the resource of the calling assembly as a string
            </summary>
            <param name="resourceName">the name of the resource within the calling assembly</param>
            <returns>the resource contents from the calling assembly as a string</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.EmbeddedResourceUtil.GetResourceAsString(System.String,System.Reflection.Assembly)">
            <summary>
            Gets the contents of the resource of an assembly as a string
            </summary>
            <param name="resourceName">the name of the resource within the assembly</param>
            <param name="assembly">the assembly that contains the resource</param>
            <returns>the resource contents as a string</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection">
            <summary>
            Encapsulates the ability to pass properties with an exception across soap boundaries.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Count">
            <summary>
            Gets the count of properties currently in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Boolean)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Boolean[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Byte)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Byte[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Char)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.DateTime)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.DateTime[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Decimal)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Decimal[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Double)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Double[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Guid)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Guid[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Int16)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Int16[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Int32)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Int32[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Int64)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Int64[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Single)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.Single[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.String)">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Set(System.String,System.String[])">
            <summary>
            Sets the property to the specified value.
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Remove(System.String)">
            <summary>
            Removes a property from the collection.
            </summary>
            <param name="name">The name of the property to remove</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Copy(Microsoft.TeamFoundation.Common.ExceptionPropertyCollection)">
            <summary>
            Copies the values from the provided properties into the current collection. Existing property values
            will be ignored.
            </summary>
            <param name="properties">The properties which should be copied</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.Copy(Microsoft.TeamFoundation.Common.ExceptionPropertyCollection,System.Boolean)">
            <summary>
            Copies the values from the provided properties into the current collection. Existing property values
            will be ignored.
            </summary>
            <param name="properties">The properties which should be copied</param>
            <param name="replace">True if existing property values should be replaced, false otherwise</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.FromXml(System.Xml.XmlReader)">
            <summary>
            Helper method for deserializing an instance of this class from XML.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ExceptionPropertyCollection.ToXml(System.Xml.XmlWriter,System.String)">
            <summary>
            Helper method for serializing an instance of this class to XML.
            </summary>
            <param name="writer"></param>
            <param name="elementName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ITFLoggerExtensions.Heading(Microsoft.TeamFoundation.Common.ITFLogger,System.String)">
            <summary>
            Prints header - make the logs more readable.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ITFLoggerExtensions.Heading(Microsoft.TeamFoundation.Common.ITFLogger,System.String,System.Object[])">
            <summary>
            Prints header - make the logs more readable.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Common.TFLogger">
            <summary>
            An abstract base class to unify logging so common library methods can be used in mutliple scenarios
            such as on-premise install with logging to disk, servicing with detail log data to configDb and 
            azure cloud console scenarios where auditing and logging is a separate DB.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.ProcessTemplateSchema.Validate(System.Xml.XmlNode,Microsoft.TeamFoundation.Common.ProcessTemplateSchema.Schema,System.String)">
            <remarks>
            Copied from /VSIntegration/Client/PCW/Package/PCW/Utils.cs
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.GetImageHandle(System.Object)">
            <summary>
            get an image handle from an object
            </summary>
            <param name="obj"> image object can be int or intptr, </param>
            <returns>the handle for the image. returns IntPtr.Zero if it cannot retrive an image from the input</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.IsAlphaNumString(System.String)">
            <summary>
            Checks if a string contains only letters or digits based on http://www.ietf.org/rfc/rfc2396.txt.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.HasControlCharacters(System.String)">
            <summary>
            Checks if string contains a Control character.
            See also <seealso cref="M:Microsoft.VisualStudio.Services.Common.ArgumentUtility.IsInvalidString(System.String)"/>
            </summary>
            <remarks>Only use it if you want to check for control characters.</remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether the collection is null or contains no elements.
            </summary>
            <typeparam name="T">The IEnumerable type.</typeparam>
            <param name="enumerable">The enumerable, which may be null or empty.</param>
            <returns>
                <c>true</c> if the IEnumerable is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.IsSafeUrlProtocol(System.String)">
            <summary>
                Check if specified URL is safe - i.e. part of an approved list of URL schemes.
            </summary>
            <param name="url">
                Url to check.
            </param>
            <returns>
                <c>true</c> if the URL is safe; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.CheckSidNullEmpty(System.String,System.String)">
            <summary>
            Verify that the sid isn't null or empty
            </summary>
            <param name="sid">SID to check</param>
            <param name="paramName"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.CheckSid(System.String,System.String)">
            <summary>
            Verify that the sid is in a valid format
            </summary>
            <param name="sid">SID to check</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.CombinePaths(System.String,System.String)">
            <summary>
            Replacement for Path.Combine.
            For URL please use UrlUtility.CombineUrl
            </summary>
            <param name="path1">The first half of the path.</param>
            <param name="path2">The second half of the path.</param>
            <returns>The concatenated string with and leading slashes or 
            tildes removed from the second string.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.RemoveInvalidXmlChars(System.String,System.Boolean)">
            <summary>
            Removes invalid XML characters from a string. 
            </summary>
            <param name="strIn">The string to check.</param>
            <param name="allowCrLf">Carriage return and line-feed is considered legal if the allowCrLf parameter is set to true.</param>
            <remarks>A character is "not displayable" if it's UnicodeCategory is in the set {LineSeparator, ParagraphSeparator, Control, Format, OtherNotAssigned}.</remarks>
            <returns>A string containing only valid XML characters.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.CheckForNull(System.Object,System.String)">
            <summary>
            Throw an exception if the object is null.
            </summary>
            <param name="var">the object to check</param>
            <param name="varName">the variable or parameter name to display</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.IsLegalComputerName(System.String)">
            <summary>
            Verify that the computer name is not empty, not too long, and doesn't contain
            characters with ordinal values 0-31
            </summary>
            <param name="computerName">computer name to check</param>
            <returns>true if the computer name is legal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.IsLegalComputerName(System.String,System.String@)">
            <summary>
            Verify that the computer name is not empty, not too long, and doesn't contain
            characters with ordinal values 0-31. Other invalid characters include 
            '`', '~', '!', '@', '#', '$', '%', ' ', '^', '&amp;', '*', '(', ')', '=', '+', '[',
            ']', '{', '}', '\\', '|', ';', ':', '\'', '"', ',', '&lt;', '&gt;', '/', '?'
            </summary>
            <param name="computerName">computer name to check</param>
            <param name="error"></param>
            <returns>true if the computer name is legal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.IsLegalIdentity(System.String)">
            <summary>
            Checks to see if the identity consists only of legal characters and is less than the maximum
            length.
            </summary>
            <param name="identity">identity to check</param>
            <returns>true if the identity is legal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.IsLegalXmlString(System.String)">
            <summary>
            Returns true if the given string can be transmitted to an XML web service.
            </summary>
            <param name="str">string to check for disallowed XML chars</param>
            <returns>true if the string is legal; false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.AddXmlAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Adds an attribute to the node if the value is non-null.
            </summary>
            <param name="node">the XML node</param>
            <param name="attrName">the name of the attribute</param>
            <param name="value">the value of the attribute</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.EnumToString``1(System.Enum)">
            <summary>
            Format the enum as a string for use with XML.
            </summary>
            <typeparam name="T">the type of enum</typeparam>
            <param name="value">the enum value</param>
            <returns>a string representing the enum value</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.EnumFromString``1(System.String)">
            <summary>
            Construct an enum from a string for use with XML.
            </summary>
            <typeparam name="T">the type of enum to return</typeparam>
            <param name="s">the string</param>
            <returns>the enum</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.RunApp(System.String,System.String,System.EventHandler,System.Boolean)">
            <summary>
            Runs an application with the specified argument string.
            </summary>
            <param name="appExe">the application to run</param>
            <param name="arguments">the arguments</param>
            <param name="exitedHandler">event handler to attached for process exit</param>
            <param name="wait">if true, wait for the process to exit</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.RunApp(System.String,System.String,System.EventHandler,System.Boolean,System.Boolean)">
            <summary>
            Runs an application with the specified argument string.
            </summary>
            <param name="appExe">the application to run</param>
            <param name="arguments">the arguments</param>
            <param name="exitedHandler">event handler to attached for process exit</param>
            <param name="wait">if true, wait for the process to exit</param>
            <param name="defaultStartParameters">true to use default values for UseShellExecute and CreateNoWindow; false to use reverted values, usefull for diffmerge.exe</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.RunApp(System.String,System.String,System.EventHandler,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Runs an application with the specified argument string.
            </summary>
            <param name="appExe">the application to run</param>
            <param name="arguments">the arguments</param>
            <param name="exitedHandler">event handler to attached for process exit</param>
            <param name="wait">if true, wait for the process to exit</param>
            <param name="defaultStartParameters">true to use default values for UseShellExecute and CreateNoWindow; false to use reverted values, usefull for diffmerge.exe</param>
            <param name="exitCodeMatters">true if a non-zero exit code ought to throw and exception. False if you don't care.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.BeginRunApp(System.String,System.String)">
            <summary>
            Start an external process running and return back the Process handle.
            This method may throw the System.ComponentModel.Win32Exception.
            </summary>
            <param name="appExe">command to run</param>
            <param name="arguments">arguments for the command</param>
            <returns>Process instance of the running external process</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.BeginRunApp(System.String,System.String,System.Boolean)">
            <summary>
            Start an external process running and return back the Process handle.
            This method may throw the System.ComponentModel.Win32Exception.
            </summary>
            <param name="appExe">command to run</param>
            <param name="arguments">arguments for the command</param>
            <param name="defaultStartParameters">true to use default values for UseShellExecute and CreateNoWindow; false to use reverted values, usefull for diffmerge.exe</param>
            <returns>Process instance of the running external process</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.EndRunApp(System.Diagnostics.Process)">
            <summary>
            Wait for an external process to finish and return back his exit code.
            This method may throw the System.ComponentModel.Win32Exception.
            </summary>
            <param name="process">Process to wait for</param>
            <returns>exit code the process returned</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.CombineArrays``1(``0[],``0[])">
            <summary>
            Used by multiple places for combining arrays of items
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.CopyCollection``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Used by multiple places for making an array of items from an existing collection.
            This version is around so the compiler can do type inferencing.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.CopyCollection``1(System.Collections.ICollection)">
            <summary>
            Used by multiple places for making an array of items from an existing collection
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.SafeRelease(System.IntPtr)">
            <summary>
            Release a COM object.  The difference between this and Marshal.Release is that we are 
            tolerant of NULL COM pointers.
            </summary>
            <param name="punk">COM object reference to release.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.TranslateEnum(System.Type,System.String[],System.Int32)">
            <summary>
             Translates an array of enum names into an integer bitfield.
             A string of "*" will return the value specified in allPermissions.
             Throws ArgumentException if a string is not found.
            </summary>
            <param name="enumClass">Enumeration class to get names from.</param>
            <param name="array">Permission names.</param>
            <param name="allPermissions">The set of bits that defines all permissions for this type.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.TranslateEnum(System.Type,System.Int32)">
            <summary>
             Translates an integer bitfield back into an array of enumeration names.
            </summary>
            <param name="enumClass">Enumeration class to get names from</param>
            <param name="bits">Bitfield</param>
            <returns>Array of enumeration string names</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.SafeDispose(System.IDisposable)">
            <summary>
            invokes dispose safely by checkin that the reference is not null 
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.StripEnd(System.Uri,System.String[])">
            <summary>
            Removes the ending of the input uri if the end of the absolute uri matches one of the strings in the 'stringsToStrip'
            </summary>
            <param name="uri"></param>
            <param name="stringsToStrip"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.StripEnd(System.String,System.String[])">
            <summary>
            Removes the ending of the input string if the end matches one of the strings in the 'stringsToStrip'
            </summary>
            <param name="stringToStrip"></param>
            <param name="stringsToStrip"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.EscapeString(System.String,System.Char)">
            <summary>
            Repeat each occurance of the specified character. 
            </summary>
            <param name="text">An input string</param>
            <param name="escapeChar">A character to escape.</param>
            <example>
            string text = TFCommonUtil.EscapeString("a'bc", '\'');
            Debug.Assert(text == "a''bc");
            </example>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.AreTypesEquivalent(System.Type,System.Type)">
            <summary>
            Checks if the two given types are equivalent. This check is preferred over
            type.Equals(otherType) or an == comparison because it handles Embeddable Interop Types.
            This method is a substitute for type.IsEquivalentTo(otherType) for assemblies which target
            framework 3.5 and earlier. See:
            http://devdiv/sites/vsarch/Wiki/Type%20identity%20and%20type%20equivalence%20with%20Embedded%20Interop%20Types.aspx
            </summary>
            <param name="a">The first type</param>
            <param name="b">The second type</param>
            <returns>True if the two given types are equivalent</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.GetSqlTimestamp(System.String)">
            <summary>
            Converts string to sql timestamp byte array
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Common.TFCommonUtil.Retry(System.Int32,System.Int32,System.Action{System.Int32},System.Func{System.Exception,System.Int32,System.Boolean})">
            <summary>
            Handles automatically retrying when exceptions occur.
            </summary>
            <param name="count">Number of times to retry</param>
            <param name="retryDelay">Delay in milliseconds before retrying when an exception occurs</param>
            <param name="action">Action to perform in a retry loop</param>
            <param name="exceptionAction">Optional, action to perform when an exception is thrown prior to retrying.  
            If the function is null or returns 'true' we will continue retrying up to the count limit.  If it returns 'false'
            we will rethrow the exception.</param>
        </member>
        <member name="F:Microsoft.TeamFoundation.Common.TFCommonUtil.MaxGroupNameLength">
            <summary>
            Maximum Group Name Length
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Common.TFCommonUtil.MaxGroupDescriptionLength">
            <summary>
            Maximum Group Description Length
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.AsyncOperation">
            <summary>
            Provides a common base class for asynchronous operations.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new <c>Microsoft.TeamFoundation.Framework.Common.AsyncOperation</c> instance with the
            specified callback and state.
            </summary>
            <param name="callback">
            The <c>System.AsyncCallback</c> delegate that receives notification that the operation is complete.
            </param>
            <param name="state">
            An object, specified by the caller, that contains state information associated with the
            asynchronous operation.
            </param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.AsyncState">
            <summary>
            Gets the user provided state for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.AsyncWaitHandle">
            <summary>
            Gets the wait handle for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.System#IAsyncResult#AsyncWaitHandle">
            <summary>
            Gets the wait handle for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.Callback">
            <summary>
            Gets the callback associated with this operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.CompletedSynchronously">
            <summary>
            Gets a value indicating whether or not this operation completed on the calling thread.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.Exception">
            <summary>
            Gets the exception associated with this operation.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.IsCompleted">
            <summary>
            Gets a value indicating whether or not this operation has completed.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.Complete(System.Boolean,System.Exception)">
            <summary>
            Completes an asynchronous operation.
            </summary>
            <param name="completedSynchronously">Indicates whether or not the operation completed synchronously</param>
            <param name="exception">The exception thrown from the operation, if applicable</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.End``1(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation.
            </summary>
            <typeparam name="T">The type of asynchronous operation</typeparam>
            <param name="result">The asynchronous operation</param>
            <returns>A completed asynchronous operation of the specified type</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.AsyncOperation.TryEnd``1(System.IAsyncResult,``0@,System.Exception@)">
            <summary>
            Ends an asynchronous operation.
            </summary>
            <typeparam name="T">The type of asynchronous operation</typeparam>
            <param name="result">The asynchronous operation</param>
            <param name="operation">A completed asynchronous operation of the specified type</param>
            <param name="error">The error which occurred, if any</param>
            <returns>True if the operation completed successfully, false otherwise</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.CompletedOperation">
            <summary>
            Provides the ability to return a completed operation with on results.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.CompletedOperation.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new <c>Microsoft.TeamFoundation.Framework.Common.CompletedOperation</c> instance with
            the specified callback and state.
            </summary>
            <param name="callback">
            The <c>System.AsyncCallback</c> delegate that receives notification that the operation is complete.
            </param>
            <param name="state">
            An object, specified by the caller, that contains state information associated with the
            asynchronous operation.
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.CompletedOperation.End(System.IAsyncResult)">
            <summary>
            Ends the asynchronous operation represented by the provided result.
            </summary>
            <param name="result">The asynchronous operation</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.CompletedOperation`1">
            <summary>
            Provides the ability to return an completed operation with a single result.
            </summary>
            <typeparam name="TResult">The type of result</typeparam>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.CompletedOperation`1.#ctor(`0,System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new <c>Microsoft.TeamFoundation.Framework.Common.CompletedOperation</c> instance with
            the specified result.
            </summary>
            <param name="result">The result of the operation</param>
            <param name="callback">
            The <c>System.AsyncCallback</c> delegate that receives notification that the operation is complete.
            </param>
            <param name="state">
            An object, specified by the caller, that contains state information associated with the
            asynchronous operation.
            </param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.CompletedOperation`1.End(System.IAsyncResult)">
            <summary>
            Ends the asynchronous operation represented by the provided result.
            </summary>
            <param name="result">The asynchronous operation</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.ItemDequeuedCallback">
            <summary>
            Callback method which is invoked when an item is dequeued but prior to returning control to the reader.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1">
            <summary>
            Provides a mechanism for enqueuing and dequeuing items using the asynchronous pattern. Any number of blocking
            readers and waiters may be queued at a time.
            </summary>
            <typeparam name="T">The type of item</typeparam>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.#ctor">
            <summary>
            Initializes a new <c>Microsoft.TeamFoundation.Framework.Common.InputQueue</c> instance.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Count">
            <summary>
            Gets the count of items in the queue.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Close">
            <summary>
            Releases all outstanding readers and waiters and closes the queue.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.System#IDisposable#Dispose">
            <summary>
            Releases all outstanding readers and waiters and closes the queue.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Enqueue(`0,System.Boolean)">
            <summary>
            Enqueues an item.
            </summary>
            <param name="item">The item to queue</param>
            <param name="canDispatchOnThisThread">True if a waiter can be dispatched on this thread, otherwise false</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Enqueue(`0,Microsoft.TeamFoundation.Framework.Common.ItemDequeuedCallback,System.Boolean)">
            <summary>
            Enqueues an item.
            </summary>
            <param name="item">The item to queue</param>
            <param name="dequeuedCallback">An optional callback which is invoked when the item is dequeued</param>
            <param name="canDispatchOnThisThread">True if a waiter can be dispatched on this thread, otherwise false</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Enqueue(System.Exception,System.Boolean)">
            <summary>
            Enqueues an exception.
            </summary>
            <param name="exception">The exception to queue</param>
            <param name="canDispatchOnThisThread">True if a waiter can be dispatched on this thread, otherwise false</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Enqueue(System.Exception,Microsoft.TeamFoundation.Framework.Common.ItemDequeuedCallback,System.Boolean)">
            <summary>
            Enqueues an exception.
            </summary>
            <param name="exception">The exception to queue</param>
            <param name="dequeuedCallback">An optional callback which is invoked when the item is dequeued</param>
            <param name="canDispatchOnThisThread">True if a waiter can be dispatched on this thread, otherwise false</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.EnqueueAndDispatch(Microsoft.TeamFoundation.Framework.Common.InputQueue{`0}.Item,System.Boolean)">
            <summary>
            Enqueues an item on the message queue.
            </summary>
            <param name="item">The item to queue</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Dequeue(System.TimeSpan,`0@)">
            <summary>
            Dequeue an item from the input queue.
            </summary>
            <param name="timeout">
            The <c>System.TimeSpan</c> that specifies the interval of time to wait for an item to become available.
            </param>
            <item>The dequeued item</item>
            <returns>
            True if an item was dequeued, false otherwise. A shutdown with no pending items remaining returns true
            and outputs <c>default(T)</c>.
            </returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.DequeueAsync">
            <summary>
            Begins an asynchronous operation to dequeue an item from the input queue.
            </summary>
            <returns>An asynchronous operation to dequeue an item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.DequeueAsync(System.TimeSpan)">
            <summary>
            Begins an asynchronous operation to dequeue an item from the input queue.
            </summary>
            <param name="timeout">
            The <c>System.TimeSpan</c> that specifies the interval of time to wait for an item to become available.
            </param>
            <returns>An asynchronous operation to dequeue an item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.DequeueAsync(System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous operation to dequeue an item from the input queue.
            </summary>
            <param name="cancellationToken">
            The <c>System.Threading.CancellationToken</c> for signaling cancellation of the operation.
            </param>
            <returns>An asynchronous operation to dequeue an item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.DequeueAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous operation to dequeue an item from the input queue.
            </summary>
            <param name="timeout">
            The <c>System.TimeSpan</c> that specifies the interval of time to wait for an item to become available.
            </param>
            <param name="cancellationToken">
            The <c>System.Threading.CancellationToken</c> for signaling cancellation of the operation.
            </param>
            <returns>An asynchronous operation to dequeue an item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.BeginDequeue(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to dequeue an item from the input queue.
            </summary>
            <param name="timeout">
            The <c>System.TimeSpan</c> that specifies the interval of time to wait for an item to become available.
            </param>
            <param name="callback">
            The <c>System.AsyncCallback</c> delegate that receives notification that the operation is complete.
            </param>
            <param name="state">
            An object, specified by the caller, that contains state information associated with the
            asynchronous operation.
            </param>
            <returns>An asynchronous operation to dequeue an item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.BeginDequeue(System.Threading.CancellationToken,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to dequeue an item from the input queue.
            </summary>
            <param name="cancellationToken">
            The <c>System.Threading.CancellationToken</c> for signaling cancellation of the operation.
            </param>
            <param name="callback">
            The <c>System.AsyncCallback</c> delegate that receives notification that the operation is complete.
            </param>
            <param name="state">
            An object, specified by the caller, that contains state information associated with the
            asynchronous operation.
            </param>
            <returns>An asynchronous operation to dequeue an item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.BeginDequeue(System.TimeSpan,System.Threading.CancellationToken,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to dequeue an item from the input queue.
            </summary>
            <param name="timeout">
            The <c>System.TimeSpan</c> that specifies the interval of time to wait for an item to become available.
            </param>
            <param name="cancellationToken">
            The <c>System.Threading.CancellationToken</c> for signaling cancellation of the operation.
            </param>
            <param name="callback">
            The <c>System.AsyncCallback</c> delegate that receives notification that the operation is complete.
            </param>
            <param name="state">
            An object, specified by the caller, that contains state information associated with the
            asynchronous operation.
            </param>
            <returns>An asynchronous operation to dequeue an item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.EndDequeue(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to dequeue an item.
            </summary>
            <param name="result">The asynchronous operation</param>
            <returns>The dequeued item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.EndDequeue(System.IAsyncResult,`0@)">
            <summary>
            Ends an asynchronous operation to dequeue an item.
            </summary>
            <param name="result">The asynchronous operation</param>
            <param name="item">The dequeued item</param>
            <returns>True if an item was dequeued, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.WaitForItem(System.TimeSpan)">
            <summary>
            Waits for a new item to be available.
            </summary>
            <param name="timeout">
            The <c>System.TimeSpan</c> that specifies the interval of time to wait for an item to become available.
            </param>
            <returns>True if an item is available in the specified timeout interval, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.BeginWaitForItem(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to wait for a new item to be available.
            </summary>
            <param name="timeout">
            The <c>System.TimeSpan</c> that specifies the interval of time to wait for an item to become available.
            </param>
            <param name="callback">
            The <c>System.AsyncCallback</c> delegate that receives notification that the operation is complete.
            </param>
            <param name="state">
            An object, specified by the caller, that contains state information associated with the
            asynchronous operation.
            </param>
            <returns>An asynchronous operation to wait for an item to become available</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.EndWaitForItem(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to wait for an item to become available.
            </summary>
            <param name="result">The asynchronous operation</param>
            <returns>True if an item is available, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Shutdown">
            <summary>
            Shuts down the input queue. Any outstanding readers are released if there are no pending messages
            left in the queue.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.RemoveWaiter(Microsoft.TeamFoundation.Framework.Common.InputQueue{`0}.IQueueWaiter)">
            <summary>
            Removes a waiter from the list of pending waiters.
            </summary>
            <param name="waiter">The waiter to remove</param>
            <returns>True if the waiter was removed, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.RemoveReader(Microsoft.TeamFoundation.Framework.Common.InputQueue{`0}.IQueueReader)">
            <summary>
            Remves the reader from the list of pending readers.
            </summary>
            <param name="reader">The reader to remove</param>
            <returns>True if the reader was removed, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.SnapshotWaiters">
            <summary>
            Copies the current waiters to an array and clears the member list.
            </summary>
            <returns>The snapshot of waiters when this method is called</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.CompleteWaiters(System.Boolean,Microsoft.TeamFoundation.Framework.Common.InputQueue{`0}.IQueueWaiter[])">
            <summary>
            Handles completing the waiters on the calling thread.
            </summary>
            <param name="itemAvailable">Indicates whether an item is available</param>
            <param name="waiters">The waiters to notify</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.CompleteWaitersLater(System.Boolean,Microsoft.TeamFoundation.Framework.Common.InputQueue{`0}.IQueueWaiter[])">
            <summary>
            Handles completing the waiters on a separate thread if possible.
            </summary>
            <param name="itemAvailable">Indicates whether an item is available</param>
            <param name="waiters">The waiters to notify</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.State">
            <summary>
            Maintains the state of the queue.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.State.Open">
            <summary>
            The queue accepts enqueue and dequeue operations.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.State.Shutdown">
            <summary>
            The queue accepts dequeue operations only.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.State.Closed">
            <summary>
            The queue accepts no operations.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.IQueueReader">
            <summary>
            Abstraction for handling synchronous and asynchronous readers the same.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.IQueueWaiter">
            <summary>
            Abstraction for handling synchronous and asynchronous waiters the same.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.QueueReader">
            <summary>
            Handles synchronous reads to dequeue an item.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.QueueWaiter">
            <summary>
            Handles synchronous waits for an item to be become available.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.AsyncQueueReader">
            <summary>
            Handles asynchonous reads to dequeue an item.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.AsyncQueueWaiter">
            <summary>
            Handles asynchronous waits for an item to become available.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.FastItemQueue">
            <summary>
            Provides an array-based implementation of the queue using a struct array.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.FastItemQueue.Count">
            <summary>
            Gets the count of items currently available.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.FastItemQueue.HasAnyItem">
            <summary>
            Gets a value indicating whether any items are in the queue.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.FastItemQueue.HasAvailableItem">
            <summary>
            Gets a value indicating whether any available items are in the queue.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.FastItemQueue.EnqueueItem(Microsoft.TeamFoundation.Framework.Common.InputQueue{`0}.Item)">
            <summary>
            Enqueues an item if possible.
            </summary>
            <param name="item">The item to enqueue</param>
            <returns>True if the item is enqueued, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.FastItemQueue.DequeueItem">
            <summary>
            Dequeues an item if possible.
            </summary>
            <returns>The dequeued item</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Item.Dispose">
            <summary>
            Releases all resources associated with the item.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.InputQueue`1.Item.GetValue">
            <summary>
            Gets the value of an item.
            </summary>
            <returns>The value of the item. If the item contains an exception it is thrown.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.TeamFoundationSupportedFeatures">
            <summary>
            Enum which has the features supported by either the client or server
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationSupportedFeatures.None">
            <summary>
            None of the features in this enum are supported.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationSupportedFeatures.IdentityProperties">
            <summary>
            The client supports strongly-typed identity properties.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationSupportedFeatures.All">
            <summary>
            This is a combination of all the features which are supported.
            Subject to change across releases.  You can send this value 
            (from client object model to server, or from server to client object model)
            and mask with it, but you should not test for equality against it.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.AccountName">
            <summary>
            NT account name (domain\alias)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.AdministratorsGroup">
            <summary>
            Find project admin group
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.Identifier">
            <summary>
            Find the identity using the identifier
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.MailAddress">
            <summary>
            Email address
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.General">
             <summary>
             A general search for an identity. 
             </summary>
             <remarks>
             This is the default search factor for shorter overloads of ReadIdentity, and typically the correct choice for user input.
             
             Use the general search factor to find one or more identities by one of the following properties:
             * Display name
             * account name
             * UniqueName
            
             UniqueName may be easier to type than display name. It can also be used to indicate a single identity when two or more identities share the same display name (e.g. "John Smith")
             </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.Alias">
            <summary>
            Alternate login username
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.Domain">
            <summary>
            Find identity using Domain/TenantId
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.DirectoryAlias">
            <summary>
            Find identity using DirectoryAlias
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.IdentitySearchFactor.LocalGroupName">
            <summary>
            Find a local group (i.e. VSTS or TFS rather than AAD or AD group) by its name
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MembershipQuery.None">
            <summary>
            Query will not return any membership data
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MembershipQuery.Direct">
            <summary>
            Query will return only direct membership data
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MembershipQuery.Expanded">
            <summary>
            Query will return expanded membership data
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MembershipQuery.ExpandedUp">
            <summary>
            Query will return expanded up membership data (parents only)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MembershipQuery.ExpandedDown">
            <summary>
            Query will return expanded down membership data (children only)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.GroupProperty.Name">
            <summary>
            The name of an application group
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.GroupProperty.Description">
            <summary>
            The description of an application group
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.ReadIdentityOptions.IncludeReadFromSource">
            <summary>
            read from IMS store only, or also from external sources such as AD.
            </summary>
            <remarks>
            Reading from the identity provider will add an overhead. An example of when
            this option may be required, is to assign permission(s) to some identity
            that may or may not be in the database already.
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.ReadIdentityOptions.TrueSid">
            <summary>
            whether to map back well known TFS Sids to their well known form, or expose
            their true value.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.ReadIdentityOptions.ExtendedProperties">
            <summary>
            read extended identity properties.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.ReadIdentityOptions.DoNotQualifyAccountNames">
            <summary>
            By default, the IdentityService will not permit searches solely by AccountName
            at an Application or lower context. Setting this flag will execute the search as-is
            without attempting to domain-qualify the search
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IdentityPropertyScope">
            <summary>
            The scope which a property will be scoped to.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.Capture`1">
            <summary>
            Wraps value type to let it be passed "by reference" and atomically updated.
            This is used to create a "shared state" between a (s)-service and a cache
            E.g. service may update this value in response to a SQL notification and it immediately becomes available to the cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.Capture`1.#ctor">
            <summary>
            Initializes new instance of Capture class with default value and no value check
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.Capture`1.#ctor(`0,System.Predicate{`0})">
            <summary>
            Initializes new instance of Capture class with the provided value and optional value check
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.Capture">
            <summary>
            Factory class to facilitate construction of Capture instances
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.CaptureLength">
            <summary>
            Specialization for capturing MemoryCache length
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.CaptureSize">
            <summary>
            Specialization for capturing MemoryCache size
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2">
            <summary>
            Base class for the MemoryCacheList implementations (non thread-safe)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2.#ctor(Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheSubscriber{`0,`1})">
            <summary>
            Creates a new MemoryCacheList.
            </summary>
            <param name="capacityPolicy">Policy controlling maximum size of the MemoryCacheList object.</param>
            <param name="evictionPolicy">Policy controlling eviction of cache items when capacity policy is violated.</param>
            <param name="subscriber">Cache notification subscriber.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheSubscriber{`0,`1})">
            <summary>
            Creates a new MemoryCacheList.
            </summary>
            <param name="comparer">Custom IEqualityComparer implementation to use for comparing keys.</param>
            <param name="capacityPolicy">Policy controlling maximum size of the MemoryCacheList object.</param>
            <param name="evictionPolicy">Policy controlling eviction of cache items when capacity policy is violated.</param>
            <param name="subscriber">Cache notification subscriber.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2.Clear">
            <summary>
            Clears the MemoryCacheList of all entries.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2.Sweep">
            <summary>
            Removes invalid elements from the cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2.Add(`0,`1,System.Boolean,Microsoft.TeamFoundation.Framework.Common.IMemoryCacheValidityPolicy{`0,`1})">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to associate with key</param>
            <param name="overwrite">If true, will overwrite an existing key</param>
            <returns>True if the key was successfully added; false if the key was already in the dictionary and overwrite is false</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2.Remove(`0)">
            <summary>
            Removes a specific key from the cache.
            </summary>
            <param name="key">Key to remove</param>
            <returns>True if the key was removed from the cache</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">Key to look up</param>
            <param name="value">[out] Value associated with key, if found</param>
            <returns>True if a value was found associated with key</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListUnsafe`2.Count">
            <summary>
            The number of items currently in the cache.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy`2">
            <summary>
            Interface for the MemoryCacheList capacity policy
            Allows to control eviction of elements from cache when its size reaches limits
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy`2.Length">
            <summary>
            Current computed amount of elements in the cache
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy`2.Size">
            <summary>
            Current computed cache memory footprint (according to the provided ISizeProvider implementation)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy`2.NeedRoom(`0,`1)">
            <summary>
            Checks whether MemoryCacheList has enough capacity to replace the value of the provided element
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy`2.NeedRoom(`0,`1,`1)">
            <summary>
            Checks whether MemoryCacheList has enough capacity to insert the provided element
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheValidityPolicy`2">
            <summary>
            Interface for the MemoryCacheList validity policy
            Allows to "soft-delete" items in cache by marking them as "not valid" (e.g. expired cache items are invalid ones)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheValidityPolicy`2.IsValid(`0,`1)">
            <summary>
            Checks whether provide cache item is valid (and example of invalid item is expired item)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.ISizeProvider`2">
            <summary>
            Interface that cache policy implementation uses to estimate cache items size in memory
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IExpiryProvider`2">
            <summary>
            Interface that cache policy implementation uses to control expiry of cache elements
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.ITimeProvider">
            <summary>
            Interface to control time
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheList`2">
            <summary>
            Interface for the MemoryCacheList operations
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheSubscriber`2">
            <summary>
            Interface to listen on MemoryCacheList notifications
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.DummyMemoryCacheList`2">
            <summary>
            Dummy MemoryCacheList implementation that does nothing
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.UnlimitedCapacityMemoryCachePolicy`2">
            <summary>
            MemoryCacheList policy for the cache that may grow indefinitely
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.AllValidMemoryCachePolicy`2">
            <summary>
            MemoryCacheList policy limiting cache size only by the SUM(size) of elements
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.NoSizeProvider`2">
            <summary>
            ISizeProvider implementation that returns zero size for all objects
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.NoExpiryProvider`2">
            <summary>
            IExpiryProvider implementation for values that never expire
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.DefaultTimeProvider">
            <summary>
            ITimeProvider implementation returning current UTC time
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MemoryCacheDummySubscriber`2">
            <summary>
            Cache notification subscriber that does nothing
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SizePair">
            <summary>
            Pair of elements sizes used by the capacity policies
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.SizePair.PreviousItemSize">
            <summary>
            Size of item being removed
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.SizePair.NewItemSize">
            <summary>
            Size of item being added
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MemoryCacheOperationStatistics">
            <summary>
            Statistics for the memory cache operation
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.MemoryCacheOperationStatistics.CountDiff">
            <summary>
            Changes in the amount of elements in the cache (negative if items being removed)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.MemoryCacheOperationStatistics.SizeDiff">
            <summary>
            Changes in the amount of cache memory footprint (negative if cache shrinks)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEntry`2">
            <summary>
            Contract for the cache item between the MemoryCache and eviction policy
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEntry`2.Key">
            <summary>
            Cache item key (immutable)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEntry`2.Value">
            <summary>
            Cache item value (may be modified)
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEntry`2.ValidityPolicy">
            <summary>
            Optional cache item validity policy (may be modified)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEntry`2.OnCacheHit">
            <summary>
            Delegate invoked if this item was queried and found in cache
            IMPORTANT: This method is called under "read" lock
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy`2">
            <summary>
            Interface for the MemoryCache eviction policy 
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy`2.Link(`0,`1,Microsoft.TeamFoundation.Framework.Common.IMemoryCacheValidityPolicy{`0,`1})">
            <summary>
            Invoked upon adding item to the cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy`2.Unlink(Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEntry{`0,`1})">
            <summary>
            Invoked upon removing item from the cache
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy`2.UnlinkAll">
            <summary>
            Invoked when all items are removed from the cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy`2.GetEvictionCandidate">
            <summary>
            Returns best candidate for eviction
            This method is never called for empty cache so it should always return some (non null) item from cache
            It should prefer returning "invalid" (expired) item but it's a best effort
            It is Ok to return a valid item from the cache
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy`2.GetInvalidationCandidates">
            <summary>
            Returns set of invalid items from the cache (if any found) that could be garbage collected
            This method is not required to return all invalid items from the cache (it could be a subset)
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MemoryCacheList`2">
            <summary>
            MemoryCacheList implementation that notifies about updates via events
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheList`2.#ctor(Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheSubscriber{`0,`1},System.Boolean)">
            <summary>
            Creates a new MemoryCacheList.
            </summary>
            <param name="capacityPolicy">Policy controlling maximum size of the MemoryCacheList object.</param>
            <param name="evictionPolicy">Policy controlling eviction of cache items when capacity policy is violated.</param>
            <param name="subscriber">Cache notification subscriber.</param>
            <param name="synchronized">Flag to pick synchronized or unsafe implementation.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheList`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheSubscriber{`0,`1},System.Boolean)">
            <summary>
            Creates a new MemoryCacheList.
            </summary>
            <param name="comparer">Custom IEqualityComparer implementation to use for comparing keys</param>
            <param name="capacityPolicy">Policy controlling maximum size of the MemoryCacheList object.</param>
            <param name="evictionPolicy">Policy controlling eviction of cache items when capacity policy is violated.</param>
            <param name="subscriber">Cache notification subscriber.</param>
            <param name="synchronized">Flag to pick synchronized or unsafe implementation.</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MemoryCacheMultiSubscriber`2">
            <summary>
            Multicast cache notification subscriber
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MemoryCacheMultiSubscriber">
            <summary>
            Factory class to facilitate construction of multicast subscriber
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.BaseMemoryCacheCapacityPolicy`2">
            <summary>
            Base MemoryCacheList policy limiting cache size by either the MAX(count) or SUM(size) of elements and handling expiry of elements
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.LengthAndSizeMemoryCachePolicy`2">
            <summary>
            MemoryCacheList policy limiting cache size by either the MAX(count) or SUM(size) of elements
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.LengthOnlyMemoryCachePolicy`2">
            <summary>
            MemoryCacheList policy limiting cache size only by the MAX(count) of elements
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SizeOnlyMemoryCachePolicy`2">
            <summary>
            MemoryCacheList policy limiting cache size only by the SUM(size) of elements
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListSynchronized`2">
            <summary>
            Base class for the MemoryCacheList implementations (thread-safe)
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListSynchronized`2.#ctor(Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheSubscriber{`0,`1})">
            <summary>
            Creates a new MemoryCacheList.
            </summary>
            <param name="capacityPolicy">Policy controlling maximum size of the MemoryCacheList object.</param>
            <param name="evictionPolicy">Policy controlling eviction of cache items when capacity policy is violated.</param>
            <param name="subscriber">Cache notification subscriber.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListSynchronized`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheCapacityPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEvictionPolicy{`0,`1},Microsoft.TeamFoundation.Framework.Common.IMemoryCacheSubscriber{`0,`1})">
            <summary>
            Creates a new MemoryCacheList.
            </summary>
            <param name="comparer">Custom IEqualityComparer implementation to use for comparing keys.</param>
            <param name="capacityPolicy">Policy controlling maximum size of the MemoryCacheList object.</param>
            <param name="evictionPolicy">Policy controlling eviction of cache items when capacity policy is violated.</param>
            <param name="subscriber">Cache notification subscriber.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListSynchronized`2.Clear">
            <summary>
            Clears the MemoryCacheList of all entries.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListSynchronized`2.Add(`0,`1,System.Boolean,Microsoft.TeamFoundation.Framework.Common.IMemoryCacheValidityPolicy{`0,`1})">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to associate with key</param>
            <param name="overwrite">If true, will overwrite an existing key</param>
            <returns>True if the key was successfully added; false if the key was already in the dictionary</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListSynchronized`2.Remove(`0)">
            <summary>
            Removes a specific key from the cache.
            </summary>
            <param name="key">Key to remove</param>
            <returns>True if the key was removed from the cache</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListSynchronized`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">Key to look up</param>
            <param name="value">[out] Value associated with key, if found</param>
            <returns>True if a value was found associated with key</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.MemoryCacheListSynchronized`2.Count">
            <summary>
            The number of items currently in the cache.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.ClockHandEvictionPolicy`2">
            <summary>
            MemoryCacheList eviction policy based on ClockHand algorithm
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.ClockHandEvictionPolicy`2.Link(`0,`1,Microsoft.TeamFoundation.Framework.Common.IMemoryCacheValidityPolicy{`0,`1})">
            <summary>
            Creates new item and links it into the circular list
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.ClockHandEvictionPolicy`2.Unlink(Microsoft.TeamFoundation.Framework.Common.IMemoryCacheEntry{`0,`1})">
            <summary>
            Unlinks provided item from the circular list
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.ClockHandEvictionPolicy`2.UnlinkAll">
            <summary>
            Drops all items
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.ClockHandEvictionPolicy`2.GetEvictionCandidate">
            <summary>
            Returns node that can be removed from cache to free some space
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.ClockHandEvictionPolicy`2.GetInvalidationCandidates">
            <summary>
            Enumerates all invalid nodes in the cache
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.ClockHandEvictionPolicy`2.MemoryCacheEntry">
            <summary>
            An entry in the MemoryCacheList.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SparseTree`1">
            <summary>
            A store for tokens that can be organized hierarchically.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.GetOrAdd``1(System.String,System.Func{``0,`0},``0)">
            <summary>
            Looks up the provided token in the store. If found, the referenced object is returned.
            If not found, a new referenced object is constructed using the provided value factory,
            placed into the store, and returned to the caller.
            </summary>
            <param name="token">The token to look up</param>
            <param name="valueFactory">A function to execute which creates the referenced object
            in case the token is not in the store</param>
            <param name="valueFactoryParameter">An arbitrary parameter to pass to the value factory</param>
            <returns>The referenced object for the given token</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.Add(System.String,`0)">
            <summary>
            Adds a token and its referenced object to the SparseTree.
            </summary>
            <param name="token">The token to add</param>
            <param name="referencedObject">The referenced object for the given token</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.Remove(System.String,System.Boolean)" -->
        <member name="P:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.Item(System.String)">
            <summary>
            Gets or sets the token's value. If the token doesn't exist in the SparseTree, a get
            will cause a KeyNotFoundException to be thrown, while a set will cause the item
            to be created.
            </summary>
            <param name="token">The token whose value should be retrieved or set</param>
            <returns>The referenced object for this token</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.ChopToken(System.String@,System.String)">
            <summary>
            This is a helper method for EnumAndEvaluateParentsHelper when enumerating
            sparse nodes.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.EnumNodeCallback">
            <summary>
            The EnumNodeCallback is used when enumerating the nodes in the 
            store
            </summary>
            <param name="token">token of the element in the store</param>
            <param name="referencedObject">Object referenced by the path</param>
            <param name="noChildrenBelow">The value of noChildrenBelow for the node</param>
            <param name="isExactMatch">If the node is the exact match</param>
            <returns>Return true to terminate the enumeration, or false to continue</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.EnumParents(System.String,Microsoft.TeamFoundation.Framework.Common.EnumParentsOptions)">
            <summary>
            Queries the SparseTree for the parents of the provided token.
            Only nodes that have been specifically added to the SparseTree are enumerated, unless
            the EnumerateSparseNodes flag is passed as part of the options parameter.
            There is no requirement that the specified token exist in the tree.
            Nodes are enumerated from token to the root of the tree in a streaming fashion.
            Do not modify the SparseTree while enumerating.
            </summary>
            <param name="token">The token whose parents to retrieve</param>
            <param name="options">EnumParentsOptions flags to control behavior</param>
            <returns>The parents of the provided token</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.EnumParentsReferencedObjects(System.String,Microsoft.TeamFoundation.Framework.Common.EnumParentsOptions)">
            <summary>
            Queries the SparseTree for the parents of the provided token.
            Only nodes that have been specifically added to the SparseTree are enumerated, unless
            the EnumerateSparseNodes flag is passed as part of the options parameter.
            There is no requirement that the specified token exist in the tree.
            Nodes are enumerated from token to the root of the tree in a streaming fashion.
            Do not modify the SparseTree while enumerating.
            </summary>
            <param name="token">The token whose parents to retrieve</param>
            <param name="options">EnumParentsOptions flags to control behavior</param>
            <returns>The parents of the provided token</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.EnumSubTree(System.String,Microsoft.TeamFoundation.Framework.Common.EnumSubTreeOptions,System.Int32)">
            <summary>
            This will enumerate the entire subtree of the path supplied.
            The root of the subtree will not be enumerated unless the EnumerateSubTreeRoot flag is specified.
            The traversal of the tree is depth-first.
            </summary>
            <param name="token">The token whose parents to retrieve</param>
            <param name="options">EnumSubTreeOptions flags to control behavior</param>
            <returns>The children of the provided token</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.EnumSubTreeReferencedObjects(System.String,Microsoft.TeamFoundation.Framework.Common.EnumSubTreeOptions,System.Int32)">
            <summary>
            This will enumerate the entire subtree of the path supplied.
            The root of the subtree will not be enumerated unless the EnumerateSubTreeRoot flag is specified.
            The traversal of the tree is depth-first.
            </summary>
            <param name="token">The token whose parents to retrieve</param>
            <param name="options">EnumSubTreeOptions flags to control behavior</param>
            <returns>The children of the provided token</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.Count">
            <summary>
            Returns the number of key/value pairs in this SparseTree.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.SparseTreeNode`1">
            <summary>
            Represents a node in the tree.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.SparseTreeNode`1.ChildCount">
            <summary>
            The number of children of this SparseTreeNode
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.SparseTreeNode`1.Enumerate(System.Boolean)">
            <summary>
            Returns an EnumeratedSparseTreeNode for this SparseTreeNode.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.SparseTreeNode`1.Copy(System.Boolean)">
            <summary>
            Returns a deep copy of this SparseTreeNode including all children.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.SparseTreeNode`1.LazyCopy">
            <summary>
            Returns a copy of this SparseTreeNode with reference to the source children. 
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.SparseTree`1.SparseTreeNode`1.HasValue">
            <summary>
            Test whether ReferencedObject is set. Only relevant on the root node
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.EnumeratedSparseTreeNode`1.Token">
            <summary>
            The token of this SparseTree entry.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.EnumeratedSparseTreeNode`1.ReferencedObject">
            <summary>
            The object referenced by this SparseTree entry.
            The value may be null iff EnumerateSparseNodes was specified as an option.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.EnumeratedSparseTreeNode`1.HasChildren">
            <summary>
            True if the enumerated token has no children below it in the SparseTree.
            This field is only valid if includeAdditionalData was set to true.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.EnumeratedSparseTreeNode`1.NoChildrenBelow">
             <summary>
             This field only is only valid when:
              (a) This enumerated node is the *first* result of an EnumParents call
              (b) The IncludeAdditionalData flag was set to 1
             
             If non-null, then the token in this field is the shallowest token in the hierarchical
             range [this.Token, the token passed to EnumParents] which has no children.
            
             Example: When calling EnumParents on $/A/B/C/D in a SparseTree which contains
             nodes $/A and $/A/Z, the first node to be enumerated will be $/A. In this case,
             the hierarchical range described above is [$/A, $/A/B/C/D]. The shallowest token
             in this range for which there are no children is $/A/B, so the value of NoChildrenBelow
             on the EnumeratedSparseTreeNode for $/A is $/A/B.
             
             Example 2: When calling EnumParents on $/A/A in a SparseTree which contains
             nodes $/A and $/A/A/B, the first node to be enumerated will be $/A. In this case,
             the hierarchical range described above is [$/A, $/A/A]. There is no token in this
             range for which there are no children, so the value of NoChildrenBelow on
             the EnumeratedSparseTreeNode for $/A is null.
             </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.EnumeratedSparseTreeNode`1.IsExactMatch">
            <summary>
            True if this node is an exact match for the requested token;
            false if this node represents a parent token.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.RegistryUtility">
            <summary>
            Utility methods for the Team Foundation Registry.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationServiceHostStatus.Unchanged">
            <summary>
            Unchanged means the host status has not been modified (used in Sql notifications)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationServiceHostStatus.Starting">
            <summary>
            Starting means the host is preparing to accept requests.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationServiceHostStatus.Started">
            <summary>
            Started means the host is ready to accept requests.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationServiceHostStatus.Stopping">
            <summary>
            When the host is stopped, it first transitions to the stopping state
            while active requests are being processed, it will not accept new 
            requests while in this state.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationServiceHostStatus.Stopped">
            <summary>
            Stopped means the host is not currently processing any
            requests, and when clients make requests that target this host
            the requests will be denied before being sent to the services they are
            targetting.
            
            If the host was Started or Paused when the state was switched
            to Stopped any resources associated with the host are disposed
            of and the service host is shutdown.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationServiceHostStatus.Pausing">
            <summary>
            When the host is paused, it first transitions to the
            pausing state while active requests are being processed, it will not
            accept new requests while in this state.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationServiceHostStatus.Paused">
            <summary>
            Paused is the same as stopped except it does not release the resources
            associated with the host. It keeps the host loaded, not notifying
            the services of the state change.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper">
            <summary>
            Provides a simple mechanism for dealing with multiple chained calls participating in a single timeout.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new <c>Microsoft.TeamFoundation.Framework.Common.TimeoutHelper</c> instance with the 
            specified timeout.
            </summary>
            <param name="timeout">The timeout for the entire operation</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.Value">
            <summary>
            Gets the original timeout value.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.Resume">
            <summary>
            Resumes the countdown timer.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.Suspend">
            <summary>
            Suspends the countdown timer.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.ElapsedTime">
            <summary>
            Gets the time elapsed on the overall timeout.
            </summary>
            <returns>The elapsed time for the overall timeout</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.RemainingTime">
            <summary>
            Gets the time remaining on the overall timeout.
            </summary>
            <returns>The remaining time for the overall timeout</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.RemainingTimeInMilliseconds">
            <summary>
            Gets the time remaining, in milliseconds, of the overall timeout.
            </summary>
            <returns>The remaining time, in milliseconds, of the overal timeout</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.Min(System.TimeSpan,System.TimeSpan)">
            <summary>
            Gets the mimimum value between the two provided <c>TimeSpan</c> instances.
            </summary>
            <param name="left">The first time span</param>
            <param name="right">The second time span</param>
            <returns>The smaller <c>TimeSpan</c> instance</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.Max(System.TimeSpan,System.TimeSpan)">
            <summary>
            Gets the maximum value between the two provided <c>TimeSpan</c> instances.
            </summary>
            <param name="left">The first time span</param>
            <param name="right">The second time span</param>
            <returns>The larger <c>TimeSpan</c> instance</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.Trim(System.TimeSpan)">
            <summary>
            Trims the timespan to ensure no exceptions are thrown from framework methods if TimeSpan.MaxValue
            is provided from a caller.
            </summary>
            <param name="timeout">The original timeout value provided by the caller</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.TimeoutHelper.WaitOne(System.Threading.WaitHandle,System.TimeSpan)">
            <summary>
            Waits for the specified timeout on the wait handle.
            </summary>
            <param name="waitHandle">The wait handle</param>
            <param name="timeout">The maximum time to wait</param>
            <returns>A value indicating whether or not the wait handle was signaled</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.JobPriorityClass">
            <summary>
            Priority associated with a job definition.
            </summary>
            <remarks>
            Modeled after System.Diagnostics.ProcessPriorityClass. RealTime not currently supported.
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.JobPriorityLevel">
            <summary>
            Priority associated with one schedule or execution of a job.
            </summary>
            <remarks>
            Modeled after Windows' thread priority levels and System.Threading.ThreadPriority. TimeCritical not currently supported.
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobState.Dormant">
            <summary>
            The job is not in progress. It will not be executed until the associated service host is accessed by an end-user, or the job is queued on-demand.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobState.QueuedScheduled">
            <summary>
            The job is not in progress. It is ready-to-run (assuming its associated service host is online), or is scheduled for execution.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobState.Running">
            <summary>
            The job is assigned to a job agent and executing.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobState.Paused">
            <summary>
            The job is assigned to a job agent and execution is paused.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobState.Pausing">
            <summary>
            The job is assigned to a job agent and executing. It is requested that it transition to the Paused state.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobState.Resuming">
            <summary>
            The job is assigned to a job agent and transitioning to the Running state.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobState.Stopping">
            <summary>
            The job is assigned to a job agent and executing. It is requested that it immediately complete execution and transition to QueuedScheduled or Dormant.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobResult">
            <summary>
            The result of running an instance of a job definition.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobResult.JobInitializationError">
            <summary>
            Indicates there was an error initializing a job request context or reading the job definition.
            </summary>
            <remarks>
            This error usually is a sign of some severe issue (e.g. database not being available or malformed host and such)
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobResult.BlockedByUpgrade">
            <summary>
            Job is marked as DisableDuringUpgrade and upgrade is running
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobResult.HostShutdown">
            <summary>
            Job was attempted to execute while host is stopped, job will be released as dormant
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobResult.HostNotFound">
            <summary>
            Job was attempted to execute for non-existent host, job will be discarded
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobResult.JobDefinitionNotFound">
            <summary>
            Job definition was not found for the job in queue
            </summary>
            <remarks>
            This error might happen when job is queued with a guid that doesn't correspond to a valid job.
            It could a AT/DT issue that goes away after host is upgraded.
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobResult.Last">
            <summary>
            This should always be the last value in the enum
            Whenever you add new item to the enum make sure you bump it up
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobEnabledState">
            <summary>
            The Enabled state of the job
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobQueuedReasons">
            <summary>
            Flags related to job queue entries and job history entries.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobQueuedReasons.None">
            <summary>
            There is no reason to execute the job.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobQueuedReasons.Scheduled">
            <summary>
            The job has an associated schedule.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobQueuedReasons.Queued">
            <summary>
            The job was queued via QueueJobNow or QueueOneTimeJob.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobQueuedReasons.QueuedWhileInProgress">
            <summary>
            During the previous execution of the job, it was queued again via QueueJobNow.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamFoundationJobQueuedReasons.PreviousExecutionResult">
            <summary>
            Job requeued due to previous execution result (e.g. Blocked, Inactive).
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.TfsMessageQueueVersion">
            <summary>
            The API version of the message queue service.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TfsMessageQueueVersion.V1">
            <summary>
            Version 1 requires in-order acknowledgement of messages.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TfsMessageQueueVersion.V2">
            <summary>
            Version 2 supports out-of-order acknowledgement of messages.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TfsMessageQueueVersion.V3">
            <summary>
            Version 3 supports simple string-based message containers.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MakeConnectionConstants">
            <summary>
            Gets constants for reading and writing WS-MakeConnection requests.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.PropertiesOptions">
            <summary>
            Options for the Get Properties method.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.PropertiesOptions.None">
            <summary>
            No options were specified
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.PropertiesOptions.AllVersions">
            <summary>
            Ignore the Version Property and use all versions for the operation.
            Currently only valid on query properties.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.GetPropertiesOptions">
            <summary>
            Options for the Get Properties method. 
            Used to maintain client OM signature
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.IProxyRegistration">
            <summary>
            This interface will return the collection id associated with the passed in Url
            If no collection is found, this should return null
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.FrameworkNamespaceId">
            <summary>
            This is the set of namespaces that exist in the framework.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.ProcessTemplatesNamespaceId">
            <summary>
            The legacy Collection-Level process permissions namespace
            This is currently pointing to the Integration "Namespace" security namespace
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.ProcessNamespaceId">
            <summary>
            The namespace identifier for process security.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.MessageQueueNamespaceId">
            <summary>
            The namespace identifier for message queue security.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.MessageQueueNamespaceRootToken">
            <summary>
            The root token for message queue security.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.MessageQueuePathSeparator">
            <summary>
            The path separator character for message queue security.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.FrameworkNamespaceToken">
            <summary>
            This is the primary token used in the 'Server' namespace (FrameworkNamespaceId) for demanding
            GenericRead, GenericWrite, etc. on the service host.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.JobNamespaceToken">
            <summary>
            Token information for the job security tokens.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.CollectionManagementNamespaceToken">
            <summary>
            This will serve as the collection management namespace.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.RegistryPathSeparator">
            <summary>
            Token information for the registry security tokens
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.ProcessTemplateNamespaceToken">
            <summary>
            Token information for the process template namespace.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.FrameworkSecurity.DiagnosticPathSeparator">
            <summary>
            Token information for the registry security tokens
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.EventSubscriptionPermissions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.MessageQueuePermissions">
            <summary>
            Represents permissions that can be manipulated for a message queue.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MessageQueuePermissions.Read">
            <summary>
            The ability to see a message queue.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MessageQueuePermissions.Enqueue">
            <summary>
            The ability to enqueue messages.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MessageQueuePermissions.Dequeue">
            <summary>
            The ability to dequeue messages.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MessageQueuePermissions.Create">
            <summary>
            The ability to create a message queue.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MessageQueuePermissions.Delete">
            <summary>
            The ability to delete a message queue.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.MessageQueuePermissions.AllPermissions">
            <summary>
            Includes all permissions related to message queues.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.RegistryServicePermissions">
            <summary>
            The permissions that can be set and checked for in the registry.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.RegistryServicePermissions.Read">
            <summary>
            The ability to read the value of a given regisry path
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.RegistryServicePermissions.Write">
            <summary>
            The ability to both modify and add registry path/value pairs
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.RegistryServicePermissions.AllPermissions">
            <summary>
            This defines the set of bits that are valid for the RegistryService
            permission space. When reading or writing registry service permissions
            these are the only bits paid attention too.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.CollectionManagementPermissions">
            <summary>
            The permissions that can be set and checked for in the location
            service.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.CollectionManagementPermissions.CreateCollection">
            <summary>
            The ability to create collections
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.CollectionManagementPermissions.DeleteCollection">
            <summary>
            The ability to delete a collection
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.CollectionManagementPermissions.AllPermissions">
            <summary>
            This defines the set of bits that are valid for the collection management
            permission space. When reading or writing collection management permissions
            these are the only bits paid attention too.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.ProcessTemplatePermissions">
            <summary>
            Legacy collection-level process permissions
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.ProcessTemplatePermissions.GenericRead">
            <summary>
            Read process template metadata
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.ProcessTemplatePermissions.ReadTemplateContents">
            <summary>
            This lines up with the 'CreateProjects' permission bit, but if
            process template security had its own security namespace this is what we'd call this permission.
            
            Users who can create projects should be able to read the template contents in order
            to run PCW.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.ProcessTemplatePermissions.ManageTemplates">
            <summary>
            Create/Delete/Update process templates.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamProjectPermissions.ManageProperties">
            <summary>
            The permission required for setting project properties.
            Introduced in Dev15 Update 2 / VSO (M116).
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamProjectPermissions.ManageSystemProperties">
            <summary>
            The permission required for setting system project properties.
            Introduced in Dev15 Update 2 / VSO (M116).
            </summary>
            <remarks>
            This permission was excluded from AllPermissions to avoid being unintentionally granted.
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamProjectPermissions.BypassPropertyCache">
            <summary>
            The permission required for bypassing the project property cache.
            Introduced in Dev16 / VSO (M118).
            </summary>
            <remarks>
            This permission was excluded from AllPermissions to avoid being unintentionally granted.
            </remarks>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamProjectPermissions.BypassRules">
            <summary>
            The permission required for bypassing the rules  while updating work items.
            Introduced in Dev16 / VSO (M126).
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamProjectPermissions.SuppressNotifications">
            <summary>
            The permission required for suppressing notifications for work item updates.
            Introduced in Dev16 / VSO (M126).
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamProjectPermissions.UpdateVisibility">
            <summary>
            The permission required for updating project visibility. 
            Introduced in Dev16 / VSO (M131).
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.TeamProjectPermissions.ChangeProjectsProcess">
            <summary>
            The permission required for changing the process of the team project
            Introduced in Dev17 / VSO (M136).
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.AadSecurity.Permissions">
            <summary>
            The permissions that can be set and checked for.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SecurityNamespaceStructure">
            <summary>
            Represents the type of organization that a given security namespace
            uses when storing its tokens.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.SecurityNamespaceStructure.Flat">
            <summary>
            Indicates that tokens have no relationship to each other in the 
            security namespace.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.Framework.Common.SecurityNamespaceStructure.Hierarchical">
            <summary>
            Indicates that tokens are organized in a hierarchical structure
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SecurityIdentifierInfo">
            <summary>
            SecurityIdentifier wrapper. In addition to the SecurityIdentifier, this class 
            caches the binary form of the full Sid and AccountDomain Sid after first access.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SecurityIdentifierInfo.#ctor(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.SecurityIdentifierInfo.SecurityId">
            <summary>
            SecurityIdentifier.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SecurityIdentifierInfo.GetBinaryForm">
            <summary>
            Get the cached binary form of SecurityId
            </summary>
            <returns>a byte array</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SecurityIdentifierInfo.GetAccountDomainBinaryForm">
            <summary>
            Get the cached binary form of SecurityId.AccountDomainSid
            </summary>
            <returns>a byte array or null if SecurityId.AccountDomainSid is null</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper">
            <summary>
            Helper methods for SID based descriptors (Windows and TFS).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.NewSid(System.Guid)">
            <summary>
            Create a new ResourceManager Sid.
            We use the SECURITY_RESOURCE_MANAGER_AUTHORITY as our Identifier Authority
            when we create SIDs.  Since many different apps use SECURITY_RESOURCE_MANAGER_AUTHORITY,
            the sub-authorities in our SIDs are composed of 4 parts.  
            1. A constant, which is used to make sure we don't collide with other users of
            SECURITY_RESOURCE_MANAGER_AUTHORITY.
            2. A GUID, which identifies the IMS instance or domain.
            3. The next part is either 0 or 1.  
            0 indicates well known SIDs. In this case, the last part is the constant, well known SID. 
            1 indicates all other SIDs. In this case, the last part is a GUID generated for the SID.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.ConstructWellKnownSid(System.UInt32,System.UInt32)">
            <summary>
            Construct well known Team Foundation identifier.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.ConstructPhantomSid(System.Guid)">
            <summary>
            Phantom identity is a dummy TeamFoundationIdentity for a Guid which is mapped in the collection
            but not found in the Config db. This can happen, for example, if the collection db has
            been restored from a later backup than the config db. For such an identity the SID suffix
            is generated from the Guid.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.DecodePhantomSid(Microsoft.TeamFoundation.Framework.Common.SecurityIdentifierInfo)">
            <summary>
            Extract the phantom Guid from phantom SID. Refer comments for construct method.
            Pre-condition: caller has verified SID matches phantom SID pattern.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.DecodeAadSid(Microsoft.TeamFoundation.Framework.Common.SecurityIdentifierInfo)">
            <summary>
            Extract the AAD Gorup Guid from AAD SID. Refer comments for construct method.
            Pre-condition: caller has verified SID matches AAD SID pattern.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.DecodeSid(System.Byte[],System.Int32@,System.UInt64@)">
            <summary>
            Convert a binary SID into it's parts.
            The code for this conversion comes from the SecurityIdentifier object.
            </summary>
            <param name="binarySid"></param>
            <param name="revision"></param>
            <param name="authority"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.IsServiceAccount(System.Byte[])">
            <summary>
            Is this the the well known Sid for Network Service or
            Local Service
            </summary>
            <param name="sid">Sid to check (in binary form)</param>
            <returns>true if this is Network Service or Local Service, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.IsNTAccount(System.Byte[])">
            <summary>
            Is this the SID of an NT Identity.  NT Identities can come from
            either the SAM database or Active Directory.  They come from the 
            Windows NT Authority (5) and have 21 as their first sub authority.
            </summary>
            <param name="sid">SID to check (in binary form)</param>
            <returns>true if this is an NT Identity, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.IsBuiltInAccount(System.Byte[])">
            <summary>
            Is this the SID of one of the builtin accounts?  All builtin accounts
            come from the Windows NT Authority (5) and have 32 as
            their first sub authority.
            </summary>
            <param name="sid">SID to check</param>
            <returns>true if SID has "BUILTIN" as its domain, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.IsNTServiceAccount(System.Byte[])">
            <summary>
            Is this the SID of one of the NT Service accounts?  All NT Service accounts
            come from the Windows NT Authority (5) and have 80 as
            their first sub authority.
            </summary>
            <param name="sid">SID to check</param>
            <returns>true if SID has "NT Service" as its domain, false otherwise</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.IsAadGroupSid(System.Byte[])">
            <summary>
            Is this an AAD Group
            </summary>
            <param name="sid">Sid to check (in binary form)</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.WellKnownGroupSidComparer">
            <summary> Used for comparing a SID vs a WelllKnownGroupSid. </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.Framework.Common.SidIdentityHelper.WellKnownDomainSidComparer">
            <summary>
            Used for comparing a SID vs a WelllKnownGroupSid. 
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.LoggingDBReportingNames">
            <summary>
            These constants are used in the logging database to record the web service that
            submitted each log record.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.EventLogSourceNames">
            <summary>
            These constants are the "source" used by each web service for Event Log entries.
            </summary>
            These constants are duplicated in the VssAzurePrep\EventSourceInstaller.cs.
            If you change values here, make sure to update that file as well.
        </member>
        <member name="T:Microsoft.TeamFoundation.TraceComponentNames">
            <summary>
            These mnemonics are included in the diagnostic trace output to identify the web service
            that is providing the trace output.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.WatsonReportingNames">
            <summary>
            These are the names used by the DevOps components. These names end up in
            the P2 parameter of the TeamFoundationUE event.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.RedirectCommands.Authenticate">
            <summary>
            The Authenticate Command is sent when the server requires the caller
            to authenticate to perform the requested action. Following the
            command will be one or more providers the server supports. The
            client should choose one of the supported providers if the client
            can. It not the caller can't complete the request.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.RedirectCommands.CreateProfile">
            <summary>
            Profile Commands are sent when users authenticate against the server
            but the identity provider can't give us enough information to give
            a basic profile. TFS requires the caller to provide the basic
            information and validate it.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.CommonSqlError">
            <summary>
            The following SQL error numbers are common error numbers recognized by all TFS components.
            They are registered in the database using the Integration components' process of
            registering error messages. These error numbers range from 480000 - 499999
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.SqlCommandTimeout">
            <summary>
            Predefined SQL command timeouts in seconds
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.SqlCommandTimeout.DefaultAnonymousTimeout">
            <summary>
            Default timeout used for requests from anonymous and public users, in seconds.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.SqlCommandTimeout.Max(System.Int32,System.Int32)">
            <summary>
            Returns the larger of two timeouts.
            </summary>
            <param name="timeout1">The first of two timeouts to compare.</param>
            <param name="timeout2">The second of two timeouts to compare.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.StandardSqlError">
            <summary>
            The following SQL error numbers are recognized when part of a SqlException object.
            The error numbers represent either a potentially transient condition (mapped
            into a DatabaseConnection or DatabaseFull object) or a permanent condition (mapped
            into a DatabaseConfiguration object).
            </summary>
            <remarks>
            Sorted by error number for clarity.
            </remarks>
        </member>
        <member name="T:Microsoft.TeamFoundation.CollectionServicingTokens">
            <summary>
            Provides access to Team Project Collection servicing token names and values
            used when setting up or invoking a collection servicing method.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.ProxyConstants.DownloadUrlSuffix">
            URL suffix used to download items from the web service using pure HTTP protocol
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamConstants">
            <summary>
            Constants associated with 'Teams' in TFS.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamPropertyName">
            <summary>
            Property on a group which indicates that it is a team.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.DefaultTeamPropertyName">
            <summary>
            Property on a project which indicates the DevOps id of the default team.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamSettingsPropertyName">
            <summary>
            Property on a group which indicates that it is a team.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TileZoneTileOrderPropertyName">
            <summary>
            Property on a group which indicates the tile order for a given tile zone.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.DefaultValueIndexPropertyName">
            <summary>
            Property name for the property that specifies the default value to use in the area path field since there can be more than one
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.DefaultIncludeChildrenValue">
            <summary>
            Default value for Include children for Team Area paths
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamFieldSettingsPropertyName">
            <summary>
            Property name for the property which team field settings.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamFieldDefaultValueIndexPropertyName">
            <summary>
            Property name for the property which contains the 'team field' default values.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamFieldValuesPropertyName">
            <summary>
            Property name for the property which contains the 'team field' default values.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamFieldValueFormat">
            <summary>
            Format string for setting the default team value for a team.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.BacklogIterationPropertyName">
            <summary>
            Property name for the Backlog iteration (set to the Guid of the iteration that holds the backlog)
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamIterationPropertyName">
            <summary>
            Property name for the collection of iteration paths that are associated with a team
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamIterationIdPropertyNameFormat">
            <summary>
            Property name format for the collection of iteration paths that are associated with a team
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.TeamChartCachePropertyName">
            <summary>
            Property name for cached chart data associated with Team Identity.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.WIPLimitsPropertyName">
            <summary>
            Property name for Work In Progress Limit data for a teams backlog board
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.CumulativeFlowDiagramStartDate">
            <summary>
            Property name for Cumulative Flow Diagram start date
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.CumulativeFlowDiagramHideIncoming">
            <summary>
            Property name for Cumulative Flow Diagram hide incoming flag
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamConstants.CalledFromTeamFoundationTeamService">
            <summary>
            Only for use by TeamFoundationTeamService
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.DragDropConstants">
            <summary>
            Constant strings used in drag drop
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.CodeReviewContextKeyNames">
            <summary>
            Constants used for saving/restoring the code review context in the Team Explorer
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationServerException">
            <summary>
            Base class for all custom exceptions thrown from TeamFoundation code.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerException.#ctor">
            <summary>
            No-arg constructor that sumply defers to the base class.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerException.#ctor(System.String)">
            <summary>
            Initializes an exception with the specified error message.
            </summary>
            <param name="message">A human readable message that describes the error</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an exception with the specified error message and an inner exception that caused this exception to be raised.
            </summary>
            <param name="message">A human readable message that describes the error</param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes an exception from serialized data
            </summary>
            <param name="info">object holding the serialized data</param>
            <param name="context">context info about the source or destination</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerException.GetProperty``1(System.String)">
            <summary>
            Retrieves a property from the list of properties returned from the server if it exists. If no such property
            exists then a default value is returned for the requested type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationServerException.Data">
            <summary>
            Gets the data associated with this exception, if any.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.CredentialProcurement.Failed">
            <summary>
            Failed to refresh or acquire new credentials.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.CredentialProcurement.Succeeded">
            <summary>
            Successfully refreshed or acquired new credentials.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.CredentialProcurement.Cancelled">
            <summary>
            The refresh or acquire operation was cancelled.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationAuthenticationError">
            <summary>
            Specifies the errors which may occur during authentication.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamFoundationAuthenticationError.None">
            <summary>
            No authentication-related error occurred.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamFoundationAuthenticationError.Cancelled">
            <summary>
            The authentication attempt was cancelled.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamFoundationAuthenticationError.GetTokenFailed">
            <summary>
            The authentication attempt encountered an error. See the inner exception for more details.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamFoundationAuthenticationError.InteractiveRequired">
            <summary>
            An interactive environment is required for the credentials to be authenticated.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamFoundationAuthenticationError.TokenUnauthorized">
            <summary>
            The token retrieved from the provider is not able to authenticate with the remote server.
            </summary>
        </member>
        <member name="F:Microsoft.TeamFoundation.TeamFoundationAuthenticationError.UserMismatched">
            <summary>
            The authenticated user is not the user currently associated with the connection.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException">
            <summary>
            This exception is thrown when the user is rejected by the web server (IIS rejects the
            request because the user isn't authorized to access the specified site/service).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException.#ctor">
            <summary>
            No-arg constructor that simply defers to the base class.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException.#ctor(System.String)">
            <summary>
            Initializes an exception with the specified server name or URL.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException.#ctor(System.Exception)">
            <summary>
            Initializes an exception with the message from the inner exception and an inner exception that caused this exception to be raised.
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an exception with the specified server name or URL and an inner exception that caused this exception to be raised.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes an exception from serialized data
            </summary>
            <param name="info">object holding the serialized data</param>
            <param name="context">context info about the source or destination</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException.AuthenticationError">
            <summary>
            Gets a value indicating details about the particular error encountered.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException.WebException">
            <summary>
            Gets the web exception which triggered this exception, or null if not available.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationServerUnauthorizedException.WebResponse">
            <summary>
            Gets the web response which triggered this exception, or null if not available.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationInvalidAuthenticationException">
            <summary>
            Indicates that the authentication with the remote server cannot be fulfilled.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationInvalidAuthenticationException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationInvalidAuthenticationException.#ctor(System.String,Microsoft.TeamFoundation.TeamFoundationAuthenticationError)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="error"></param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationInvalidAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes an exception from serialized data
            </summary>
            <param name="info">object holding the serialized data</param>
            <param name="context">context info about the source or destination</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationServerVersionCheckException">
            <summary>
            This exception is thrown when the user is rejected by the web server (IIS rejects the
            request because the user isn't authorized to access the specified site/service).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerVersionCheckException.#ctor(System.String)">
            <summary>
            Initializes an exception with the specified server name or URL.
            </summary>
            <param name="nameOrUrl">The server name or URL</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerVersionCheckException.#ctor(System.String,System.String)">
            <summary>
            Initializes an exception with the specified server name or URL as well as the accepted range of versions.
            </summary>
            <param name="nameOrUrl">The server name of URL</param>
            <param name="range">The range of server version</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerVersionCheckException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes an exception from serialized data
            </summary>
            <param name="info">object holding the serialized data</param>
            <param name="context">context info about the source or destination</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationInvalidServerNameException">
            <summary>
            This exception is thrown when the server name passed in to the client is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationInvalidServerNameException.#ctor(System.String)">
            <summary>
            Initializes an exception with the specified server name or URL.
            </summary>
            <param name="nameOrUrl">The server name or URL</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationInvalidServerNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes an exception from serialized data
            </summary>
            <param name="info">object holding the serialized data</param>
            <param name="context">context info about the source or destination</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationServiceUnavailableException">
            <summary>
            This exception is thrown when the server name passed in to the client is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServiceUnavailableException.#ctor(System.String,System.String)">
            <summary>
            Initializes an exception with the specified server name or URL.
            </summary>
            <param name="nameOrUrl">The server name or URL</param>
            <param name="reason">The server-provided reason why servicing isn't possible</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an exception with the specified message and inner exception.
            </summary>
            <param name="message">The error message to provide for the exception</param>
            <param name="innerException">The original exception which caused this exception</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServiceUnavailableException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes an exception with the specified server name or URL and the specified
            inner exception.
            </summary>
            <param name="nameOrUrl">The server name or URL</param>
            <param name="reason">The server-provided reason why servicing isn't possible</param>
            <param name="innerException">The original exception which caused this exception</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServiceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes an exception from serialized data
            </summary>
            <param name="info">object holding the serialized data</param>
            <param name="context">context info about the source or destination</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServiceUnavailableException.#ctor(System.String)">
            <summary>
            Initializes an exception with the specified server name or URL.
            </summary>
            <param name="reason">The server-provided reason why servicing isn't possible</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.DatetimeShiftDetectedException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationServerInvalidResponseException">
            <summary>
            This exception is thrown when HTML is returned from a SOAP call.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerInvalidResponseException.#ctor(System.String,System.Exception,System.Net.HttpStatusCode,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message.  To get the default message, use the results of calling FormatInvalidServerResponseMessage.</param>
            <param name="innerException">Inner Exception.  Pass null if none.</param>
            <param name="statusCode">HttpWebResponse.StatusCode</param>
            <param name="responseData">String representing the response data.  Use the GetResponseString to assist with this.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerInvalidResponseException.FormatInvalidServerResponseMessage(System.Net.HttpWebResponse)">
            <summary>
            Formats the HttpWebResponse into a string suitable for throwing in an exception.
            </summary>
            <param name="response">The response object</param>
            <returns>A string suitable for throwing in an exception</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerInvalidResponseException.FormatHttpStatus(System.Net.HttpWebResponse)">
            <summary>
            Formats the HttpStatusCode into a string suitable for throwing in an exception.
            </summary>
            <param name="response">The response object</param>
            <returns>A string suitable for throwing in an exception</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationServerInvalidResponseException.GetResponseString(System.IO.Stream)">
            <summary>
            Gets the response stream as a string.
            If the stream is a TracingStream, it'll get logged.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationServerInvalidRequestException">
            <summary>
            Thrown when the server returns a 400 (Bad Request) status code.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationClientVersionCheckException">
            <summary>
            This exception is thrown when the server version is not supported by the client
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationClientVersionCheckException.#ctor(System.String)">
            <summary>
            Initializes an exception with the specified server name or URL.
            </summary>
            <param name="nameOrUrl">The server name or URL</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationClientVersionCheckException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes an exception from serialized data
            </summary>
            <param name="info">object holding the serialized data</param>
            <param name="context">context info about the source or destination</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationExceptionFormatter">
            <summary>
            Team Foundation exception format class
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationExceptionFormatter.FormatException(System.Exception,System.Boolean)">
            <summary>
             Format a exception, including all inner exceptions.
            </summary>
            <param name="exception">The top-level exception.</param>
            <param name="useBriefFormat">Omit exception details from return value</param>
            <returns>A formatted exception string that includes nested exceptions.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationExceptionFormatter.formatOneException(System.Exception,System.Boolean)">
            <summary>
             Format a single exception.
            </summary>
            <param name="exception">The exception</param>
            <param name="useBriefFormat">Omit exception details</param>
            <returns>A formatted exception string.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationExceptionFormatter.formatDataDictionary(System.Exception)">
            <summary>
            Format an exception's Data dictionary.
            </summary>
            <param name="exception">Exception to format the .Data dictionary.</param>
            <returns>String form of the .Data dictioanry.</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.InvalidPathException">
            <summary>
            INTERNAL Exception thrown when something is wrong with the syntax of a path.  It derives
            from ArgumentException to match the exception used by System.IO.Path.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTextWriterTraceListener.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="fileName">File name</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTextWriterTraceListener.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTextWriterTraceListener.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTextWriterTraceListener.InitializeFile(System.String)">
            <summary>
            Initialize and open the specified file.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTextWriterTraceListener.WriteInternal(System.String,System.Boolean)">
            <summary>
            Write the message, prefixing with a header on a new line if one is not detected.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTextWriterTraceListener.TraceFileDirectoryName">
            <summary>
            Get/set the static trace file directory name.  If no filename is specified,
            trace logs are written to this directory.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTextWriterTraceListener.TraceFileName">
            <summary>
            Get the current filename.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTextWriterTraceListener.Fail(System.String,System.String)">
            <summary>
            Log assertion failures.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TraceKeywords">
             <summary>
             Common trace keywords that may be used across teams.  Feel free to add additional
             keywords that will be useful to all teams.  Team-specific feature keywords should
             be kept within the team's own code area.
             </summary>
             <remarks>
             Trace keywords provide a mechanism to compartmentalize the trace messages to
             functional areas.  The keywords are provided as a string array, and can be
             any string with which the caller wants to tag the trace output.
            
             Each keyword corresponds to a TraceSwitch object, which can be set via the
             app config file (exe.config, web.config) or at runtime.  As an optimization,
             the TraceSettings class keeps track if any trace switches are enabled and
             exposes a boolean (IsTracingEnabled) that can be quickly checked to see
             if trace output should be attempted.
            
             Each TraceSwitch has a TraceLevel that is one of the following values:
            
                 Off: No output
                 Error: Errors that occur in your code.
                    E.g., you have an exception filter and wish to trace the exception.
                    Note: you should be sending information about these to the event log as errors.
                 Warning: Conditions noticed by your application that are problematic but may
                   be transient and/or self-correcting. Note: these should probably be sent to
                   the event log as warnings also.
                 Info: Informative messages, concise and brief.
                 Verbose: Other information; no limits on how much information is provided here.
             </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TraceKeywords.BuildKeyword(System.String[])">
             <summary>
             Build a formatted keyword from the keyword fragments.  Having all callers build
             their keywords with this method promotes consistency and ease of tweaking the
             keyword format.
             
             FUTURE: To avoid collisions with other products, the convention may be changed to
             a format like this:
            
                 TFS.KeywordFragment1[.KeywordFragment2...]
            
             This function will provide the TFS prefix and append all other provided fragments.
             </summary>
             <param name="keywordFragments">One or more keyword fragments used to build the full keyword</param>
             <returns>Formatted keyword</returns>
        </member>
        <member name="T:Microsoft.TeamFoundation.TraceKeywordSets">
            <summary>
            Set of common trace keyword arrays.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TraceType">
            <summary>
            This class is used for back-compat with code that was previously using the TraceType
            enum.  This will be replaced in the future, once all uses of TraceType have been
            replaced with keywords.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationTraceSettings">
            <summary>
            TeamFoundation trace settings class.
            
            This class manages:
            
                - Trace keywords used with the .NET tracing system
                - TextFileTraceListener used to log trace output to file
                - Event provider used to send events to ETW logging sessions
            </summary>
            <remarks>
            Keywords are currently only supported for .NET tracing.  To set specific keyword
            tracing levels, one of the approaches to change the keywords must be used.  These
            include modifying the app config file, using the tftrace.ashx web page, changing
            the tracing keywords via commands in the client app (DTE, UI), etc.
            
            When an ETW logging session connects to our event provider, tracing will be automatically
            enabled.  The ETW trace level is mapped to our override level.  In other words, if
            an ETW session is logging errors, we enable all tracing for errors, regardless of keyword.
            Keywords are not currently supported for ETW because each event has a keyword bit set
            with only 48 slots available.  This is not as flexible as our dynamic string keywords and
            we cannot easily map between the two.
            
            An ETW logging session can be managed with these commands:
            
                (replace LEVEL_NUM with a # where 0=Any, 1=Critical, 2=Error, 3=Warning, 4=Info, 5=Verbose)
            
                logman start mysession -p {78EB1F5E-D85E-4FFF-AF60-8F3B4051E50D} 0 LEVEL_NUM -o C:\TFTraceOutput.etl -ets
                logman stop mysession -ets
            
            This will give you TFTraceOutput.etl binary output file, which can be converted to XML:
            
                tracerpt TFTraceOutput.etl
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.#ctor">
            <summary>
            Constructor.
            </summary>
            <remarks>
            Trace switches are obtained from the application's configuration settings
            (which may be in a database or web.config file).
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTraceSettings.IsTracingEnabled">
            <summary>
            Master switch that enables or disables tracing.  This switch is used
            as a global switch that is checked to see if tracing is enabled before
            doing keyword lookup for specific switches.  This is a perf optimization
            for the case where no tracing is enabled.
            </summary>
            <remarks>
            NOTE: The getter for this property is intentionally not surrounded by a
            read lock for performance reasons.  The read of the boolean should be an
            atomic operation.  The setter is only called from within code that has
            already obtained a write lock.
            </remarks>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.IsOverrideEnabled(System.Diagnostics.TraceLevel)">
            <summary>
            Check to see if the override is enabled for the specified trace level.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTraceSettings.OverrideLevel">
            <summary>
            Global trace switch to set a tracing level for all keywords.  This allows the caller
            to easily turn on all tracing at the specified TraceLevel.
            </summary>
            <remarks>
            NOTE: The getter for this property is intentionally not surrounded by a
            read lock for performance reasons.  The read of the integer should be an
            atomic operation.
            
            NOTE: ETW uses bitflags for keywords, so they cannot be mapped directly
                  to our unlimited dynamic string keywords.  Therefore, ETW session
                  trace levels are currently only mapped to the override level, and
                  keywords are not checked.
            </remarks>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTraceSettings.Item(System.String)">
            <summary>
            Get/set the trace level for the specified keyword.
            
            NOTE: ETW uses bitflags for keywords, so they cannot be mapped directly
                  to our unlimited dynamic string keywords.  Therefore, ETW session
                  trace levels are currently only mapped to the override level, and
                  keywords are not checked.
            </summary>
            <param name="keyword">Keyword</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.OriginalTraceLevel(System.String)">
            <summary>
            Returns the TraceLevel for the given keyword that was set in the config file
            </summary>
            <param name="keyword">the keyword to look up</param>
            <returns>The trace level or Off if not found</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.GetEnabledKeywords">
            <summary>
            Get a list of the enabled keywords and their trace levels.  Keywords that are disabled
            are not included since they are usually not kept in the internal dictionary.
            </summary>
            <returns>SortedDictionary of keyword to trace level.</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.GetTraceSwitch(System.String,System.Boolean)">
            <summary>
            Get the trace switch for the specified keyword.
            
            IMPORTANT: This method accesses the dictionary but does not do any locking.
            This is intentional since it returns a TraceSwitch from the dictionary that
            may be modified afterward.  The caller must wrap the GetTraceSwitch call and
            any use of the returned TraceSwitch with the appropriate locking using
            m_switchLock.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.GetTraceSwitchesFromConfiguration">
            <summary>
            Get the trace switches that exist in the config file (.exe.config, web.config, etc).
            </summary>
            <returns>List of trace switch names found in the configuration</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.UpdateTracingEnabledFlag">
            <summary>
            Update the global tracing enabled switch based on the values of the existing trace
            switches.
            
            IMPORTANT: This method accesses the dictionary but does not do any locking.
            This is intentional since it is always called just after a block of code that
            has already obtained a write lock.  The caller should call this while still
            inside the write lock.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTraceSettings.MillisecondsElapsed">
            <summary>
            Get the milliseconds that have elapsed since this class was created.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.InitializeTraceWriter">
            <summary>
            Initialize the trace writer (if configured).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.EnableLogging(System.String)">
            <summary>
            Enable trace logging to the specified path.
            </summary>
            <param name="path">Filename for the log file.  Pass null to be given
            a default filename (likely in the %TEMP% dir).</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.DisableLogging">
            <summary>
            Disable trace logging.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTraceSettings.IsLogging">
            <summary>
            Returns true if trace logging is active.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTraceSettings.LogFileName">
            <summary>
            Returns the log filename if trace logging is active.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTraceSettings.IsEventProviderSessionActive">
            <summary>
            Check to see if any ETW session is active for our event provider.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTraceSettings.ConvertLevelToETW(System.Diagnostics.TraceLevel)">
            <summary>
            Convert the .NET TraceLevel to an ETW event level.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.ITeamFoundationTraceable">
            <summary>
            Interface for customizing TeamFoundationTrace output.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.ITeamFoundationTraceable.GetTraceString(System.Diagnostics.TraceLevel)">
            <summary>
            Get the string representation of this object for trace output.  The trace
            level should be taken into consideration when building the string.
            </summary>
            <param name="traceLevel">Trace level</param>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationTrace">
            <summary>
            Team Foundation tracing.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTrace.IsTracingEnabled">
            <summary>
            Check to see if tracing is enabled.  For efficiency, this method can be
            called before any other trace methods that would do more work (keyword
            lookup, etc).
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.IsTracing(System.String)">
            <summary>
            Check to see if tracing is enabled for any of the specified keywords.
            </summary>
            <param name="keyword">Keyword</param>
            <returns>True if tracing is enabled for any of the keywords</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.IsTracing(System.String[])">
            <summary>
            Check to see if tracing is enabled for any of the specified keywords.
            </summary>
            <param name="keywords">One or more keywords</param>
            <returns>True if tracing is enabled for any of the keywords</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.IsTracing(System.String,System.Diagnostics.TraceLevel)">
            <summary>
            Check to see if tracing is enabled at the specified level for any of the keywords.
            </summary>
            <param name="keyword">One or more keywords</param>
            <param name="traceLevel">Trace level</param>
            <returns>True if tracing is enable for any of the keywords at the trace level</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.IsTracing(System.String[],System.Diagnostics.TraceLevel)">
            <summary>
            Check to see if tracing is enabled at the specified level for any of the keywords.
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="traceLevel">Trace level</param>
            <returns>True if tracing is enable for any of the keywords at the trace level</returns>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTrace.IsLogging">
            <summary>
            Returns true if trace logging is active.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTrace.LogFileName">
            <summary>
            Returns the log filename if trace logging is active.  If not
            active, this returns null.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.EnableLogging(System.String)">
            <summary>
            Enable trace logging.
            </summary>
            <param name="path">Filename for the log file.  Pass null to be given
            a default filename (likely in the %TEMP% dir).</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.DisableLogging">
            <summary>
            Disable trace logging.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TraceAndDebugFailException(System.Exception)">
            <summary>
            Write an exception to the trace output and Debug.Fail with the exception message
            </summary>
            <param name="exception">The exception to be traced.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TraceAndDebugFailException(System.String[],System.Exception)">
            <summary>
            Write an exception to the trace output and Debug.Fail with the exception message
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="exception">The exception to be traced.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TraceException(System.Exception)">
            <summary>Write an exception to the trace output</summary>
            <remarks> See overload </remarks>
            <param name="exception">The exception to be traced.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TraceException(System.String[],System.Exception)">
            <summary>
             Write an exception to the trace category output.
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="exception">The exception to be traced.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TraceException(System.String,System.String,System.Exception)">
            <summary>Write an exception to the trace output</summary>
            <remarks>The exception is traced using the General keyword, trace level Error</remarks>
            <param name="message">An application defined message (may be null)</param>
            <param name="method">An application defined method (may be null)</param>
            <param name="exception">The exception that should be traced</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TraceException(System.String[],System.String,System.Exception)">
            <summary>Write an exception to the trace output</summary>
            <remarks>The exception is traced using the General keyword, trace level Error</remarks>
            <param name="keywords">One or more keywords</param>
            <param name="method">An application defined method (may be null)</param>
            <param name="exception">The exception that should be traced</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TraceCallStack(System.String[])">
            <summary>
            TrackStack is used to output the current call stack.
            </summary>
            <param name="keywords">One or more keywords</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.ErrorIf(System.Boolean,System.String)">
            <summary>Conditionally write a message to the trace output</summary>
            <remarks>Uses General keyword, level Error</remarks>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="info">The text message</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.ErrorIf(System.Boolean,System.String,System.Object[])">
            <summary>Conditionally write a message to the trace output</summary>
            <remarks>Uses General keyword, level Error</remarks>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.ErrorIf(System.Boolean,System.String[],System.String,System.Object[])">
            <summary>Conditionally write a message to the trace output</summary>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="keywords">One or more keywords</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Error(System.String)">
            <summary>Write a message to the trace output</summary>
            <remarks>Uses General keyword, level Error</remarks>
            <param name="info">The message to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Error(System.String[],System.String)">
            <summary>Trace a message if the error level is set for the category</summary>
            <param name="keywords">One or more keywords</param>
            <param name="info">The message to write.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Error(System.String,System.Object[])">
            <summary>Write a message to the trace output</summary>
            <remarks>Uses General keyword, level Error</remarks>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Error(System.String[],System.String,System.Object[])">
            <summary>Write a message to the trace output using the specified category</summary>
            <param name="keywords">One or more keywords</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Error(System.String,System.Exception)">
            <summary>Write an exception to the trace output</summary>
            <remarks>Uses General keyword, level Error</remarks>
            <param name="info">The message giving exception context</param>
            <param name="exception">The exception to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Error(System.String[],System.Exception)">
            <summary>Write an exception to the trace output</summary>
            <remarks>Uses General keyword, level Error</remarks>
            <param name="keywords">One or more keywords</param>
            <param name="exception">The exception to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Error(System.String[],System.String,System.String,System.Exception)">
            <summary>
            Write an exception, info, and method to the trace output
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="info">Application defined information (may be null)</param>
            <param name="method">Application defined method (may be null)</param>
            <param name="exception">The exception to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.WarningIf(System.Boolean,System.String)">
            <summary>Conditionally write a message to the trace output</summary>
            <remarks>Uses General keyword, level Warning</remarks>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="info">The text message</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Warning(System.String)">
            <summary>Write a message to the trace output</summary>
            <remarks>Uses General keyword, level Warning</remarks>
            <param name="info">The message to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Warning(System.String,System.Object[])">
            <summary>Write a message to the trace output</summary>
            <remarks>Uses General keyword, level Warning</remarks>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.WarningIf(System.Boolean,System.String,System.Object[])">
            <summary>Conditionally write a message to the trace output</summary>
            <remarks>Uses General keyword, level Warning</remarks>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.WarningIf(System.Boolean,System.String[],System.String,System.Object[])">
            <summary>Conditionally write a message to the trace output</summary>
            <param name="keywords">One or more keywords</param>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Warning(System.String[],System.String,System.Object[])">
            <summary>Write a message to the trace output</summary>
            <param name="keywords">One or more keywords</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Warning(System.String[],System.String)">
            <summary>Trace a message if the warning level is set for the keyword</summary>
            <param name="keywords">One or more keywords</param>
            <param name="info">The message to write.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.InfoIf(System.Boolean,System.String)">
            <summary>Conditionally write a message to the trace output</summary>
            <remarks>Uses General keyword, level Info</remarks>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="info">The text message</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Info(System.String,System.Object[])">
            <summary>Write a message to the trace output</summary>
            <remarks>Uses General keyword, level Info</remarks>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.InfoIf(System.Boolean,System.String,System.Object[])">
            <summary>Conditionally write a message to the trace output</summary>
            <remarks>Uses General keyword, level Info</remarks>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.InfoIf(System.Boolean,System.String[],System.String,System.Object[])">
            <summary>Conditionally write a message to the trace output</summary>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="keywords">One or more keywords</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Info(System.String)">
            <summary>Write a message to the trace output</summary>
            <remarks>Uses General keyword, level Info</remarks>
            <param name="information">The message to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Info(System.String[],System.String,System.Object[])">
            <summary>Write a message to the trace output</summary>
            <param name="keywords">One or more keywords</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Info(System.String[],System.String)">
            <summary>Trace a message if the info level is set for the keywords</summary>
            <param name="keywords">One or more keywords</param>
            <param name="information">The message to write.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Verbose(System.String)">
            <summary>Write a message to the trace output</summary>
            <remarks>Uses General keyword, level Verbose</remarks>
            <param name="info">The message to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.VerboseIf(System.Boolean,System.String)">
            <summary>Conditionally write a message to the trace output</summary>
            <remarks>Uses General keyword, level Verbose</remarks>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="info">The text message</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.VerboseIf(System.Boolean,System.String,System.Object[])">
            <summary>Conditionally write a message to the trace output</summary>
            <remarks>Uses General keyword, level Verbose</remarks>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.VerboseIf(System.Boolean,System.String[],System.String,System.Object[])">
            <summary>Conditionally write a message to the trace output</summary>
            <param name="condition">Condition, which if true, causes the message to be traced</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Verbose(System.String,System.Object[])">
            <summary>Write a message to the trace output</summary>
            <remarks>Uses General keyword, level Verbose</remarks>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Verbose(System.String[],System.String,System.Object[])">
            <summary>Write a message to the trace output</summary>
            <param name="keywords">One or more keywords</param>
            <param name="format">The string format to which args is applied</param>
            <param name="args">One or more aguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Verbose(System.String[],System.String)">
            <summary>Trace a message if the verbose level is set for the keywords</summary>
            <param name="keywords">One or more keywords</param>
            <param name="info">The message to write.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.WriteLine(System.String[],System.Diagnostics.TraceLevel,System.String,System.Object[])">
            <summary>
            Write a formatted message to the output.  The args will be inspected and certain types
            will be handled specially.
            
                ITeamFoundationTraceable - Call GetTraceString to get trace representation.
            
                ICollection - If any ICollections are found, their contents are written out one
                              item per line.  This avoids building a string representation for the
                              entire collection in memory.
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="level">Trace level</param>
            <param name="format">Format string</param>
            <param name="args">Arguments</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.WriteLine(System.String[],System.Diagnostics.TraceLevel,System.String)">
            <summary>Write a message to the trace output</summary>
            <param name="keywords">One or more keywords</param>
            <param name="level">The trace level governing the message output</param>
            <param name="info">The message to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.WriteLine(System.Text.StringBuilder,System.Diagnostics.TraceLevel)">
            <summary>Write a message to the trace output</summary>
            <param name="formattedInfo">Formatted string</param>
            <param name="level">The trace level governing the message output</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.GetStringBuilder(System.String[],System.Diagnostics.TraceLevel)">
            <summary>
            Get a StringBuilder that already contains the trace header.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Enter(System.String)">
            <summary>
            See overload
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Enter(System.String[],System.String)">
            <summary>
            See overload
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Enter(System.String[],System.Diagnostics.TraceLevel,System.String)">
            <summary>
            Start a nested trace block; the block is completed using Exit()
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="level">The trace level required to write the message</param>
            <param name="info">The message to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.SafeEnter(System.String[],System.Diagnostics.TraceLevel,System.String)">
            <summary>
            Start a nested trace block; the block is completed using Exit().
            Returns a "trace token" value that should be passed to SafeExit() to ensure correct 
            elapsed times if caller avoids overhead by not enclosing Exit() in finally blocks.
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="level">The trace level required to write the message</param>
            <param name="info">The message to write</param>
            <returns>"Trace token" value that should be passed to SafeExit()</returns>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Exit(System.String)">
            <summary>
             See overload.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Exit(System.String[],System.String)">
            <summary>
             See overload.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.Exit(System.String[],System.Diagnostics.TraceLevel,System.String)">
            <summary>
             Complete a nested trace block created by Enter()
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="level">The trace level required to write the message</param>
            <param name="info">The message to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.SafeExit(System.Int32,System.String[],System.Diagnostics.TraceLevel,System.String)">
            <summary>
             Complete a nested trace block created by SafeEnter()
            </summary>
            <param name="traceToken">Value returned from matching call to SafeEnter()</param>
            <param name="keywords">One or more keywords</param>
            <param name="level">The trace level required to write the message</param>
            <param name="info">The message to write</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.MethodEntry(System.Object[])">
            <summary>See overload</summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.MethodEntry(System.Int32,System.Object[])">
             <summary>Trace entry into a method, including the method's signature</summary>
             <remarks>
             The API traceswitch setting determines whether any trace output appears
             This method is only available in DEBUG builds.
            
             The 'depth' parameter is useful when a utility function is invoking this function
             and the actual method of interest is "above" the utility function.
             </remarks>
             <param name="depth">Indicates how many frames "up" the stack the method signature of interest is.</param>
             <param name="parameters">The parameter(s), if any, associated with the method</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.MethodExit">
            <summary>See overload</summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.MethodExit(System.Int32)">
            <summary>Trace method exit, including the method's signature</summary>
            <remarks>
            The API traceswitch setting determines whether any trace output appears
            This method is only available in DEBUG builds.
            </remarks>
            <param name="depth">Indicates how many frames "up" the stack the method signature of interest is.</param>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.ReportErrorCondition(System.String[],System.String,System.String,System.Exception)">
            <summary>
            Trace an exception and a message.
            </summary>
            <param name="keywords">One or more keywords</param>
            <param name="info">Message</param>
            <param name="method">Method name</param>
            <param name="e">Exception</param>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTrace.TraceSettings">
            <summary>
            Return the TraceSettings configured. The trace settings are a collection
            of trace switches.  These are contained in a separate class so they can be
            lazily instantiated on first use.
            </summary>
        </member>
        <member name="T:Microsoft.TeamFoundation.TeamFoundationTrace.TeamFoundationTraceFormatter">
            <summary>
            TeamFoundationTrace formatter class.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TeamFoundationTraceFormatter.Create(System.Diagnostics.TraceLevel)">
            <summary>
            Create a trace formatter for the specified trace level.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TeamFoundationTraceFormatter.CreateFormatters">
            <summary>
            Create a formatter for each trace level.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TeamFoundationTraceFormatter.#ctor(System.Diagnostics.TraceLevel)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.TeamFoundation.TeamFoundationTrace.TeamFoundationTraceFormatter.TraceLevel">
            <summary>
            Get the trace level for this formatter.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TeamFoundationTraceFormatter.GetFormat(System.Type)">
            <summary>
            Get the format provider for the specified type.
            </summary>
        </member>
        <member name="M:Microsoft.TeamFoundation.TeamFoundationTrace.TeamFoundationTraceFormatter.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Format the argument.
            </summary>
        </member>
    </members>
</doc>
